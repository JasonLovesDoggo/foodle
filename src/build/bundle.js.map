{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/seedrandom/lib/alea.js","../../node_modules/seedrandom/lib/xor128.js","../../node_modules/seedrandom/lib/xorwow.js","../../node_modules/seedrandom/lib/xorshift7.js","../../node_modules/seedrandom/lib/xor4096.js","../../node_modules/seedrandom/lib/tychei.js","../../node_modules/seedrandom/seedrandom.js","../../node_modules/seedrandom/index.js","../enums.ts","../words_5.ts","../utils.ts","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/store/index.mjs","../stores.ts","../components/GameIcon.svelte","../components/Header.svelte","../components/board/Tile.svelte","../components/board/Row.svelte","../components/widgets/Definition.svelte","../components/widgets/ContextMenu.svelte","../components/board/Board.svelte","../components/keyboard/Key.svelte","../components/keyboard/Keyboard.svelte","../components/Modal.svelte","../components/settings/Switch.svelte","../components/settings/DropDown.svelte","../components/settings/Setting.svelte","../components/settings/Settings.svelte","../components/widgets/Seperator.svelte","../components/widgets/Share.svelte","../components/widgets/Tutorial.svelte","../components/widgets/Contact.svelte","../components/widgets/ChangeLog.svelte","../components/widgets/Timer.svelte","../components/widgets/Toaster.svelte","../components/widgets/Tips.svelte","../components/widgets/Updater.svelte","../components/widgets/ShareGame.svelte","../components/widgets/stats/Stat.svelte","../components/widgets/stats/Statistics.svelte","../components/widgets/stats/Distribution.svelte","../../node_modules/js-cookie/dist/js.cookie.mjs","../components/widgets/gdprCookies.svelte","../components/Game.svelte","../App.svelte","../main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","export enum GameMode {\r\n\t\"daily\",\r\n\t\"hourly\",\r\n\t\"infinite\",\r\n}\r\n","const words =\r\n{'words': ['fresh', 'crust', 'serve', 'flesh', 'seedy', 'corny', 'salad', 'spicy', 'kebab', 'pulpy', 'vodka', 'peach', 'drink', 'tangy', 'sugar', 'aroma', 'shake', 'spill', 'brine', 'sweet', 'mince', 'olive', 'zesty', 'scrap', 'apron', 'cacao', 'bland', 'quart', 'smear', 'patty', 'hunky', 'treat', 'fungi', 'booze', 'thyme', 'grate', 'soggy', 'enjoy', 'mocha', 'smoke', 'lunch', 'paste', 'carve', 'apple', 'honey', 'cream', 'diner', 'onion', 'juicy', 'icing', 'whisk', 'sushi', 'candy', 'grape', 'burnt', 'dough', 'trout', 'filet', 'donut', 'bread', 'dairy', 'tasty', 'puree', 'diary', 'penne', 'ramen', 'fishy', 'steak', 'caper', 'pizza', 'plate', 'broil', 'cumin', 'gravy', 'yeast', 'cider', 'creme', 'grill', 'flour', 'beefy', 'scone', 'toast', 'saucy', 'spice', 'feast', 'syrup', 'maize', 'cocoa', 'mango', 'chili', 'salty', 'pesto', 'salsa', 'spoon', 'crepe', 'water', 'briny', 'bagel', 'melon', 'pasta', 'taffy', 'basil', 'wafer', 'snack', 'bacon', 'juice', 'wheat', 'berry', 'fruit', 'sauce', 'fried', 'baste', 'pecan', 'curry', 'lemon', 'latte', 'broth', 'guava', 'fudge', 'femur', 'gourd', 'saute', 'flans', 'oreos', 'heinz', 'bhaji', 'torte', 'crisp', 'chips', 'anise', 'punch', 'tuber', 'ugali', 'ladle', 'beans', 'spuds', 'stove', 'spork', 'herbs', 'lager', 'seeds', 'liver', 'namul', 'lassi', 'ranch', 'cater', 'manti', 'straw', 'grain', 'crabs', 'jelly', 'adobo', 'taste', 'pilaf', 'mochi', 'vegan', 'latke', 'munch', 'queso', 'curds', 'roast', 'fries', 'chard', 'mints', 'minty', 'dates', 'clams', 'prune', 'aspic', 'rujak', 'gummy', 'cakes', 'baozi'], 'valid': ['aahed', 'aalii', 'aargh', 'aaron', 'abaca', 'abaci', 'aback', 'abada', 'abaff', 'abaft', 'abaka', 'abama', 'abamp', 'aband', 'abase', 'abash', 'abask', 'abate', 'abaue', 'abave', 'abaze', 'abbas', 'abbey', 'abbes', 'abbie', 'abbot', 'abdal', 'abdat', 'abdom', 'abeam', 'abear', 'abede', 'abele', 'abend', 'aberr', 'abets', 'abhor', 'abide', 'abidi', 'abies', 'abyes', 'abilo', 'abime', 'abysm', 'abyss', 'abkar', 'abler', 'ables', 'ablet', 'ablow', 'abmho', 'abner', 'abnet', 'abode', 'abody', 'abohm', 'aboil', 'aboma', 'aboon', 'abord', 'abort', 'abote', 'about', 'above', 'abray', 'abram', 'abret', 'abrim', 'abrin', 'abris', 'abrus', 'absee', 'absey', 'absis', 'absit', 'abstr', 'abuna', 'abune', 'abura', 'abuse', 'abush', 'abuta', 'abuts', 'abuzz', 'abwab', 'acale', 'acana', 'acapu', 'acara', 'acari', 'acast', 'acate', 'accel', 'accoy', 'accra', 'accts', 'accum', 'accur', 'accus', 'acedy', 'acerb', 'aceta', 'achar', 'ached', 'achen', 'acher', 'aches', 'achoo', 'achor', 'acidy', 'acids', 'acier', 'acies', 'acyls', 'acing', 'acini', 'ackee', 'ackey', 'acker', 'aclys', 'acmes', 'acmic', 'acned', 'acnes', 'acock', 'acoin', 'acold', 'acoma', 'acone', 'acool', 'acorn', 'acost', 'acoup', 'acrab', 'acred', 'acres', 'acrid', 'acryl', 'acroa', 'acron', 'acrux', 'acted', 'actin', 'acton', 'actor', 'actos', 'actus', 'acuan', 'acute', 'adage', 'adagy', 'adays', 'adams', 'adapa', 'adapt', 'adati', 'adaty', 'adawe', 'adawn', 'adcon', 'addax', 'addda', 'added', 'adder', 'addie', 'addio', 'addis', 'addle', 'addnl', 'adead', 'adeem', 'adeep', 'adela', 'adeps', 'adept', 'adfix', 'adiel', 'adieu', 'adion', 'adios', 'adyta', 'adits', 'adjag', 'adlai', 'adlay', 'adlet', 'adman', 'admen', 'admin', 'admit', 'admix', 'admov', 'admrx', 'adnex', 'adobe', 'adolf', 'adopt', 'adore', 'adorn', 'adown', 'adoxa', 'adoxy', 'adoze', 'adpao', 'adrad', 'adret', 'adrip', 'adrop', 'adrue', 'adsum', 'adult', 'adunc', 'adure', 'adusk', 'adust', 'adzer', 'adzes', 'aecia', 'aedes', 'aeger', 'aegir', 'aegis', 'aegle', 'aeons', 'aequi', 'aeric', 'aerie', 'aeron', 'aesir', 'aesop', 'aetat', 'aevia', 'aevum', 'aface', 'afara', 'afars', 'afear', 'affix', 'afgod', 'afifi', 'afire', 'aflat', 'afley', 'aflow', 'afoam', 'afoot', 'afore', 'afoul', 'afray', 'afret', 'afric', 'afrit', 'afros', 'after', 'agada', 'agade', 'again', 'agama', 'agami', 'agamy', 'agape', 'agars', 'agasp', 'agast', 'agata', 'agate', 'agaty', 'agave', 'agaze', 'agena', 'agend', 'agene', 'agent', 'agers', 'agete', 'agger', 'aggie', 'aggry', 'aggro', 'aggur', 'aghan', 'aghas', 'agiel', 'agile', 'aging', 'agios', 'agism', 'agist', 'aglee', 'agley', 'aglet', 'aglow', 'agmas', 'agnat', 'agnel', 'agnes', 'agnus', 'agoge', 'agoho', 'agone', 'agony', 'agons', 'agora', 'agrah', 'agral', 'agree', 'agria', 'agric', 'agrin', 'agrom', 'agron', 'agsam', 'aguey', 'agues', 'agura', 'agush', 'agust', 'ahead', 'aheap', 'ahems', 'ahind', 'ahint', 'ahmed', 'ahmet', 'ahold', 'aholt', 'ahong', 'ahsan', 'ahull', 'ahunt', 'ahura', 'ahush', 'ahwal', 'ayahs', 'aided', 'aider', 'aides', 'ayelp', 'ayens', 'aiery', 'aiger', 'aigre', 'ayins', 'ailed', 'aylet', 'ailie', 'aillt', 'ayllu', 'aimak', 'aimed', 'aimee', 'aimer', 'ainee', 'ainoi', 'ainus', 'aioli', 'ayond', 'ayont', 'ayous', 'airan', 'aired', 'airer', 'airns', 'airth', 'airts', 'aisle', 'aitch', 'aitis', 'ayuyu', 'aiver', 'aiwan', 'aizle', 'ajaja', 'ajari', 'ajava', 'ajhar', 'ajiva', 'ajuga', 'akala', 'akali', 'akasa', 'akebi', 'akees', 'akeki', 'akela', 'akene', 'aking', 'akkad', 'aknee', 'aknow', 'akpek', 'akron', 'akule', 'akund', 'alack', 'alada', 'alain', 'alaki', 'alala', 'alamo', 'aland', 'alane', 'alang', 'alani', 'alans', 'alant', 'alapa', 'alary', 'alarm', 'alate', 'alawi', 'alban', 'albas', 'albee', 'albin', 'albyn', 'album', 'albus', 'alcae', 'alces', 'alcid', 'alcor', 'alday', 'aldea', 'alden', 'alder', 'aldim', 'aldol', 'aldus', 'aleak', 'aleck', 'alecs', 'alefs', 'aleft', 'alenu', 'aleph', 'alert', 'aleut', 'alfas', 'alfet', 'alfin', 'alfur', 'algae', 'algal', 'algas', 'algic', 'algid', 'algin', 'algol', 'algor', 'algum', 'alhet', 'alias', 'alibi', 'alice', 'alick', 'alida', 'alids', 'alien', 'aliet', 'alife', 'alifs', 'align', 'aliya', 'alike', 'alima', 'aline', 'alish', 'aliso', 'alisp', 'alist', 'alite', 'ality', 'alive', 'alkes', 'alkyd', 'alkyl', 'alkin', 'allah', 'allay', 'allan', 'alley', 'allen', 'aller', 'allez', 'allie', 'allyl', 'allis', 'allod', 'alloy', 'alloo', 'allot', 'allow', 'almah', 'alman', 'almas', 'almeh', 'almes', 'almon', 'almud', 'almug', 'alnus', 'alody', 'aloed', 'aloes', 'aloft', 'alogy', 'aloha', 'aloid', 'aloin', 'alois', 'aloma', 'alone', 'along', 'aloof', 'alosa', 'alose', 'aloud', 'alout', 'alowe', 'alpax', 'alpen', 'alpha', 'alpid', 'altar', 'alter', 'altho', 'altin', 'altos', 'altun', 'altus', 'aluco', 'alula', 'alums', 'alure', 'aluta', 'alvah', 'alvan', 'alvar', 'alvia', 'alvin', 'alvus', 'alway', 'amaas', 'amadi', 'amaga', 'amahs', 'amain', 'amala', 'amalg', 'amang', 'amani', 'amant', 'amapa', 'amara', 'amass', 'amate', 'amati', 'amaut', 'amaze', 'ambay', 'amban', 'ambar', 'ambas', 'amber', 'ambit', 'amble', 'ambon', 'ambos', 'ambry', 'ameba', 'ameed', 'ameen', 'ameer', 'amelu', 'amend', 'amene', 'amens', 'ament', 'amess', 'amhar', 'amias', 'amice', 'amici', 'amide', 'amido', 'amids', 'amies', 'amiga', 'amigo', 'amylo', 'amyls', 'amine', 'amini', 'amino', 'amins', 'amire', 'amirs', 'amish', 'amiss', 'amita', 'amity', 'amlet', 'amman', 'ammer', 'ammos', 'amnia', 'amnic', 'amoke', 'amoks', 'amole', 'among', 'amora', 'amort', 'amour', 'amove', 'amowt', 'amper', 'amphi', 'ampyx', 'ample', 'amply', 'ampul', 'amrit', 'amsel', 'amuck', 'amula', 'amuse', 'amuze', 'amvis', 'amzel', 'anabo', 'anack', 'anama', 'anana', 'anasa', 'ancha', 'ancle', 'ancon', 'ancor', 'ancre', 'andes', 'andia', 'andor', 'andre', 'anear', 'anele', 'anend', 'anent', 'angas', 'angel', 'anger', 'angia', 'angie', 'angka', 'angle', 'anglo', 'angor', 'angry', 'angst', 'angus', 'anhyd', 'aniba', 'anice', 'anigh', 'anile', 'anils', 'anima', 'anime', 'animi', 'animo', 'anion', 'anita', 'anjan', 'anjou', 'ankee', 'anker', 'ankhs', 'ankle', 'ankou', 'ankus', 'anlas', 'anlet', 'anlia', 'anmia', 'annal', 'annam', 'annas', 'annat', 'annet', 'annex', 'annie', 'anniv', 'annoy', 'annot', 'annul', 'annum', 'annus', 'anoas', 'anode', 'anoia', 'anoil', 'anole', 'anoli', 'anomy', 'anorn', 'anour', 'anous', 'anova', 'ansae', 'ansar', 'ansel', 'anser', 'antae', 'antal', 'antar', 'antas', 'anted', 'antes', 'antic', 'antiq', 'antis', 'anton', 'antra', 'antre', 'antsy', 'antum', 'anura', 'anury', 'anvil', 'anzac', 'aoife', 'aorta', 'aotea', 'aotes', 'aotus', 'aouad', 'apace', 'apaid', 'apair', 'apama', 'apart', 'apass', 'apast', 'apeak', 'apeek', 'apery', 'apers', 'apert', 'aperu', 'aphid', 'aphis', 'aphra', 'apian', 'apiin', 'apili', 'apina', 'aping', 'apiol', 'apios', 'apish', 'apism', 'apium', 'apnea', 'apoda', 'apods', 'apoop', 'aport', 'apout', 'appay', 'appal', 'appar', 'appel', 'appet', 'apply', 'appmt', 'appro', 'apptd', 'appui', 'apres', 'april', 'apses', 'apsid', 'apsis', 'aptal', 'apter', 'aptly', 'aquae', 'aquas', 'araba', 'araby', 'arabs', 'araca', 'arace', 'arach', 'arado', 'arage', 'arain', 'arake', 'araks', 'aramu', 'arank', 'arara', 'araru', 'arase', 'arati', 'araua', 'arawa', 'arber', 'arbor', 'arcae', 'arced', 'arces', 'archd', 'arche', 'archy', 'archt', 'arcos', 'arcus', 'ardea', 'ardeb', 'arder', 'ardor', 'ardri', 'aread', 'areae', 'areal', 'arean', 'arear', 'areas', 'areca', 'areek', 'areel', 'arefy', 'areic', 'arena', 'arend', 'areng', 'arent', 'arere', 'arest', 'arete', 'argal', 'argan', 'argas', 'argel', 'argid', 'argil', 'argin', 'argle', 'argol', 'argon', 'argos', 'argot', 'argue', 'argus', 'arhar', 'arhat', 'arian', 'aryan', 'arias', 'ariel', 'aries', 'ariki', 'arils', 'aryls', 'arioi', 'arion', 'ariot', 'arise', 'arish', 'arist', 'arite', 'arith', 'arius', 'arjun', 'arkab', 'arkie', 'arles', 'armed', 'armer', 'armet', 'armil', 'armit', 'armor', 'arneb', 'arnee', 'arnut', 'aroar', 'arock', 'aroid', 'aroon', 'aroph', 'arose', 'arpen', 'arrah', 'array', 'arras', 'arrau', 'arret', 'arrgt', 'arrha', 'arrie', 'arris', 'arrow', 'arroz', 'arses', 'arsyl', 'arsis', 'arsle', 'arson', 'artal', 'artar', 'artel', 'arter', 'artha', 'artic', 'artie', 'artly', 'artou', 'artsy', 'artus', 'aruac', 'aruke', 'arulo', 'arums', 'arupa', 'arusa', 'arval', 'arvel', 'arvos', 'arzan', 'arzun', 'asale', 'asana', 'asaph', 'asarh', 'ascan', 'ascii', 'ascon', 'ascot', 'ascry', 'ascus', 'asdic', 'asgmt', 'ashed', 'ashen', 'asher', 'ashes', 'ashet', 'ashir', 'ashot', 'ashur', 'asian', 'aside', 'asyla', 'asyle', 'async', 'askar', 'asked', 'asker', 'askew', 'askip', 'askoi', 'askos', 'aslop', 'asoak', 'asoka', 'aspca', 'aspen', 'asper', 'aspis', 'assai', 'assay', 'assam', 'asses', 'asset', 'assis', 'assoc', 'assot', 'astay', 'astel', 'aster', 'astir', 'astor', 'astre', 'astur', 'asuri', 'asway', 'aswim', 'atake', 'atame', 'atavi', 'ataxy', 'ateba', 'atees', 'ately', 'atelo', 'athar', 'athel', 'atilt', 'atimy', 'ating', 'atypy', 'atlas', 'atlee', 'atman', 'atmas', 'atmid', 'atmos', 'atnah', 'atoke', 'atole', 'atoll', 'atomy', 'atoms', 'atone', 'atony', 'atopy', 'atour', 'atren', 'atria', 'atrip', 'attal', 'attar', 'atter', 'attic', 'attid', 'attle', 'attry', 'atule', 'atune', 'atwin', 'aubin', 'aucan', 'aucht', 'audad', 'audio', 'audit', 'aueto', 'augen', 'auger', 'auget', 'aught', 'augur', 'aulae', 'aulas', 'aulic', 'auloi', 'aulos', 'aumil', 'aunty', 'aunts', 'aurae', 'aural', 'aurar', 'auras', 'aurei', 'aures', 'auric', 'auryl', 'aurin', 'aurir', 'auris', 'aurum', 'autem', 'autor', 'autos', 'autre', 'auxil', 'auxin', 'avahi', 'avail', 'avale', 'avant', 'avars', 'avast', 'avell', 'avena', 'aveny', 'avens', 'avera', 'avery', 'avern', 'avers', 'avert', 'avgas', 'avian', 'avick', 'aview', 'avile', 'avine', 'avion', 'aviso', 'avoid', 'avoir', 'avoke', 'avoue', 'avour', 'avowe', 'avows', 'awabi', 'awacs', 'awaft', 'aways', 'await', 'awake', 'awald', 'awalt', 'awane', 'award', 'aware', 'awarn', 'awash', 'awave', 'awber', 'aweek', 'aweel', 'awest', 'aweto', 'awful', 'awhet', 'awhir', 'awide', 'awing', 'awink', 'awiwi', 'awkly', 'awned', 'awner', 'awoke', 'awols', 'awork', 'axels', 'axers', 'axial', 'axile', 'axils', 'axine', 'axing', 'axiom', 'axion', 'axite', 'axled', 'axles', 'axman', 'axmen', 'axoid', 'axone', 'axons', 'azans', 'azide', 'azido', 'azyme', 'azine', 'azlon', 'azoch', 'azofy', 'azoic', 'azole', 'azons', 'azote', 'azoth', 'azoxy', 'aztec', 'azure', 'azury', 'baaed', 'baals', 'babai', 'babas', 'babby', 'babel', 'babes', 'babis', 'babka', 'bable', 'baboo', 'babua', 'babul', 'babus', 'bacao', 'bacca', 'baccy', 'bache', 'bacin', 'bacis', 'backy', 'backs', 'badan', 'baddy', 'badge', 'badju', 'badly', 'badon', 'baffy', 'baffs', 'bafta', 'bagdi', 'bagge', 'baggy', 'bagie', 'bagio', 'bagle', 'bagne', 'bagre', 'bahai', 'bahay', 'baham', 'bahan', 'bahar', 'bahoe', 'bahoo', 'bahts', 'bahur', 'bahut', 'bayal', 'bayed', 'baign', 'baile', 'bailo', 'bails', 'baioc', 'bayok', 'bayou', 'bairn', 'baith', 'baits', 'baiza', 'baize', 'bajan', 'bajau', 'bajra', 'bajri', 'bakal', 'baked', 'baken', 'baker', 'bakes', 'bakie', 'bakli', 'bakra', 'balai', 'balak', 'balan', 'balao', 'balas', 'balat', 'balau', 'baldy', 'balds', 'baled', 'balei', 'baler', 'bales', 'balky', 'balks', 'balli', 'bally', 'ballo', 'balls', 'balmy', 'balms', 'balon', 'baloo', 'balor', 'balow', 'balsa', 'balti', 'balun', 'balut', 'balza', 'bamah', 'banak', 'banal', 'banat', 'banba', 'banca', 'banco', 'banda', 'bande', 'bandh', 'bandi', 'bandy', 'bando', 'bands', 'baned', 'banes', 'banff', 'banga', 'bange', 'bangy', 'bangs', 'bania', 'banya', 'banig', 'banjo', 'banky', 'banks', 'banns', 'banty', 'bantu', 'banus', 'barad', 'barat', 'barba', 'barbe', 'barbs', 'barbu', 'barde', 'bardy', 'bardo', 'bards', 'bared', 'barer', 'bares', 'baret', 'barff', 'barfy', 'barfs', 'barge', 'bargh', 'baria', 'baric', 'barid', 'barie', 'barye', 'barih', 'baris', 'barit', 'barky', 'barks', 'barly', 'barmy', 'barms', 'barny', 'barns', 'baroi', 'baron', 'barra', 'barre', 'barry', 'barse', 'barth', 'basad', 'basal', 'basan', 'basat', 'based', 'baser', 'bases', 'basic', 'basyl', 'basin', 'basis', 'baske', 'basks', 'bason', 'basos', 'bassa', 'bassi', 'bassy', 'basso', 'basta', 'basti', 'basto', 'basts', 'batad', 'batak', 'batan', 'batch', 'batea', 'bated', 'batel', 'bater', 'bates', 'bathe', 'baths', 'batik', 'batis', 'baton', 'batta', 'batty', 'batts', 'battu', 'batwa', 'baubo', 'bauch', 'bauds', 'bauge', 'bauld', 'baulk', 'baume', 'bauno', 'baure', 'bauta', 'bavin', 'bawdy', 'bawds', 'bawke', 'bawly', 'bawls', 'bawra', 'bawty', 'bazar', 'bazoo', 'beach', 'beady', 'beads', 'beaky', 'beaks', 'beala', 'beamy', 'beams', 'beany', 'beano', 'beant', 'beard', 'bearm', 'bears', 'beast', 'beata', 'beath', 'beati', 'beats', 'beaus', 'beaut', 'beaux', 'bebay', 'bebar', 'bebat', 'bebed', 'bebog', 'bebop', 'becap', 'becco', 'beche', 'becky', 'becks', 'becry', 'becut', 'bedad', 'beday', 'bedel', 'beden', 'bedew', 'bedye', 'bedim', 'bedin', 'bedip', 'bedog', 'bedot', 'bedub', 'bedur', 'beech', 'beedi', 'beefs', 'beele', 'beent', 'beeps', 'beery', 'beers', 'beest', 'beeth', 'beety', 'beets', 'beeve', 'befan', 'befit', 'befog', 'befop', 'befur', 'begad', 'begay', 'began', 'begar', 'begat', 'begem', 'beget', 'begin', 'begob', 'begod', 'begot', 'begum', 'begun', 'begut', 'behap', 'behav', 'behen', 'behew', 'beice', 'beige', 'beigy', 'beild', 'being', 'beira', 'beisa', 'bejan', 'bejel', 'bejig', 'bekah', 'bekko', 'belah', 'belay', 'belam', 'belap', 'belar', 'belat', 'belch', 'belee', 'belga', 'belie', 'belis', 'bella', 'belle', 'belli', 'belly', 'bello', 'bells', 'below', 'belts', 'belue', 'belve', 'bemad', 'beman', 'bemar', 'bemas', 'bemat', 'bemba', 'bemix', 'bemol', 'bemud', 'benab', 'bench', 'benda', 'bendy', 'bends', 'benes', 'benet', 'benic', 'benim', 'benin', 'benjy', 'benne', 'benni', 'benny', 'bensh', 'benty', 'bents', 'benzo', 'beode', 'bepat', 'bepaw', 'bepen', 'bepun', 'beray', 'berat', 'beret', 'bergh', 'bergy', 'bergs', 'beryl', 'beryx', 'berme', 'berms', 'berne', 'berob', 'beroe', 'berri', 'berth', 'berun', 'besan', 'besee', 'beset', 'besew', 'besin', 'besit', 'besom', 'besot', 'bespy', 'besra', 'bessi', 'bessy', 'bests', 'betag', 'betas', 'betel', 'betes', 'beths', 'betis', 'beton', 'betsy', 'betso', 'betta', 'betty', 'bevel', 'bever', 'bevil', 'bevor', 'bevue', 'bevvy', 'bewet', 'bewig', 'bewit', 'bewry', 'bezan', 'bezel', 'bezil', 'bezzi', 'bezzo', 'bhaga', 'bhalu', 'bhang', 'bhara', 'bhava', 'bhili', 'bhima', 'bhoot', 'bhuts', 'biabo', 'biali', 'bialy', 'byard', 'bibby', 'bibbs', 'bibio', 'bible', 'bicep', 'bices', 'bichy', 'bidar', 'biddy', 'bided', 'bider', 'bides', 'bidet', 'bidri', 'bidry', 'bield', 'biens', 'biers', 'bifer', 'biffy', 'biffs', 'bifid', 'bigae', 'bigam', 'bigas', 'biggy', 'bigha', 'bight', 'bigly', 'bigot', 'bihai', 'biham', 'bijou', 'biked', 'biker', 'bikes', 'bikie', 'bikol', 'bylaw', 'bilbi', 'bilby', 'bilbo', 'bilch', 'biles', 'bilge', 'bilgy', 'bilic', 'bilin', 'bilio', 'bilks', 'billa', 'billy', 'bills', 'bilos', 'bilsh', 'bimah', 'bimas', 'bimbo', 'binal', 'bindi', 'binds', 'bines', 'binge', 'bingy', 'bingo', 'bynin', 'binit', 'binna', 'binny', 'bints', 'biome', 'biont', 'biose', 'biota', 'byous', 'biped', 'bipod', 'birch', 'birde', 'birdy', 'birds', 'byres', 'birky', 'birks', 'birle', 'birls', 'byrls', 'birma', 'birne', 'birny', 'biron', 'byron', 'birri', 'byrri', 'birrs', 'birse', 'birsy', 'birth', 'bysen', 'bises', 'biset', 'bisie', 'bisks', 'bisme', 'bison', 'byssi', 'bisso', 'bisti', 'bitch', 'bited', 'biter', 'bites', 'bytes', 'bitis', 'bitsy', 'bitte', 'bitty', 'bitts', 'biune', 'bivvy', 'byway', 'bixin', 'bizel', 'bizen', 'bizes', 'bizet', 'blabs', 'black', 'blade', 'blady', 'blaff', 'blahs', 'blayk', 'blain', 'blair', 'blake', 'blame', 'blams', 'blanc', 'blank', 'blare', 'blart', 'blase', 'blash', 'blast', 'blate', 'blats', 'blawn', 'blaws', 'blaze', 'blazy', 'bleak', 'blear', 'bleat', 'blebs', 'bleck', 'bleed', 'bleep', 'blend', 'blenk', 'blens', 'blent', 'blere', 'bless', 'blest', 'blets', 'blibe', 'blick', 'blier', 'blimy', 'blimp', 'blind', 'blini', 'bliny', 'blink', 'blype', 'blips', 'blirt', 'bliss', 'blist', 'blite', 'blitz', 'blizz', 'bloat', 'blobs', 'block', 'blocs', 'bloke', 'blond', 'blood', 'bloom', 'bloop', 'blore', 'blote', 'blots', 'blout', 'blowy', 'blown', 'blows', 'blued', 'bluey', 'bluer', 'blues', 'bluet', 'bluff', 'blume', 'blunk', 'blunt', 'blurb', 'blurs', 'blurt', 'blush', 'board', 'boars', 'boart', 'boast', 'boats', 'bobac', 'bobby', 'bobet', 'bobol', 'bocal', 'bocca', 'bocce', 'bocci', 'boche', 'bocks', 'bocoy', 'boded', 'boden', 'boder', 'bodes', 'bodge', 'bodhi', 'bodle', 'boers', 'boffo', 'boffs', 'bogan', 'bogey', 'boget', 'boggy', 'bogie', 'bogle', 'bogue', 'bogum', 'bogus', 'bohea', 'bohor', 'boyar', 'boyau', 'boyce', 'boyer', 'boiko', 'boyla', 'boily', 'boils', 'boing', 'boyos', 'boise', 'boist', 'boite', 'bokom', 'bokos', 'bolag', 'bolar', 'bolas', 'boldo', 'boldu', 'boled', 'boles', 'bolis', 'bolly', 'bolls', 'bolos', 'bolti', 'bolty', 'bolts', 'bolus', 'bombe', 'bombo', 'bombs', 'bomos', 'bonav', 'bonbo', 'bonce', 'bonds', 'boned', 'boney', 'boner', 'bones', 'bongo', 'bongs', 'bonks', 'bonne', 'bonny', 'bonos', 'bonum', 'bonus', 'bonze', 'booby', 'boobs', 'boodh', 'boody', 'booed', 'booky', 'books', 'booly', 'boomy', 'booms', 'boone', 'boong', 'boonk', 'boons', 'boors', 'boort', 'boose', 'boosy', 'boost', 'booth', 'booty', 'boots', 'boozy', 'borak', 'boral', 'boran', 'boras', 'borax', 'bored', 'boree', 'borel', 'borer', 'bores', 'borgh', 'boric', 'borid', 'boryl', 'boris', 'borne', 'boron', 'borty', 'borts', 'bortz', 'bosch', 'bosey', 'boser', 'bosky', 'bosks', 'bosom', 'boson', 'bossa', 'bossy', 'bosun', 'botan', 'botas', 'botch', 'botel', 'bothy', 'botry', 'botte', 'botts', 'bottu', 'bouch', 'boucl', 'bouet', 'bouge', 'bough', 'boule', 'boult', 'bound', 'bourd', 'bourg', 'bourn', 'bourr', 'bouse', 'bousy', 'bouto', 'bouts', 'bovey', 'bovid', 'bovld', 'bowed', 'bowel', 'bower', 'bowet', 'bowge', 'bowie', 'bowla', 'bowle', 'bowly', 'bowls', 'bowne', 'bowse', 'boxed', 'boxen', 'boxer', 'boxes', 'boxty', 'bozal', 'bozos', 'bozze', 'braca', 'brace', 'brach', 'brack', 'bract', 'brads', 'braes', 'bragi', 'brags', 'brahm', 'braid', 'braye', 'brail', 'brain', 'brays', 'brake', 'braky', 'brame', 'brand', 'brank', 'brans', 'brant', 'brash', 'brass', 'brast', 'brats', 'brava', 'brave', 'bravi', 'bravo', 'brawl', 'brawn', 'braws', 'braxy', 'braza', 'braze', 'break', 'bream', 'breba', 'breck', 'brede', 'bredi', 'breed', 'breek', 'brees', 'breme', 'brens', 'brent', 'brerd', 'brere', 'brest', 'breth', 'brett', 'breva', 'breve', 'brevi', 'brews', 'brian', 'bryan', 'briar', 'bribe', 'bryce', 'brick', 'bride', 'brief', 'brier', 'bries', 'brigs', 'brike', 'brill', 'brims', 'bring', 'brink', 'brins', 'bryon', 'brios', 'brisa', 'brise', 'brisk', 'briss', 'brist', 'brite', 'brith', 'brits', 'britt', 'bryum', 'briza', 'brizz', 'broad', 'broch', 'brock', 'brogh', 'broid', 'broke', 'broll', 'broma', 'brome', 'bromo', 'bronc', 'bronk', 'bronx', 'brood', 'brook', 'brool', 'broom', 'broon', 'broos', 'brose', 'brosy', 'brott', 'browd', 'brown', 'brows', 'brubu', 'bruce', 'bruet', 'brugh', 'bruin', 'bruit', 'bruja', 'brujo', 'bruke', 'brule', 'brume', 'brune', 'bruno', 'brunt', 'brush', 'brusk', 'bruta', 'brute', 'bruzz', 'btise', 'buaze', 'bubal', 'bubas', 'bubba', 'bubby', 'bubos', 'bucca', 'bucco', 'buchu', 'bucky', 'bucko', 'bucks', 'bucku', 'buddh', 'buddy', 'budge', 'budgy', 'bueno', 'buffa', 'buffe', 'buffi', 'buffy', 'buffo', 'buffs', 'bugan', 'buggy', 'bught', 'bugle', 'bugre', 'buhls', 'buhrs', 'buick', 'buyer', 'build', 'built', 'buist', 'bukat', 'bulak', 'bulby', 'bulbs', 'bulge', 'bulgy', 'bulky', 'bulks', 'bulla', 'bully', 'bulls', 'bulse', 'bumbo', 'bumfs', 'bumph', 'bumpy', 'bumps', 'bunce', 'bunch', 'bunco', 'bunda', 'bundh', 'bundy', 'bunds', 'bundt', 'bundu', 'bunga', 'bungy', 'bungo', 'bungs', 'bunya', 'bunko', 'bunks', 'bunny', 'bunns', 'bunty', 'bunts', 'buoys', 'buran', 'burao', 'buras', 'burbs', 'burds', 'burel', 'buret', 'burez', 'burga', 'burge', 'burgh', 'burgs', 'burin', 'burys', 'burka', 'burke', 'burly', 'burls', 'burma', 'burny', 'burns', 'buroo', 'burps', 'burry', 'burro', 'burrs', 'bursa', 'burse', 'burst', 'burut', 'busby', 'bused', 'buses', 'bushi', 'bushy', 'busky', 'busks', 'bussy', 'bussu', 'busti', 'busty', 'busto', 'busts', 'butat', 'butch', 'butea', 'buteo', 'butic', 'butyl', 'butin', 'butyn', 'butyr', 'butle', 'butsu', 'butte', 'butty', 'butts', 'butut', 'buxom', 'buxus', 'buzzy', 'bwana', 'caaba', 'caama', 'cabaa', 'cabal', 'caban', 'cabas', 'cabby', 'cabda', 'caber', 'cabin', 'cabio', 'cable', 'cabob', 'cabot', 'cabre', 'cacam', 'cacan', 'cacas', 'cacei', 'cache', 'cacks', 'cacti', 'cacur', 'caddy', 'caddo', 'cadee', 'cader', 'cades', 'cadet', 'cadew', 'cadge', 'cadgy', 'cadie', 'cadis', 'cados', 'cadre', 'cadua', 'cadus', 'caeca', 'cafes', 'caffa', 'cafiz', 'cafoy', 'caged', 'cagey', 'cager', 'cages', 'caggy', 'cagit', 'cagot', 'cagui', 'cahiz', 'cahot', 'cahow', 'cahuy', 'caids', 'cains', 'cayos', 'caird', 'cairn', 'cairo', 'caite', 'cajan', 'cajon', 'cajou', 'cajun', 'caked', 'cakey', 'caker', 'cakra', 'calas', 'calci', 'caleb', 'calef', 'calfs', 'calic', 'calid', 'calif', 'calin', 'calix', 'calyx', 'calks', 'calla', 'calli', 'callo', 'calls', 'calmy', 'calms', 'calor', 'calve', 'camay', 'caman', 'camas', 'camel', 'cameo', 'cames', 'camis', 'camla', 'campa', 'campe', 'campi', 'campy', 'campo', 'camps', 'camus', 'canal', 'canap', 'canch', 'caned', 'canel', 'caner', 'canes', 'cangy', 'canid', 'canis', 'canli', 'canna', 'canny', 'canoe', 'canon', 'canos', 'canso', 'canst', 'canty', 'canto', 'cants', 'canun', 'canzo', 'caoba', 'capax', 'caped', 'capel', 'capes', 'caphs', 'capoc', 'capon', 'capos', 'capot', 'cappy', 'capra', 'capri', 'capsa', 'caput', 'caque', 'carap', 'carat', 'carby', 'carbo', 'cardo', 'cards', 'cared', 'carey', 'carer', 'cares', 'caret', 'carex', 'carga', 'cargo', 'carya', 'carib', 'carid', 'caryl', 'carks', 'carle', 'carli', 'carlo', 'carls', 'carne', 'carny', 'carns', 'caroa', 'carob', 'carol', 'carom', 'carot', 'carpe', 'carpi', 'carps', 'carri', 'carry', 'carrs', 'carse', 'carte', 'carty', 'carts', 'carua', 'carum', 'carus', 'carvy', 'casal', 'casas', 'casco', 'cased', 'casey', 'casel', 'caser', 'cases', 'casha', 'casky', 'casks', 'casse', 'cassy', 'caste', 'casts', 'casus', 'catan', 'catch', 'catel', 'cates', 'catha', 'cathy', 'catso', 'catti', 'catty', 'catur', 'cauch', 'cauda', 'cauld', 'cauli', 'caulk', 'cauls', 'cauma', 'caupo', 'causa', 'cause', 'cavae', 'caval', 'cavea', 'caved', 'cavey', 'cavel', 'caver', 'caves', 'cavia', 'cavie', 'cavil', 'cavin', 'cavum', 'cavus', 'cawed', 'cawky', 'cawny', 'caxon', 'ccitt', 'ccoya', 'cease', 'cebid', 'cebil', 'cebur', 'cebus', 'cecal', 'cecca', 'cecil', 'cecum', 'cedar', 'ceded', 'ceder', 'cedes', 'cedis', 'cedre', 'cedry', 'ceiba', 'ceibo', 'ceile', 'ceils', 'ceint', 'celeb', 'celia', 'cella', 'celli', 'cello', 'cells', 'celom', 'celts', 'cense', 'centi', 'cento', 'cents', 'ceorl', 'cepes', 'cequi', 'ceral', 'ceras', 'cerat', 'cerci', 'cered', 'cerer', 'ceres', 'ceria', 'ceric', 'ceryl', 'cerin', 'ceros', 'certy', 'cesar', 'cesta', 'ceste', 'cesti', 'cetes', 'cetic', 'cetid', 'cetyl', 'cetin', 'cetus', 'chace', 'chack', 'chaco', 'chads', 'chafe', 'chaff', 'chaft', 'chaga', 'chaya', 'chain', 'chair', 'chais', 'chays', 'chait', 'chaja', 'chaka', 'chalk', 'chama', 'chamm', 'champ', 'chams', 'chane', 'chang', 'chank', 'chant', 'chaos', 'chape', 'chaps', 'chapt', 'chara', 'chare', 'chary', 'chark', 'charm', 'charr', 'chars', 'chart', 'chase', 'chasm', 'chass', 'chati', 'chats', 'chaui', 'chauk', 'chaum', 'chaus', 'chave', 'chawk', 'chawl', 'chawn', 'chaws', 'chazy', 'cheap', 'cheat', 'check', 'cheek', 'cheep', 'cheer', 'cheet', 'chefs', 'chego', 'cheir', 'cheka', 'cheke', 'cheki', 'chela', 'chelp', 'chena', 'cheng', 'chera', 'chere', 'chert', 'chese', 'chess', 'chest', 'cheth', 'cheve', 'chevy', 'chewy', 'chews', 'chyak', 'chiam', 'chian', 'chiao', 'chias', 'chiba', 'chica', 'chich', 'chick', 'chico', 'chics', 'chide', 'chief', 'chiel', 'chien', 'child', 'chile', 'chyle', 'chill', 'chimb', 'chime', 'chyme', 'chimp', 'chimu', 'china', 'chine', 'ching', 'chink', 'chino', 'chins', 'chint', 'chiot', 'chirk', 'chirl', 'chirm', 'chiro', 'chirp', 'chirr', 'chirt', 'chiru', 'chita', 'chits', 'chive', 'chivy', 'chivw', 'chizz', 'chloe', 'chlor', 'choak', 'choca', 'chock', 'choco', 'choel', 'choes', 'choga', 'choya', 'choil', 'choir', 'choke', 'choky', 'choko', 'chola', 'chold', 'choli', 'cholo', 'chomp', 'chonk', 'chook', 'choom', 'choop', 'chopa', 'chops', 'chora', 'chord', 'chore', 'chort', 'chose', 'chott', 'choup', 'chous', 'chout', 'choux', 'chowk', 'chows', 'chria', 'chris', 'chron', 'chubb', 'chubs', 'chuck', 'chude', 'chuet', 'chufa', 'chuff', 'chugs', 'chuje', 'chump', 'chums', 'chung', 'chunk', 'churl', 'churm', 'churn', 'churr', 'chuse', 'chute', 'chwas', 'cyano', 'cyans', 'cyath', 'cibol', 'cicad', 'cycad', 'cycas', 'cicer', 'cycle', 'cyclo', 'cyder', 'cydon', 'cigar', 'cigua', 'cilia', 'cylix', 'cymae', 'cymar', 'cymas', 'cymba', 'cymes', 'cimex', 'cymol', 'cymry', 'cinch', 'cinct', 'cindy', 'cinel', 'cines', 'cynic', 'cions', 'cippi', 'cypre', 'circa', 'circe', 'circs', 'cires', 'cyril', 'cirri', 'cyrus', 'cisco', 'cissy', 'cista', 'cists', 'cysts', 'cital', 'cited', 'citee', 'citer', 'cites', 'cytol', 'cyton', 'citua', 'civet', 'civic', 'civie', 'civil', 'civvy', 'cizar', 'clach', 'clack', 'clade', 'clads', 'claes', 'clags', 'claye', 'claik', 'claim', 'clair', 'clays', 'clake', 'clamb', 'clame', 'clamp', 'clang', 'clank', 'clans', 'clape', 'claps', 'clapt', 'clara', 'clare', 'clary', 'clark', 'claro', 'clart', 'clash', 'clasp', 'class', 'clast', 'claus', 'claut', 'clava', 'clave', 'clavi', 'clavy', 'clawk', 'claws', 'clead', 'cleam', 'clean', 'clear', 'cleat', 'cleck', 'cleek', 'clefs', 'cleft', 'clepe', 'clept', 'clerk', 'cleuk', 'cleve', 'clews', 'clich', 'click', 'clyde', 'clyer', 'cliff', 'clift', 'clima', 'climb', 'clime', 'cline', 'cling', 'clink', 'clint', 'clype', 'clips', 'clipt', 'clite', 'clive', 'cloak', 'cloam', 'clock', 'clods', 'cloes', 'cloff', 'clogs', 'cloys', 'cloit', 'cloke', 'cloky', 'clomb', 'clomp', 'clone', 'clong', 'clonk', 'clons', 'cloof', 'cloop', 'cloot', 'clops', 'close', 'closh', 'clote', 'cloth', 'clots', 'cloud', 'clour', 'clout', 'clove', 'clown', 'cloze', 'clubs', 'cluck', 'clued', 'clues', 'cluff', 'clump', 'clung', 'clunk', 'cnida', 'coach', 'coact', 'coaid', 'coala', 'coaly', 'coals', 'coapt', 'coarb', 'coart', 'coast', 'coati', 'coats', 'coaxy', 'cobby', 'cobbs', 'cobia', 'coble', 'cobol', 'cobra', 'cobus', 'cocao', 'cocas', 'cocci', 'cocco', 'cocin', 'cocky', 'cocks', 'cocle', 'cocos', 'cocus', 'codal', 'codas', 'coddy', 'codec', 'coded', 'coden', 'coder', 'codes', 'codex', 'codol', 'codon', 'coeds', 'coeff', 'coeno', 'coffs', 'cogie', 'cogit', 'cogon', 'cogue', 'cohen', 'cohob', 'cohog', 'cohol', 'cohos', 'cohow', 'cohue', 'coyan', 'coyed', 'coyer', 'coifs', 'coign', 'coyly', 'coils', 'coing', 'coiny', 'coins', 'coyol', 'coyos', 'coypu', 'coirs', 'coked', 'cokey', 'coker', 'cokes', 'cokie', 'colan', 'colas', 'colat', 'colds', 'coley', 'colen', 'coles', 'colet', 'colic', 'colin', 'colla', 'colly', 'colob', 'colog', 'colon', 'color', 'colts', 'colza', 'comae', 'comal', 'coman', 'comas', 'combe', 'comby', 'combo', 'combs', 'comdg', 'comdr', 'comdt', 'comer', 'comes', 'comet', 'comfy', 'comic', 'comid', 'comma', 'comme', 'commy', 'commo', 'comox', 'compd', 'compo', 'comps', 'compt', 'comte', 'comus', 'conal', 'conch', 'concn', 'condo', 'coned', 'coney', 'coner', 'cones', 'confr', 'conga', 'conge', 'congo', 'conia', 'conic', 'conin', 'conky', 'conks', 'conli', 'conny', 'conns', 'connu', 'conoy', 'conor', 'consy', 'const', 'contd', 'conte', 'contg', 'conto', 'contr', 'conus', 'cooba', 'cooch', 'cooed', 'cooee', 'cooey', 'cooer', 'coofs', 'cooja', 'cooky', 'cooks', 'cooly', 'cools', 'coomb', 'coomy', 'coony', 'coons', 'coops', 'coopt', 'coorg', 'coost', 'cooth', 'cooty', 'coots', 'copal', 'coped', 'copei', 'copen', 'coper', 'copes', 'copia', 'copis', 'coppa', 'coppy', 'copps', 'copra', 'copse', 'copsy', 'copus', 'coque', 'corah', 'coral', 'coram', 'coran', 'corbe', 'corby', 'cordy', 'cords', 'cored', 'coree', 'corey', 'corer', 'cores', 'corge', 'corgi', 'coria', 'coryl', 'corin', 'corke', 'corky', 'corks', 'corms', 'corno', 'corns', 'cornu', 'coroa', 'corol', 'corpl', 'corpn', 'corps', 'corse', 'corsy', 'corso', 'corta', 'corve', 'corvo', 'cosec', 'cosed', 'cosey', 'cosen', 'coses', 'coset', 'cosie', 'cosin', 'cosmo', 'cosse', 'costa', 'costs', 'cotan', 'cotch', 'coted', 'cotes', 'cothe', 'cothy', 'cotys', 'cotta', 'cotte', 'cotty', 'couac', 'couch', 'coude', 'cough', 'could', 'couma', 'count', 'coupe', 'coups', 'courb', 'cours', 'court', 'couth', 'couve', 'coved', 'covey', 'coven', 'cover', 'coves', 'covet', 'covid', 'covin', 'cowal', 'cowan', 'cowed', 'cower', 'cowle', 'cowls', 'cowry', 'coxae', 'coxal', 'coxed', 'coxes', 'cozed', 'cozey', 'cozen', 'cozes', 'cozie', 'craal', 'crack', 'craft', 'crags', 'craie', 'craye', 'craig', 'craik', 'crain', 'crake', 'cramp', 'crams', 'crane', 'crang', 'crany', 'crank', 'crape', 'crapy', 'craps', 'crare', 'crash', 'crass', 'crate', 'crave', 'cravo', 'crawl', 'crawm', 'craws', 'craze', 'crazy', 'crcao', 'crche', 'cread', 'creak', 'creat', 'creda', 'credo', 'creed', 'creek', 'creel', 'creem', 'creen', 'creep', 'crees', 'crena', 'crepy', 'crept', 'cresc', 'cress', 'crest', 'creta', 'crete', 'crewe', 'crews', 'cryal', 'cribo', 'cribs', 'crick', 'cried', 'criey', 'crier', 'cries', 'crile', 'crime', 'crimp', 'crine', 'crink', 'crips', 'crypt', 'criss', 'cryst', 'crith', 'croak', 'croat', 'croci', 'crock', 'croft', 'croyl', 'crois', 'crome', 'crone', 'crony', 'cronk', 'crood', 'crook', 'crool', 'croon', 'crops', 'crore', 'crosa', 'crose', 'cross', 'crost', 'croup', 'crout', 'crowd', 'crowl', 'crown', 'crows', 'croze', 'cruce', 'cruck', 'crude', 'crudy', 'cruds', 'cruel', 'cruet', 'crull', 'crumb', 'crump', 'crunk', 'crunt', 'cruor', 'crura', 'cruse', 'crush', 'cruth', 'crwth', 'csect', 'csnet', 'ctene', 'ctimo', 'cuban', 'cubas', 'cubby', 'cubeb', 'cubed', 'cuber', 'cubes', 'cubic', 'cubit', 'cubla', 'cubti', 'cucuy', 'cuddy', 'cueca', 'cueva', 'cuffy', 'cuffs', 'cufic', 'cuyas', 'cuifs', 'cuing', 'cuish', 'cujam', 'cukes', 'culch', 'culet', 'culex', 'culla', 'cully', 'culls', 'culmy', 'culms', 'culot', 'culpa', 'culti', 'cults', 'cumay', 'cumal', 'cumar', 'cumbu', 'cumic', 'cumyl', 'cumly', 'cumol', 'cunan', 'cunas', 'cundy', 'cunea', 'cunei', 'cunye', 'cunit', 'cunni', 'cunny', 'cunts', 'cunza', 'cupay', 'cupel', 'cupid', 'cuppa', 'cuppy', 'curat', 'curby', 'curbs', 'curch', 'curdy', 'cured', 'curer', 'cures', 'curet', 'curfs', 'curia', 'curie', 'curin', 'curio', 'curly', 'curls', 'curns', 'currs', 'cursa', 'curse', 'curst', 'curua', 'curve', 'curvy', 'cusec', 'cushy', 'cusie', 'cusks', 'cusps', 'cusso', 'cutch', 'cutey', 'cuter', 'cutes', 'cutie', 'cutin', 'cutis', 'cutty', 'cutup', 'cuvee', 'czars', 'czech', 'dabba', 'dabby', 'dabih', 'dabuh', 'daces', 'dacha', 'dachs', 'dacus', 'dadap', 'dadas', 'daddy', 'dados', 'daeva', 'daffy', 'daffs', 'dafla', 'dagga', 'daggy', 'dagon', 'dagos', 'dahms', 'dayak', 'dayal', 'dayan', 'daijo', 'daily', 'daint', 'daira', 'dairi', 'dairt', 'daisy', 'daiva', 'daker', 'dakir', 'dalai', 'dalan', 'dalar', 'dalea', 'daler', 'dales', 'dalis', 'dalle', 'dally', 'daman', 'damar', 'damas', 'dames', 'damia', 'damie', 'damme', 'damns', 'damon', 'dampy', 'damps', 'danae', 'danai', 'dance', 'dancy', 'danda', 'dandy', 'danes', 'dangs', 'danic', 'danio', 'danke', 'danli', 'danny', 'dansy', 'dansk', 'danta', 'dante', 'darac', 'daraf', 'darat', 'darby', 'darbs', 'darci', 'darcy', 'dared', 'daren', 'darer', 'dares', 'dargo', 'darya', 'daric', 'darii', 'daryl', 'darin', 'darky', 'darks', 'darns', 'daroo', 'darst', 'darts', 'dashy', 'dasht', 'dasya', 'dasnt', 'dassy', 'datch', 'dated', 'dater', 'datil', 'datos', 'datsw', 'datto', 'datum', 'daube', 'dauby', 'daubs', 'dauke', 'dault', 'daunt', 'dauri', 'dauts', 'daven', 'daver', 'david', 'davis', 'davit', 'dawdy', 'dawed', 'dawen', 'dawks', 'dawny', 'dawns', 'dawts', 'dawut', 'dazed', 'dazes', 'deady', 'deads', 'deair', 'deals', 'dealt', 'deans', 'deare', 'deary', 'dearn', 'dears', 'deash', 'death', 'deave', 'debag', 'debar', 'debat', 'debby', 'debel', 'deben', 'debye', 'debit', 'debts', 'debug', 'debus', 'debut', 'decad', 'decay', 'decal', 'decan', 'decap', 'decem', 'decil', 'decyl', 'decke', 'decks', 'decoy', 'decor', 'decry', 'decus', 'dedal', 'dedan', 'deddy', 'dedit', 'deedy', 'deeds', 'deems', 'deeny', 'deeps', 'deers', 'deess', 'defat', 'defer', 'defet', 'defis', 'defix', 'defog', 'degas', 'degum', 'deice', 'deify', 'deign', 'deils', 'deink', 'deino', 'deynt', 'deism', 'deist', 'deity', 'deked', 'dekes', 'dekko', 'dekle', 'delay', 'delaw', 'deled', 'deles', 'delfs', 'delft', 'delhi', 'delia', 'delim', 'delis', 'delit', 'della', 'delly', 'dells', 'deloo', 'delph', 'delta', 'delve', 'demal', 'demes', 'demit', 'demob', 'demon', 'demos', 'demot', 'demur', 'denay', 'denar', 'denat', 'denda', 'deneb', 'denes', 'denim', 'denis', 'denom', 'dense', 'denty', 'dents', 'deota', 'depas', 'depel', 'depit', 'depoh', 'depot', 'depth', 'derah', 'deray', 'derat', 'derby', 'derek', 'deric', 'deriv', 'derma', 'derms', 'derog', 'derri', 'derry', 'derth', 'derve', 'desex', 'desyl', 'desks', 'desma', 'dessa', 'desto', 'detar', 'detat', 'detax', 'deter', 'detin', 'dette', 'detur', 'deuce', 'deval', 'devas', 'devel', 'devex', 'devil', 'devon', 'devot', 'devow', 'dewal', 'dewan', 'dewar', 'dewax', 'dewed', 'dewey', 'dewer', 'dexes', 'dhabb', 'dhaks', 'dhava', 'dheri', 'dhyal', 'dhikr', 'dhobi', 'dhoby', 'dhole', 'dhoni', 'dhoon', 'dhoti', 'dhoty', 'dhoul', 'dhows', 'dhuti', 'diact', 'dyads', 'diaka', 'dials', 'diamb', 'diana', 'diane', 'dyaus', 'diazo', 'diced', 'dicey', 'dicer', 'dices', 'dicht', 'dicky', 'dicks', 'dicot', 'dicta', 'dicty', 'didal', 'diddy', 'didie', 'didym', 'didle', 'didna', 'didnt', 'didos', 'didst', 'didus', 'diego', 'diene', 'dieri', 'dyers', 'diety', 'diets', 'difda', 'dight', 'digit', 'digne', 'digor', 'digue', 'dying', 'diked', 'dyked', 'diker', 'dyker', 'dikes', 'dykes', 'dylan', 'dildo', 'dilis', 'dilli', 'dilly', 'dills', 'dilos', 'dimer', 'dimes', 'dimin', 'dimit', 'dimly', 'dimmy', 'dimna', 'dimps', 'dinah', 'dynam', 'dinar', 'dined', 'dynel', 'dines', 'dynes', 'dinge', 'dingy', 'dingo', 'dings', 'dinic', 'dinka', 'dinky', 'dinks', 'dinos', 'dints', 'dinus', 'diode', 'diols', 'dione', 'dioon', 'diose', 'diota', 'dioti', 'dioxy', 'diple', 'dippy', 'dipsy', 'dipso', 'dipus', 'dirca', 'direr', 'direx', 'dirge', 'dirgy', 'dirks', 'dirls', 'dirty', 'dirts', 'disci', 'disco', 'discs', 'dishy', 'disks', 'disli', 'disme', 'disna', 'disty', 'distn', 'distr', 'dital', 'ditas', 'ditch', 'diter', 'dites', 'ditty', 'ditto', 'diurn', 'divan', 'divas', 'dived', 'divel', 'diver', 'dives', 'divet', 'divia', 'divid', 'divot', 'divus', 'divvy', 'diwan', 'dixie', 'dixit', 'dizen', 'dizzy', 'djave', 'djinn', 'djins', 'djuka', 'doand', 'doaty', 'doats', 'dobby', 'dobie', 'dobla', 'dobos', 'dobra', 'docks', 'doddy', 'dodge', 'dodgy', 'dodos', 'doers', 'doesn', 'doest', 'doeth', 'doffs', 'dogal', 'dogey', 'doges', 'doggy', 'doggo', 'dogie', 'dogly', 'dogma', 'dogra', 'doyen', 'doigt', 'doyle', 'doily', 'doyly', 'doylt', 'doina', 'doing', 'doyst', 'doits', 'dojos', 'dolce', 'dolci', 'doled', 'doley', 'doles', 'dolia', 'dolly', 'dolls', 'dolor', 'dolos', 'dolph', 'dolts', 'dolus', 'domal', 'domba', 'domed', 'domer', 'domes', 'domic', 'dompt', 'domus', 'donal', 'donar', 'donas', 'donat', 'donax', 'doncy', 'donec', 'donee', 'doney', 'donet', 'donga', 'dongs', 'donia', 'donis', 'donna', 'donne', 'donny', 'donor', 'donsy', 'donum', 'dooja', 'dooli', 'dooly', 'dooms', 'doors', 'doozy', 'dopas', 'doped', 'dopey', 'doper', 'dopes', 'dorab', 'dorad', 'doray', 'doree', 'dorey', 'doria', 'doric', 'doris', 'dorje', 'dormy', 'dorms', 'dorps', 'dorrs', 'dorsa', 'dorse', 'dorsi', 'dorty', 'dorts', 'dosed', 'doser', 'doses', 'dosis', 'dossy', 'dotal', 'doted', 'doter', 'dotes', 'dotty', 'douar', 'doubt', 'douce', 'dougl', 'douma', 'doura', 'douse', 'dovey', 'doven', 'dover', 'doves', 'dowdy', 'dowed', 'dowel', 'dower', 'dowie', 'dowly', 'downy', 'downs', 'dowry', 'dowse', 'dowve', 'doxie', 'dozed', 'dozen', 'dozer', 'dozes', 'draba', 'drabs', 'draco', 'draff', 'draft', 'drago', 'drags', 'drail', 'drain', 'drays', 'drake', 'drama', 'drame', 'dramm', 'drams', 'drang', 'drank', 'drant', 'drape', 'drate', 'drats', 'drave', 'drawk', 'drawl', 'drawn', 'draws', 'dread', 'dream', 'drear', 'dreck', 'dreed', 'dreep', 'drees', 'dregs', 'dreks', 'dreng', 'drent', 'dress', 'drest', 'dryad', 'drias', 'dryas', 'dribs', 'dried', 'drier', 'dryer', 'dries', 'drift', 'drily', 'dryly', 'drill', 'drinn', 'drips', 'dript', 'drisk', 'dryth', 'drive', 'drogh', 'droil', 'droyl', 'droit', 'droll', 'drome', 'drona', 'drone', 'drony', 'droob', 'drool', 'droop', 'drops', 'dropt', 'dross', 'droud', 'drouk', 'drove', 'drovy', 'drown', 'drubs', 'drugs', 'druid', 'drums', 'drung', 'drunk', 'drunt', 'drupa', 'drupe', 'drury', 'druse', 'drusy', 'druxy', 'druze', 'dsect', 'dtset', 'duads', 'duala', 'duali', 'duals', 'duane', 'duant', 'dubba', 'dubby', 'dubhe', 'dubio', 'ducal', 'ducat', 'duces', 'duchy', 'ducky', 'ducks', 'ducts', 'duddy', 'dudes', 'duels', 'duets', 'duffy', 'duffs', 'dugal', 'duhat', 'duits', 'dujan', 'dukes', 'dukhn', 'dulat', 'dulce', 'duler', 'dulia', 'dully', 'dulls', 'dulse', 'dumas', 'dumba', 'dumby', 'dumbs', 'dumka', 'dumky', 'dummy', 'dumpy', 'dumps', 'dunal', 'dunce', 'dunch', 'dunes', 'dungy', 'dungs', 'dunks', 'dunne', 'dunny', 'dunno', 'dunst', 'dunts', 'duole', 'duomi', 'duomo', 'duped', 'duper', 'dupes', 'dupla', 'duple', 'duply', 'duppa', 'duppy', 'dural', 'duras', 'durax', 'dured', 'duree', 'dures', 'duret', 'duryl', 'durio', 'durns', 'duroc', 'duroy', 'duros', 'durra', 'durry', 'durrs', 'durst', 'durum', 'durzi', 'dusio', 'dusky', 'dusks', 'dusty', 'dusts', 'dusun', 'dutch', 'dutra', 'duvet', 'duxes', 'dvigu', 'dwale', 'dwalm', 'dwang', 'dwarf', 'dwell', 'dwelt', 'dwyka', 'dwine', 'eably', 'eager', 'eagle', 'eagre', 'eared', 'earle', 'early', 'earls', 'earns', 'earsh', 'earth', 'eased', 'easel', 'easer', 'eases', 'easts', 'eaten', 'eater', 'eaved', 'eaver', 'eaves', 'ebbed', 'ebbet', 'eblis', 'ebony', 'ebons', 'ecart', 'echar', 'echea', 'eched', 'eches', 'echis', 'echos', 'ecize', 'eclat', 'ecoid', 'ecole', 'ecrus', 'ectad', 'ectal', 'edana', 'edder', 'eddic', 'eddie', 'edema', 'edgar', 'edged', 'edger', 'edges', 'edict', 'edify', 'ediya', 'edile', 'edith', 'edits', 'edoni', 'educe', 'educt', 'edwin', 'eeler', 'eemis', 'eerie', 'eeten', 'effet', 'effie', 'egads', 'egall', 'egers', 'egest', 'eggar', 'egged', 'egger', 'egypt', 'egret', 'egrid', 'eyass', 'eider', 'eidos', 'eyers', 'eyess', 'eight', 'eyght', 'eigne', 'eying', 'eikon', 'eimak', 'eimer', 'eyoty', 'eyrar', 'eyras', 'eyren', 'eyrer', 'eyres', 'eyrie', 'eyrir', 'eject', 'ejido', 'ejusd', 'ekaha', 'eking', 'ekron', 'elaic', 'elayl', 'elain', 'elamp', 'eland', 'elans', 'elaps', 'elate', 'elbow', 'elder', 'eldin', 'elean', 'elect', 'elegy', 'eleme', 'elemi', 'eleut', 'eleve', 'elfic', 'elfin', 'elian', 'elias', 'elide', 'elihu', 'elymi', 'eliot', 'elite', 'eliza', 'ellan', 'ellen', 'elmer', 'eloah', 'eloge', 'elogy', 'eloin', 'elong', 'elope', 'elops', 'elric', 'elses', 'elsin', 'elude', 'elute', 'elvan', 'elver', 'elves', 'elvet', 'elvis', 'email', 'emane', 'embay', 'embar', 'embed', 'ember', 'embog', 'embow', 'embox', 'embue', 'embus', 'emcee', 'emden', 'emeer', 'emend', 'emery', 'emesa', 'emeus', 'emyde', 'emyds', 'emigr', 'emily', 'emirs', 'emits', 'emlen', 'emmer', 'emmet', 'emmew', 'emong', 'emony', 'emory', 'emote', 'emove', 'empeo', 'empty', 'emule', 'emuls', 'enact', 'enage', 'enami', 'enapt', 'enarm', 'enate', 'encia', 'encyc', 'encup', 'ended', 'ender', 'endew', 'endia', 'endow', 'endue', 'eneas', 'eneid', 'enema', 'enemy', 'enent', 'enfin', 'engem', 'engin', 'engle', 'enhat', 'eniac', 'enlay', 'enmew', 'ennew', 'ennia', 'ennoy', 'ennui', 'enoch', 'enode', 'enoil', 'enols', 'enorm', 'enorn', 'enows', 'enpia', 'enray', 'enrib', 'enrol', 'enrut', 'ensky', 'ensue', 'entad', 'ental', 'entea', 'enter', 'entia', 'entom', 'entre', 'entry', 'entte', 'enure', 'envoi', 'envoy', 'enweb', 'enzym', 'eoith', 'eosin', 'epact', 'epees', 'epeus', 'ephah', 'ephas', 'ephod', 'ephoi', 'ephor', 'epics', 'epiky', 'epist', 'eplot', 'epoch', 'epode', 'epopt', 'epoxy', 'eppes', 'eppie', 'epris', 'epsom', 'epulo', 'equal', 'eques', 'equid', 'equip', 'equiv', 'equus', 'erade', 'erase', 'erato', 'erava', 'erbia', 'erect', 'erept', 'ergal', 'ergon', 'ergot', 'erian', 'erica', 'erick', 'erika', 'eryon', 'erizo', 'ermit', 'ernes', 'ernie', 'ernst', 'erode', 'erose', 'erred', 'erron', 'error', 'ersar', 'erses', 'eruca', 'eruct', 'erugo', 'erump', 'erupt', 'ervil', 'ervum', 'erwin', 'esbay', 'escar', 'escot', 'escry', 'esere', 'eshin', 'eskar', 'esker', 'espec', 'esrog', 'essay', 'essed', 'essee', 'esses', 'essex', 'essie', 'estab', 'ester', 'estoc', 'estop', 'estre', 'estus', 'etang', 'etape', 'ethal', 'ethan', 'ethel', 'ether', 'ethic', 'ethid', 'ethyl', 'ethos', 'etiam', 'etyma', 'etnas', 'etrog', 'ettle', 'etude', 'etuis', 'etuve', 'etwas', 'etwee', 'eucre', 'eucti', 'euler', 'eupad', 'euros', 'eurus', 'eusol', 'evade', 'evang', 'evans', 'evase', 'eveck', 'evene', 'evens', 'event', 'every', 'evert', 'evese', 'evict', 'evils', 'evite', 'evoke', 'ewder', 'ewery', 'ewers', 'ewest', 'ewhow', 'ewing', 'exact', 'exalt', 'exams', 'exaun', 'excel', 'excud', 'excur', 'exdie', 'exeat', 'execs', 'exect', 'exede', 'exert', 'exhbn', 'exies', 'exile', 'exine', 'exing', 'exion', 'exist', 'exite', 'exits', 'exlex', 'exode', 'exody', 'exopt', 'expdt', 'expel', 'expos', 'exptl', 'expwy', 'exsec', 'exter', 'extol', 'extra', 'exude', 'exult', 'exurb', 'exust', 'exxon', 'faade', 'fabes', 'fable', 'faced', 'facer', 'faces', 'facet', 'facia', 'facie', 'facit', 'facks', 'facty', 'facto', 'facts', 'faddy', 'faded', 'faden', 'fader', 'fades', 'fadge', 'fadme', 'fados', 'faena', 'faery', 'faffy', 'fager', 'faggy', 'fagin', 'fagot', 'fagus', 'faham', 'fayal', 'fayed', 'fails', 'fains', 'faint', 'faire', 'fairy', 'fairm', 'fairs', 'faith', 'faits', 'faked', 'faker', 'fakes', 'fakir', 'falco', 'falda', 'falla', 'fally', 'falls', 'false', 'falun', 'falus', 'famed', 'fames', 'fanal', 'fanam', 'fancy', 'fanes', 'fanga', 'fangy', 'fango', 'fangs', 'fanit', 'fanny', 'fanon', 'fanos', 'fanti', 'fanum', 'fanwe', 'faqir', 'farad', 'farce', 'farci', 'farcy', 'farde', 'fardh', 'fardo', 'fards', 'fared', 'farer', 'fares', 'fario', 'farle', 'farls', 'farmy', 'farms', 'faros', 'farse', 'farsi', 'farth', 'farts', 'fasti', 'fasts', 'fatal', 'fated', 'fates', 'fatil', 'fatly', 'fator', 'fatso', 'fatty', 'fatwa', 'faugh', 'fauld', 'fault', 'faulx', 'fauna', 'fauns', 'faurd', 'fause', 'faust', 'faute', 'fauve', 'favel', 'favor', 'favus', 'fawny', 'fawns', 'faxed', 'faxes', 'fazed', 'fazes', 'fchar', 'fcomp', 'fconv', 'fdubs', 'fears', 'fease', 'featy', 'feats', 'feaze', 'fecal', 'feces', 'fecit', 'fecks', 'fedia', 'feedy', 'feeds', 'feely', 'feels', 'feere', 'feest', 'feeze', 'feyer', 'feign', 'feint', 'feist', 'felid', 'felis', 'felix', 'fella', 'felly', 'fells', 'felon', 'felty', 'felts', 'felup', 'femes', 'femic', 'femme', 'fence', 'fendy', 'fends', 'fenks', 'fenny', 'feods', 'feoff', 'ferae', 'feral', 'feres', 'feria', 'ferie', 'ferio', 'ferly', 'ferme', 'fermi', 'ferny', 'ferns', 'ferox', 'ferri', 'ferry', 'ferth', 'fesse', 'festa', 'feste', 'festy', 'fetal', 'fetas', 'fetch', 'feted', 'fetes', 'fetid', 'fetis', 'fetor', 'fetus', 'fetwa', 'feuar', 'feuds', 'feued', 'feute', 'fever', 'fewer', 'fezes', 'fezzy', 'fgrid', 'fhrer', 'fiant', 'fiard', 'fiars', 'fiats', 'fiber', 'fibra', 'fibre', 'fibry', 'fibro', 'fices', 'fyces', 'fiche', 'fichu', 'ficin', 'ficus', 'fidac', 'fidel', 'fides', 'fidge', 'fidia', 'fidos', 'fiefs', 'field', 'fiend', 'fient', 'fieri', 'fiery', 'fifed', 'fifer', 'fifes', 'fifie', 'fifth', 'fifty', 'figgy', 'fight', 'fiked', 'fikey', 'fykes', 'fikie', 'filao', 'filar', 'filch', 'filea', 'filed', 'filer', 'files', 'filii', 'filix', 'filla', 'fille', 'filly', 'fills', 'filmy', 'films', 'filth', 'filum', 'final', 'finca', 'finch', 'findy', 'finds', 'fined', 'finer', 'fines', 'finew', 'fingu', 'finis', 'finks', 'finny', 'finns', 'fiord', 'fique', 'firca', 'fired', 'firer', 'fires', 'firma', 'firms', 'firns', 'firry', 'first', 'firth', 'fiscs', 'fisty', 'fists', 'fitch', 'fitly', 'fytte', 'fitty', 'fiver', 'fives', 'fixed', 'fixer', 'fixes', 'fixup', 'fizzy', 'fjeld', 'fjord', 'flabs', 'flack', 'flaff', 'flags', 'flail', 'flain', 'flair', 'flays', 'flake', 'flaky', 'flamb', 'flame', 'flamy', 'flams', 'flane', 'flang', 'flank', 'flaps', 'flare', 'flary', 'flash', 'flask', 'flats', 'flavo', 'flawy', 'flawn', 'flaws', 'flaxy', 'flche', 'fldxt', 'fleay', 'fleak', 'fleam', 'flear', 'fleas', 'fleck', 'flect', 'fleer', 'flees', 'fleet', 'flegm', 'fleys', 'fleme', 'fleta', 'fleur', 'flews', 'flexo', 'flyby', 'flick', 'flics', 'flied', 'flier', 'flyer', 'flies', 'flimp', 'fling', 'flint', 'flipe', 'flype', 'flips', 'flirt', 'flisk', 'flite', 'flyte', 'flits', 'fload', 'float', 'flock', 'flocs', 'floey', 'floes', 'flogs', 'floyd', 'floit', 'floyt', 'flong', 'flood', 'flook', 'floor', 'flops', 'flora', 'flory', 'flosh', 'floss', 'flota', 'flote', 'flots', 'flout', 'flowe', 'flowk', 'flown', 'flows', 'flrie', 'flubs', 'flued', 'fluey', 'fluer', 'flues', 'fluff', 'fluid', 'fluyt', 'fluke', 'fluky', 'flume', 'flump', 'flung', 'flunk', 'fluor', 'flurn', 'flurr', 'flurt', 'flush', 'flusk', 'flute', 'fluty', 'fname', 'fnese', 'foaly', 'foals', 'foamy', 'foams', 'focal', 'focus', 'fodda', 'foder', 'fodge', 'foehn', 'foeti', 'fogas', 'fogey', 'foggy', 'fogie', 'fogle', 'fogon', 'fogou', 'fogus', 'fohat', 'fohns', 'foyer', 'foils', 'foins', 'foism', 'foist', 'foldy', 'folds', 'folia', 'folic', 'folie', 'folio', 'folky', 'folks', 'folly', 'fomes', 'fonds', 'fondu', 'fonly', 'fonts', 'foody', 'foods', 'fools', 'footy', 'foots', 'foppy', 'foray', 'foram', 'forby', 'forbs', 'force', 'forcy', 'fordy', 'fordo', 'fords', 'forel', 'fores', 'foret', 'forex', 'forge', 'forgo', 'forky', 'forks', 'forma', 'forme', 'formy', 'forms', 'forra', 'forst', 'forte', 'forth', 'forty', 'forts', 'forum', 'fosie', 'fossa', 'fosse', 'fotch', 'fotui', 'fouls', 'found', 'fount', 'fourb', 'fours', 'foute', 'fouth', 'fouty', 'fovea', 'fowls', 'foxed', 'foxer', 'foxes', 'foxie', 'foxly', 'fplot', 'fpsps', 'frack', 'fract', 'frags', 'fraid', 'fraik', 'frail', 'frayn', 'frays', 'frame', 'franc', 'frank', 'franz', 'frape', 'frapp', 'fraps', 'frary', 'frase', 'frass', 'frate', 'frats', 'fraud', 'fraus', 'frawn', 'fraze', 'frden', 'freak', 'fream', 'freck', 'freed', 'freen', 'freer', 'frees', 'freet', 'freya', 'freir', 'freyr', 'freit', 'fremd', 'fremt', 'frena', 'freon', 'frere', 'fress', 'frets', 'frett', 'freud', 'friar', 'frier', 'fryer', 'frigs', 'frija', 'frike', 'frill', 'frise', 'frisk', 'friss', 'frist', 'frith', 'frits', 'fritt', 'fritz', 'frize', 'frizz', 'frock', 'froes', 'frogs', 'frond', 'frons', 'front', 'froom', 'frore', 'frory', 'frosh', 'frosk', 'frost', 'froth', 'frowy', 'frowl', 'frown', 'frows', 'froze', 'frugs', 'frump', 'frush', 'frust', 'fuage', 'fubby', 'fubsy', 'fuchi', 'fucks', 'fucus', 'fuder', 'fudgy', 'fuels', 'fuffy', 'fugal', 'fuggy', 'fugie', 'fugio', 'fugit', 'fugle', 'fugue', 'fujis', 'fulah', 'fully', 'fulls', 'fulth', 'fultz', 'fulup', 'fulwa', 'fumed', 'fumer', 'fumes', 'fumet', 'fumid', 'fundi', 'funds', 'funge', 'fungo', 'funic', 'funis', 'funje', 'funky', 'funks', 'funli', 'funny', 'fural', 'furan', 'furca', 'furil', 'furyl', 'furls', 'furor', 'furry', 'furud', 'furze', 'furzy', 'fused', 'fusee', 'fusel', 'fuses', 'fusht', 'fusil', 'fussy', 'fusty', 'fusus', 'futwa', 'fuzed', 'fuzee', 'fuzes', 'fuzil', 'fuzzy', 'gabby', 'gable', 'gabon', 'gaddi', 'gader', 'gades', 'gadge', 'gadid', 'gadis', 'gadso', 'gadus', 'gaels', 'gaffe', 'gaffs', 'gaged', 'gagee', 'gager', 'gages', 'gagor', 'gayal', 'gayer', 'gaily', 'gayly', 'gaine', 'gains', 'gaist', 'gaits', 'gaitt', 'gaius', 'gaize', 'galah', 'galas', 'galax', 'galbe', 'galea', 'galee', 'galei', 'galey', 'galen', 'gales', 'galet', 'galga', 'galik', 'galla', 'galli', 'gally', 'galls', 'galop', 'galut', 'galvo', 'gamba', 'gambe', 'gambs', 'gamed', 'gamey', 'gamer', 'games', 'gamic', 'gamin', 'gamma', 'gammy', 'gamps', 'gamut', 'ganam', 'ganch', 'ganda', 'ganef', 'ganev', 'ganga', 'gange', 'gangs', 'ganja', 'ganof', 'gansa', 'gansy', 'ganta', 'ganza', 'gaols', 'gaped', 'gaper', 'gapes', 'gappy', 'garad', 'garau', 'garbo', 'garbs', 'garce', 'garde', 'gardy', 'gareh', 'garle', 'garni', 'garon', 'garoo', 'garse', 'garth', 'garua', 'garum', 'gasan', 'gases', 'gashy', 'gaspy', 'gasps', 'gassy', 'gasts', 'gatch', 'gated', 'gater', 'gates', 'gatha', 'gator', 'gauby', 'gaucy', 'gaudy', 'gauds', 'gauge', 'gauls', 'gault', 'gaumy', 'gaums', 'gaunt', 'gaura', 'gaure', 'gaurs', 'gauss', 'gauze', 'gauzy', 'gavel', 'gavia', 'gavot', 'gawby', 'gawky', 'gawks', 'gawsy', 'gazed', 'gazee', 'gazel', 'gazer', 'gazes', 'gazet', 'gazon', 'gazoz', 'gconv', 'gears', 'gease', 'geast', 'gebur', 'gecko', 'gecks', 'gedds', 'geeks', 'geese', 'geest', 'gehey', 'geyan', 'geira', 'geisa', 'geist', 'gekko', 'gelds', 'gelee', 'gelid', 'gelly', 'gelts', 'gemel', 'gemma', 'gemmy', 'gemot', 'gemse', 'gemul', 'genae', 'genal', 'genep', 'genes', 'genet', 'genic', 'genie', 'genii', 'genin', 'genio', 'genip', 'genys', 'genit', 'genny', 'genoa', 'genom', 'genos', 'genre', 'genro', 'genty', 'gents', 'genua', 'genus', 'geode', 'geoff', 'geoid', 'geoty', 'gerah', 'gerbe', 'gerbo', 'gerim', 'gerip', 'germy', 'germs', 'gesan', 'gesso', 'geste', 'gests', 'getae', 'getah', 'getas', 'getfd', 'getic', 'getid', 'getup', 'geums', 'ghain', 'ghana', 'ghast', 'ghats', 'ghaut', 'ghazi', 'ghbor', 'ghees', 'ghent', 'ghess', 'ghyll', 'ghole', 'ghoom', 'ghost', 'ghoul', 'giant', 'gibbi', 'gibby', 'gibed', 'gybed', 'gibel', 'giber', 'gibes', 'gybes', 'gibli', 'gibus', 'giddy', 'gifts', 'gigas', 'gyges', 'gigge', 'gighe', 'gygis', 'gigot', 'gigue', 'giher', 'gilds', 'giles', 'gilet', 'gilia', 'gilim', 'gilly', 'gills', 'gilpy', 'gilse', 'gilty', 'gilts', 'gimel', 'gymel', 'gimme', 'gimpy', 'gimps', 'ginep', 'gynic', 'ginks', 'ginny', 'ginzo', 'gipon', 'gippy', 'gippo', 'gyppo', 'gipsy', 'gypsy', 'gyral', 'girba', 'girds', 'gyred', 'gyres', 'gyric', 'girja', 'girly', 'girls', 'girny', 'girns', 'giron', 'gyron', 'giros', 'gyros', 'girse', 'girsh', 'girth', 'girts', 'gyrus', 'gisel', 'gisla', 'gismo', 'gists', 'gitim', 'giust', 'gyved', 'givey', 'given', 'giver', 'gives', 'gyves', 'givin', 'gizmo', 'glace', 'glack', 'glade', 'glady', 'glads', 'glaga', 'glaik', 'glair', 'glaky', 'glali', 'gland', 'glans', 'glare', 'glary', 'glass', 'glaum', 'glaur', 'glaux', 'glave', 'glaze', 'glazy', 'glead', 'gleam', 'glean', 'gleba', 'glebe', 'gleby', 'glede', 'gledy', 'gleds', 'gleed', 'gleek', 'gleen', 'glees', 'gleet', 'gleir', 'gleys', 'gleit', 'glene', 'glenn', 'glens', 'glent', 'glial', 'glick', 'glide', 'gliff', 'glike', 'glime', 'glims', 'glink', 'glynn', 'glint', 'glyph', 'glisk', 'gliss', 'glist', 'gloam', 'gloat', 'globe', 'globy', 'globs', 'gloea', 'glogg', 'glome', 'glomi', 'gloms', 'glood', 'gloom', 'glops', 'glore', 'glory', 'gloss', 'glost', 'glout', 'glove', 'glows', 'gloze', 'gluck', 'glued', 'gluey', 'gluer', 'glues', 'gluma', 'glume', 'glump', 'gluon', 'gluts', 'gnarl', 'gnarr', 'gnars', 'gnash', 'gnast', 'gnats', 'gnawn', 'gnaws', 'gnide', 'gnoff', 'gnome', 'goads', 'goala', 'goals', 'goaty', 'goats', 'goave', 'goban', 'gobbe', 'gobby', 'gobet', 'gobia', 'gobio', 'gobos', 'godet', 'godly', 'goers', 'goety', 'gofer', 'gogga', 'gogos', 'goyim', 'goyin', 'goyle', 'going', 'goldi', 'goldy', 'golds', 'golee', 'golem', 'goles', 'golet', 'golfs', 'golgi', 'golly', 'goloe', 'golpe', 'gombo', 'gomer', 'gonad', 'gonal', 'gondi', 'goney', 'goner', 'gongs', 'gonia', 'gonid', 'gonif', 'gonys', 'gonna', 'gonne', 'gonof', 'gonzo', 'goody', 'goods', 'gooey', 'goofy', 'goofs', 'gooky', 'gooks', 'gools', 'gooma', 'goony', 'goons', 'goopy', 'goops', 'goose', 'goosy', 'gopak', 'goral', 'goran', 'gorce', 'gored', 'gorer', 'gores', 'gorge', 'goric', 'gorki', 'gorra', 'gorry', 'gorse', 'gorsy', 'gorst', 'gossy', 'gotch', 'goter', 'gotha', 'goths', 'gotos', 'gotra', 'gotta', 'gouda', 'goudy', 'gouge', 'goumi', 'goura', 'goury', 'gouty', 'gouts', 'gowan', 'gowdy', 'gowds', 'gowks', 'gowns', 'goxes', 'graal', 'grabs', 'grace', 'gracy', 'grade', 'grads', 'graff', 'graft', 'grail', 'graip', 'grays', 'grama', 'grame', 'gramy', 'gramp', 'grams', 'grana', 'grand', 'grane', 'grank', 'grano', 'grant', 'graph', 'grapy', 'grasp', 'grass', 'grata', 'grave', 'graze', 'great', 'grebe', 'grebo', 'grece', 'greco', 'greed', 'greek', 'green', 'grees', 'greet', 'grege', 'gregg', 'grego', 'grein', 'greys', 'greit', 'grene', 'greta', 'grete', 'grewt', 'grice', 'gride', 'gryde', 'grids', 'grief', 'griff', 'grift', 'grigs', 'grike', 'grime', 'grimy', 'grimm', 'grimp', 'grind', 'grins', 'grint', 'griot', 'gripe', 'grype', 'griph', 'gryph', 'gripy', 'grips', 'gript', 'grise', 'grist', 'grith', 'grits', 'groan', 'groat', 'groff', 'grogs', 'groin', 'groma', 'grond', 'gront', 'groof', 'groom', 'groop', 'groot', 'groow', 'grope', 'gross', 'grosz', 'grote', 'grots', 'grouf', 'group', 'grout', 'grove', 'grovy', 'growl', 'grown', 'grows', 'grubs', 'gruel', 'grues', 'gruff', 'gruft', 'gruis', 'gruys', 'grume', 'grump', 'grunt', 'grush', 'gruss', 'gteau', 'guaba', 'guaco', 'guaka', 'guama', 'guana', 'guano', 'guans', 'guara', 'guard', 'guary', 'guars', 'guasa', 'guato', 'guaza', 'gubat', 'gubbo', 'gucki', 'gucks', 'gudes', 'gudge', 'gudok', 'guelf', 'guess', 'guest', 'guffy', 'guffs', 'gugal', 'guiac', 'guiba', 'guide', 'guido', 'guids', 'guyed', 'guyer', 'guige', 'guijo', 'guild', 'guile', 'guily', 'guilt', 'guyot', 'guiro', 'guise', 'gujar', 'gulae', 'gular', 'gulas', 'gulch', 'gules', 'gulfy', 'gulfs', 'gulix', 'gully', 'gulls', 'gulph', 'gulpy', 'gulps', 'gumby', 'gumbo', 'gumly', 'gumma', 'gunda', 'gundi', 'gundy', 'gunge', 'gunja', 'gunky', 'gunks', 'gunne', 'gunny', 'guppy', 'guran', 'gurdy', 'gurge', 'guric', 'gurle', 'gurly', 'gurry', 'gursh', 'gurts', 'gurus', 'guser', 'gushy', 'gusla', 'gusle', 'gussy', 'gusty', 'gusto', 'gusts', 'gutsy', 'gutta', 'gutte', 'gutti', 'gutty', 'guzul', 'gweed', 'gwely', 'gwine', 'haafs', 'haars', 'habab', 'habbe', 'habet', 'habit', 'hable', 'habub', 'habus', 'hacek', 'hache', 'hacht', 'hacky', 'hacks', 'hadal', 'haddo', 'haded', 'hades', 'hadit', 'hadji', 'hadnt', 'hadst', 'haems', 'haets', 'hafis', 'hafiz', 'hafts', 'hagar', 'haggy', 'hagia', 'hague', 'haick', 'haida', 'haydn', 'hayed', 'hayey', 'hayer', 'hayes', 'haika', 'haikh', 'haiks', 'haiku', 'haily', 'hails', 'haine', 'hayne', 'haire', 'hairy', 'hairs', 'haiti', 'hajes', 'hajib', 'hajis', 'hajji', 'hakam', 'hakea', 'hakes', 'hakim', 'hakka', 'halal', 'halas', 'halch', 'haldu', 'haled', 'haler', 'hales', 'halfa', 'halfy', 'halid', 'halke', 'hallo', 'halls', 'halma', 'halms', 'haloa', 'halos', 'halse', 'halte', 'halts', 'halva', 'halve', 'halwe', 'hamal', 'haman', 'hamel', 'hames', 'hamli', 'hammy', 'hamsa', 'hamus', 'hamza', 'hanap', 'hance', 'hanch', 'handy', 'hands', 'hange', 'hangs', 'hanif', 'hanky', 'hanks', 'hankt', 'hanna', 'hanoi', 'hansa', 'hanse', 'hants', 'haole', 'haoma', 'haori', 'hapax', 'haply', 'happy', 'haram', 'haras', 'harbi', 'hardy', 'hards', 'hared', 'harem', 'hares', 'harim', 'harka', 'harks', 'harle', 'harls', 'harms', 'harns', 'harpa', 'harpy', 'harps', 'harre', 'harry', 'harsh', 'harst', 'harts', 'hasan', 'hashy', 'hasht', 'hasid', 'hasky', 'hasnt', 'hasps', 'hasta', 'haste', 'hasty', 'hatch', 'hated', 'hatel', 'hater', 'hates', 'hathi', 'hatte', 'hatti', 'hatty', 'haugh', 'hauld', 'haulm', 'hauls', 'hault', 'haunt', 'hausa', 'hause', 'haust', 'haute', 'havel', 'haven', 'haver', 'haves', 'havoc', 'hawed', 'hawer', 'hawky', 'hawks', 'hawok', 'hawse', 'hazan', 'hazed', 'hazel', 'hazen', 'hazer', 'hazes', 'hazle', 'hdqrs', 'heady', 'heads', 'heald', 'heals', 'heapy', 'heaps', 'heard', 'hears', 'heart', 'heath', 'heats', 'heave', 'heavy', 'heazy', 'heben', 'hecco', 'hecht', 'hecks', 'hecte', 'heder', 'hedge', 'hedgy', 'heedy', 'heeds', 'heels', 'heeze', 'heezy', 'hefty', 'hefts', 'heiau', 'heidi', 'heigh', 'heygh', 'heild', 'heily', 'heils', 'heirs', 'heist', 'heize', 'helas', 'helco', 'helen', 'helge', 'helio', 'helix', 'helly', 'hello', 'hells', 'helms', 'heloe', 'helot', 'helps', 'helve', 'hemad', 'hemal', 'heman', 'hemen', 'hemes', 'hemic', 'hemin', 'hemol', 'hempy', 'hemps', 'henad', 'hence', 'hendy', 'henen', 'henge', 'henna', 'henny', 'henry', 'hents', 'hepar', 'herat', 'herba', 'herby', 'herds', 'herem', 'heres', 'herls', 'herma', 'hermi', 'hermo', 'herms', 'herne', 'herns', 'heron', 'heros', 'herry', 'herse', 'hertz', 'herve', 'hests', 'heths', 'hetty', 'heuau', 'heuch', 'heugh', 'hevea', 'heved', 'hewed', 'hewel', 'hewer', 'hewgh', 'hexad', 'hexed', 'hexer', 'hexes', 'hexyl', 'hexis', 'hiant', 'hiate', 'hibla', 'hybla', 'hicht', 'hichu', 'hicky', 'hicks', 'hided', 'hidel', 'hider', 'hides', 'hydra', 'hydro', 'hield', 'hiems', 'hyena', 'hienz', 'hiera', 'highs', 'hight', 'higra', 'hying', 'hijra', 'hiked', 'hiker', 'hikes', 'hilar', 'hylas', 'hilch', 'hilda', 'hyleg', 'hylic', 'hilly', 'hillo', 'hills', 'hilsa', 'hilts', 'hilum', 'hilus', 'hymen', 'himne', 'hymns', 'hinau', 'hinch', 'hynde', 'hindi', 'hinds', 'hindu', 'hiney', 'hinge', 'hinny', 'hints', 'hyoid', 'hyped', 'hiper', 'hyper', 'hypes', 'hypha', 'hypho', 'hipmi', 'hypos', 'hippa', 'hippi', 'hippy', 'hippo', 'hiram', 'hyrax', 'hired', 'hiren', 'hirer', 'hires', 'hirse', 'hyrse', 'hirst', 'hyrst', 'hisis', 'hyson', 'hispa', 'hissy', 'hists', 'hitch', 'hithe', 'hived', 'hiver', 'hives', 'hoagy', 'hoard', 'hoary', 'hoars', 'hoast', 'hobby', 'hoboe', 'hobos', 'hocco', 'hocky', 'hocks', 'hocus', 'hodad', 'hoddy', 'hodge', 'hoers', 'hogan', 'hogen', 'hoggy', 'hoggs', 'hogni', 'hoick', 'hoyle', 'hoise', 'hoist', 'hokan', 'hoked', 'hokey', 'hoker', 'hokes', 'hokku', 'hokum', 'holds', 'holed', 'holey', 'holer', 'holes', 'holia', 'holks', 'holla', 'holly', 'hollo', 'holms', 'holts', 'homam', 'homed', 'homey', 'homer', 'homes', 'homme', 'homos', 'honan', 'honda', 'hondo', 'honed', 'honer', 'hones', 'hongs', 'honky', 'honks', 'honor', 'honzo', 'hooch', 'hoody', 'hoods', 'hooey', 'hoofy', 'hoofs', 'hooye', 'hooka', 'hooky', 'hooks', 'hooly', 'hoops', 'hoose', 'hoosh', 'hoots', 'hoove', 'hopak', 'hoped', 'hoper', 'hopes', 'hopis', 'hoppy', 'hoppo', 'horae', 'horah', 'horal', 'horas', 'horde', 'horim', 'horla', 'horme', 'horny', 'horns', 'horol', 'horry', 'horse', 'horsy', 'horst', 'hosea', 'hosed', 'hosel', 'hosen', 'hoses', 'hosta', 'hosts', 'hotch', 'hotel', 'hotly', 'hotta', 'hough', 'hoult', 'hound', 'houri', 'hours', 'house', 'housy', 'houss', 'houve', 'hovel', 'hoven', 'hover', 'howdy', 'howea', 'howel', 'howes', 'howff', 'howfs', 'howks', 'howls', 'howso', 'hsien', 'hsuan', 'huaca', 'huaco', 'huari', 'huave', 'hubba', 'hubby', 'hucho', 'hucks', 'huffy', 'huffs', 'huger', 'huile', 'hulas', 'hulch', 'hulky', 'hulks', 'hullo', 'hulls', 'human', 'humbo', 'humet', 'humic', 'humid', 'humin', 'humit', 'humor', 'humph', 'humpy', 'humps', 'humus', 'hunch', 'hundi', 'hunks', 'hunts', 'hurds', 'hurly', 'hurls', 'huron', 'hurri', 'hurry', 'hurst', 'hurty', 'hurts', 'husho', 'husht', 'husky', 'husks', 'hussy', 'hutch', 'hutia', 'hutre', 'huzza', 'huzzy', 'yabbi', 'yabby', 'yaboo', 'yacal', 'yacca', 'yacht', 'yacks', 'yadim', 'yaffs', 'yager', 'yagis', 'yagua', 'yahan', 'yahoo', 'yaird', 'yajna', 'yakan', 'yakin', 'yakka', 'yakut', 'yalla', 'iambe', 'iambi', 'iambs', 'yamel', 'yamen', 'yameo', 'yampa', 'yamph', 'yamun', 'yanan', 'yangs', 'yanky', 'yanks', 'ianus', 'yaply', 'yapok', 'yapon', 'yappy', 'yaqui', 'yaray', 'yarak', 'yards', 'yarer', 'yarke', 'yarly', 'yarns', 'yarry', 'yarth', 'yasht', 'yasna', 'yauds', 'yauld', 'yaups', 'yawed', 'yawey', 'yawls', 'yawny', 'yawns', 'yawps', 'yazoo', 'iberi', 'ibota', 'icaco', 'icasm', 'iceni', 'ichor', 'ichth', 'icica', 'icier', 'icily', 'icker', 'ickle', 'yclad', 'icons', 'iconv', 'ictic', 'ictus', 'idaho', 'idaic', 'idant', 'idcue', 'iddat', 'iddhi', 'iddio', 'ideal', 'idean', 'ideas', 'ident', 'idest', 'ideta', 'idgah', 'idyll', 'idyls', 'idiom', 'idion', 'idiot', 'idism', 'idist', 'idite', 'idled', 'idler', 'idles', 'idola', 'idols', 'idose', 'idryl', 'yeans', 'yeara', 'yeard', 'yearn', 'years', 'yecch', 'yechy', 'yechs', 'yeech', 'yeggs', 'yelek', 'yelks', 'yells', 'yelps', 'yemen', 'yenta', 'yente', 'yeply', 'yerba', 'yerga', 'yerks', 'ierne', 'yerth', 'yerva', 'yeses', 'yesso', 'yesty', 'yetis', 'yetts', 'yeuky', 'yeuks', 'yeven', 'yezdi', 'yezzy', 'yfere', 'ifint', 'ifree', 'ifrit', 'ygapo', 'igara', 'igdyr', 'ighly', 'igloo', 'iglus', 'ignaw', 'ignis', 'ihlat', 'ihram', 'iiasa', 'yield', 'yikes', 'yills', 'yince', 'yinst', 'yipes', 'yirds', 'yirrs', 'yirth', 'ijmaa', 'ijore', 'ikary', 'ikona', 'ikons', 'ilama', 'ileac', 'ileal', 'ylems', 'ileon', 'ileum', 'ileus', 'iliac', 'iliad', 'ilial', 'ilian', 'iliau', 'ilima', 'ilion', 'ilium', 'iller', 'illth', 'illus', 'iloko', 'image', 'imago', 'imams', 'imaum', 'imban', 'imbat', 'imbed', 'imber', 'imbue', 'imcnt', 'imide', 'imido', 'imids', 'imine', 'imino', 'immew', 'immis', 'immit', 'immix', 'immov', 'immun', 'impar', 'imped', 'impel', 'impen', 'imper', 'impis', 'imply', 'impot', 'imput', 'imshi', 'imvia', 'inact', 'inaja', 'inane', 'inapt', 'inark', 'inarm', 'inbye', 'inbow', 'incan', 'incas', 'incle', 'incog', 'incor', 'incra', 'incur', 'incus', 'incut', 'indan', 'indef', 'indew', 'index', 'india', 'indic', 'indii', 'indyl', 'indin', 'indiv', 'indol', 'indow', 'indra', 'indri', 'induc', 'indue', 'indus', 'ineye', 'inept', 'ineri', 'inerm', 'inert', 'infer', 'infin', 'infit', 'infix', 'infos', 'infra', 'ingan', 'ingem', 'inger', 'ingle', 'inglu', 'ingot', 'inial', 'inigo', 'inion', 'injun', 'inked', 'inken', 'inker', 'inket', 'inkie', 'inkle', 'inkos', 'inkra', 'inlay', 'inlaw', 'inlet', 'inmew', 'inned', 'inner', 'innet', 'inoma', 'inone', 'inorb', 'inorg', 'input', 'inrol', 'inrub', 'inrun', 'insea', 'insee', 'insep', 'inset', 'insol', 'instr', 'insue', 'intel', 'inter', 'intil', 'intnl', 'intra', 'intro', 'intsv', 'intue', 'inula', 'inure', 'inurn', 'inust', 'invar', 'invoy', 'inwit', 'yobbo', 'yocco', 'yocks', 'iodal', 'yodel', 'yodhs', 'iodic', 'iodid', 'iodin', 'yodle', 'iodol', 'yogas', 'yogee', 'yoghs', 'yogic', 'yogin', 'yogis', 'yoick', 'yojan', 'yoked', 'yokel', 'yoker', 'yokes', 'yolky', 'yolks', 'yomer', 'yomim', 'yomin', 'yomud', 'ionic', 'yonic', 'yonis', 'yores', 'iortn', 'iotas', 'youff', 'young', 'youre', 'yourn', 'yours', 'yourt', 'youse', 'youth', 'youve', 'youze', 'yoven', 'iowan', 'yowed', 'yowes', 'yowie', 'yowls', 'iphis', 'yquem', 'irade', 'irani', 'iraqi', 'irate', 'irbis', 'irena', 'irene', 'ireos', 'irfan', 'irgun', 'irian', 'irido', 'iring', 'irish', 'irked', 'iroha', 'iroko', 'irone', 'irony', 'irons', 'irous', 'irpex', 'irred', 'irreg', 'irvin', 'irwin', 'isaac', 'isawa', 'isbas', 'iseum', 'isiac', 'ising', 'isize', 'islay', 'islam', 'isled', 'isles', 'islet', 'islot', 'ismal', 'isnad', 'isoln', 'isort', 'issei', 'issue', 'isthm', 'istle', 'itala', 'itali', 'italy', 'itchy', 'itcze', 'itemy', 'items', 'iters', 'ither', 'ytter', 'yuans', 'yucca', 'yucch', 'yuchi', 'yucky', 'yucks', 'yugas', 'yukon', 'yulan', 'yules', 'iulus', 'yuman', 'yummy', 'yunca', 'yupon', 'yurak', 'yurok', 'yurta', 'yurts', 'yuruk', 'ivied', 'ivies', 'ivory', 'ivray', 'ixias', 'ixion', 'ixora', 'ixtle', 'izard', 'izars', 'izing', 'izote', 'iztle', 'izumi', 'izzat', 'jabia', 'jabot', 'jabul', 'jacal', 'jacht', 'jacky', 'jacko', 'jacks', 'jacob', 'jaded', 'jades', 'jagat', 'jager', 'jaggy', 'jaggs', 'jagir', 'jagla', 'jagra', 'jagua', 'jahve', 'jails', 'jaime', 'jaina', 'jakey', 'jakes', 'jakob', 'jakos', 'jakun', 'jalap', 'jalee', 'jalet', 'jalop', 'jalor', 'jalur', 'jaman', 'jambe', 'jambo', 'jambs', 'james', 'jamie', 'jammy', 'janes', 'janet', 'janos', 'janty', 'jantu', 'janua', 'janus', 'japan', 'japed', 'japer', 'japes', 'japyx', 'jarde', 'jared', 'jarls', 'jarmo', 'jarra', 'jarry', 'jarvy', 'jasey', 'jason', 'jaspe', 'jatha', 'jatki', 'jatni', 'jatos', 'jauks', 'jaunt', 'jaups', 'javan', 'javas', 'javel', 'javer', 'jawab', 'jawan', 'jawed', 'jazey', 'jazzy', 'jeany', 'jeans', 'jebat', 'jebel', 'jebus', 'jeeps', 'jeery', 'jeers', 'jefes', 'jehad', 'jehup', 'jehus', 'jelab', 'jelib', 'jello', 'jells', 'jembe', 'jemez', 'jemmy', 'jenna', 'jenny', 'jerez', 'jerib', 'jerid', 'jerky', 'jerks', 'jerry', 'jesse', 'jests', 'jesus', 'jetes', 'jeton', 'jetty', 'jewed', 'jewel', 'jewis', 'jewry', 'jheel', 'jhool', 'jibba', 'jibby', 'jibbs', 'jibed', 'jiber', 'jibes', 'jiboa', 'jiffy', 'jiffs', 'jiggy', 'jihad', 'jills', 'jilts', 'jimbo', 'jimmy', 'jimpy', 'jingo', 'jingu', 'jinja', 'jinks', 'jinni', 'jinny', 'jinns', 'jiqui', 'jirga', 'jisms', 'jitro', 'jived', 'jives', 'jixie', 'jizya', 'jnana', 'jocko', 'jocks', 'jocum', 'jodel', 'joeys', 'johan', 'johns', 'joyce', 'joyed', 'joins', 'joint', 'joist', 'joked', 'jokey', 'joker', 'jokes', 'jokul', 'joles', 'jolly', 'jolty', 'jolts', 'jomon', 'jonah', 'jonas', 'jones', 'joola', 'joram', 'joree', 'jorge', 'jorum', 'josey', 'joshi', 'josie', 'josip', 'jotas', 'jotty', 'joual', 'jough', 'jougs', 'jouks', 'joule', 'journ', 'jours', 'joust', 'jowar', 'jowed', 'jowel', 'jower', 'jowly', 'jowls', 'jowpy', 'juang', 'juans', 'jubas', 'jubbe', 'jubes', 'jubus', 'judah', 'judas', 'judex', 'judge', 'judos', 'jufti', 'jufts', 'jugal', 'juger', 'jugum', 'juyas', 'juise', 'jujus', 'juked', 'jukes', 'julep', 'jules', 'julia', 'julid', 'julie', 'julio', 'julus', 'jumba', 'jumby', 'jumbo', 'jumma', 'jumpy', 'jumps', 'junco', 'jundy', 'junky', 'junks', 'junta', 'junto', 'jupes', 'jupon', 'jural', 'jurat', 'jurel', 'juris', 'juror', 'jussi', 'justo', 'justs', 'jutes', 'jutic', 'jutka', 'jutty', 'juvia', 'juxta', 'kaaba', 'kaama', 'kabab', 'kabar', 'kabel', 'kabob', 'kacha', 'kadis', 'kadmi', 'kados', 'kafir', 'kafiz', 'kafka', 'kafta', 'kagos', 'kagus', 'kahar', 'kahau', 'kaiak', 'kayak', 'kayan', 'kaifs', 'kails', 'kaimo', 'kains', 'kayos', 'kaiwi', 'kajar', 'kakan', 'kakar', 'kakas', 'kakis', 'kakke', 'kalam', 'kalan', 'kales', 'kalif', 'kalis', 'kalon', 'kalpa', 'kamao', 'kamas', 'kamba', 'kamel', 'kames', 'kamik', 'kamis', 'kanae', 'kanap', 'kanas', 'kanat', 'kande', 'kaneh', 'kanes', 'kanga', 'kanji', 'kannu', 'kansa', 'kanzu', 'kaons', 'kapai', 'kapas', 'kaphs', 'kapok', 'kappa', 'kappe', 'kapur', 'kaput', 'karat', 'karbi', 'karch', 'karel', 'karen', 'karez', 'karma', 'karns', 'karoo', 'karos', 'karou', 'karri', 'karst', 'karts', 'kaser', 'kasha', 'kashi', 'kaska', 'kassu', 'katar', 'katat', 'katha', 'kathy', 'katie', 'katik', 'katun', 'kauch', 'kauri', 'kaury', 'kavas', 'kaver', 'kazak', 'kazoo', 'keach', 'kearn', 'keats', 'keawe', 'kebar', 'kebby', 'kebob', 'kecky', 'kecks', 'kedar', 'kedge', 'kedgy', 'keech', 'keefs', 'keeks', 'keels', 'keena', 'keens', 'keeps', 'keest', 'keets', 'keeve', 'kefir', 'kefti', 'keyed', 'keirs', 'keist', 'keita', 'keith', 'keywd', 'keleh', 'kelek', 'kelep', 'kelia', 'kella', 'kelly', 'kelpy', 'kelps', 'kelty', 'kelts', 'kemal', 'kempy', 'kemps', 'kempt', 'kenaf', 'kenai', 'kench', 'kendy', 'kendo', 'kenya', 'kenny', 'kenno', 'kenos', 'kente', 'keout', 'kepis', 'kerat', 'kerbs', 'kerch', 'kerel', 'keres', 'kerfs', 'keryx', 'kerne', 'kerns', 'keros', 'kerri', 'kerry', 'kerve', 'kesar', 'kesse', 'ketal', 'ketch', 'keten', 'ketyl', 'ketol', 'kette', 'ketty', 'kevan', 'kevel', 'kever', 'kevil', 'kevin', 'kevyn', 'kexes', 'khadi', 'khaya', 'khair', 'khaja', 'khaki', 'khami', 'khans', 'khasa', 'khasi', 'khass', 'khats', 'kheda', 'khila', 'khmer', 'khoja', 'khoka', 'khond', 'khuai', 'khula', 'khuzi', 'khvat', 'kiaat', 'kiack', 'kyack', 'kiaki', 'kiang', 'kyang', 'kyars', 'kyats', 'kibei', 'kibes', 'kibla', 'kicky', 'kicks', 'kiddy', 'kiddo', 'kiefs', 'kieye', 'kiers', 'kiyas', 'kikar', 'kikes', 'kikki', 'kikoi', 'kilah', 'kilan', 'kileh', 'kiley', 'kylie', 'kilij', 'kilim', 'kylin', 'kylix', 'killy', 'kills', 'kilns', 'kyloe', 'kilom', 'kilos', 'kilty', 'kilts', 'kimbo', 'kimmo', 'kinah', 'kinch', 'kinds', 'kines', 'kings', 'kingu', 'kinic', 'kinin', 'kinky', 'kinks', 'kinoo', 'kinos', 'kinot', 'kioea', 'kioko', 'kiosk', 'kyoto', 'kiowa', 'kippy', 'kirby', 'kyrie', 'kirks', 'kirns', 'kirve', 'kisan', 'kishy', 'kisra', 'kissy', 'kists', 'kiswa', 'kitab', 'kitan', 'kitar', 'kited', 'kiter', 'kites', 'kytes', 'kithe', 'kythe', 'kiths', 'kitty', 'kyung', 'kivas', 'kiver', 'kiwai', 'kiwis', 'kizil', 'klans', 'klaus', 'kleig', 'klick', 'klieg', 'kling', 'klino', 'klong', 'kloof', 'klops', 'klosh', 'kluck', 'klunk', 'klutz', 'kmole', 'knack', 'knape', 'knaps', 'knark', 'knarl', 'knars', 'knave', 'knead', 'kneed', 'kneel', 'knees', 'knell', 'knelt', 'knezi', 'kniaz', 'knyaz', 'knick', 'knife', 'knish', 'knits', 'knive', 'knobs', 'knock', 'knoit', 'knoll', 'knops', 'knorr', 'knosp', 'knots', 'knout', 'knowe', 'known', 'knows', 'knurl', 'knurs', 'knute', 'knuth', 'koala', 'koali', 'koans', 'koban', 'kobus', 'kodak', 'kodro', 'koels', 'koeri', 'kofta', 'kogai', 'kogia', 'kohen', 'kohls', 'kohua', 'koyan', 'koila', 'koine', 'kokam', 'kokan', 'kokia', 'kokil', 'kokio', 'kokos', 'kokra', 'kokum', 'kolas', 'kolea', 'kolis', 'kolos', 'kombu', 'konak', 'konde', 'kondo', 'kongo', 'kongu', 'konia', 'kooka', 'kooky', 'kooks', 'koorg', 'kopec', 'kopek', 'kophs', 'kopis', 'kopje', 'koppa', 'korah', 'korai', 'koran', 'korea', 'korec', 'korin', 'korma', 'koroa', 'korun', 'korwa', 'kosha', 'kosin', 'kosos', 'kotal', 'kotar', 'kotos', 'kotow', 'kouza', 'kovil', 'kraal', 'kraft', 'krait', 'krama', 'krang', 'krans', 'kraut', 'krebs', 'kreil', 'kreis', 'krems', 'kreng', 'krepi', 'krill', 'krina', 'kriss', 'krivu', 'krome', 'krona', 'krone', 'kroon', 'krosa', 'krubi', 'kubba', 'kudos', 'kudus', 'kudzu', 'kufic', 'kugel', 'kukri', 'kukui', 'kulah', 'kulak', 'kulan', 'kuman', 'kumbi', 'kumyk', 'kumis', 'kumys', 'kumni', 'kunai', 'kunbi', 'kurku', 'kurmi', 'kurta', 'kurus', 'kusam', 'kusan', 'kusha', 'kusso', 'kusti', 'kusum', 'kutch', 'kutta', 'kvass', 'kvint', 'kwapa', 'kwela', 'laang', 'laban', 'labba', 'labby', 'label', 'labia', 'labis', 'labor', 'labra', 'lacca', 'laced', 'lacey', 'lacer', 'laces', 'lacet', 'lache', 'lacis', 'lacks', 'lacto', 'laded', 'laden', 'lader', 'lades', 'ladik', 'ladin', 'laeti', 'laevo', 'lagan', 'lagen', 'lagly', 'lagna', 'lahar', 'laich', 'laics', 'layed', 'layer', 'laigh', 'layia', 'laine', 'layne', 'laird', 'lairy', 'lairs', 'laith', 'laity', 'layup', 'laius', 'laked', 'lakey', 'laker', 'lakes', 'lakhs', 'lakie', 'lakin', 'lakke', 'laksa', 'lally', 'lalls', 'lamas', 'lamba', 'lamby', 'lambs', 'lamda', 'lamed', 'lamel', 'lamer', 'lames', 'lamia', 'lamin', 'lammy', 'lamna', 'lampf', 'lamps', 'lamus', 'lamut', 'lanai', 'lanao', 'lanas', 'lanaz', 'lance', 'lanch', 'lande', 'lands', 'laney', 'lanes', 'langi', 'lango', 'lanky', 'lanny', 'lansa', 'lanum', 'lapel', 'lapin', 'lapis', 'lapon', 'lappa', 'lapps', 'lapse', 'lapsi', 'larch', 'lardy', 'lards', 'lares', 'large', 'largy', 'largo', 'laria', 'larid', 'larin', 'larix', 'larky', 'larks', 'laron', 'larry', 'larum', 'larus', 'larva', 'larve', 'lased', 'laser', 'lases', 'lasso', 'lassu', 'lasty', 'lasts', 'latah', 'latax', 'latch', 'lated', 'laten', 'later', 'latex', 'lathe', 'lathi', 'lathy', 'laths', 'latin', 'laton', 'latro', 'latus', 'lauan', 'laude', 'lauds', 'laugh', 'lauia', 'laund', 'laura', 'laure', 'laury', 'lautu', 'lavas', 'laved', 'laver', 'laves', 'lavic', 'lawed', 'lawks', 'lawny', 'lawns', 'lawzy', 'laxer', 'laxly', 'lazar', 'lazed', 'lazes', 'leach', 'leady', 'leads', 'leafy', 'leafs', 'leaky', 'leaks', 'leany', 'leans', 'leant', 'leaps', 'leapt', 'leary', 'learn', 'lears', 'lease', 'leash', 'least', 'leath', 'leave', 'leavy', 'leban', 'leben', 'lebes', 'leche', 'leden', 'ledge', 'ledgy', 'ledol', 'ledum', 'leech', 'leeds', 'leeky', 'leeks', 'leery', 'leers', 'leese', 'leets', 'lefty', 'lefts', 'legal', 'leger', 'leges', 'legge', 'leggy', 'legis', 'legit', 'legoa', 'legua', 'lehay', 'lehrs', 'lehua', 'leigh', 'leila', 'leiss', 'leith', 'lekha', 'lelia', 'leman', 'lemel', 'lemma', 'lemna', 'lemur', 'lenad', 'lenca', 'lench', 'lends', 'lendu', 'lenes', 'lenin', 'lenis', 'lenny', 'lenos', 'lense', 'lenth', 'lento', 'leone', 'leora', 'lepal', 'lepas', 'leper', 'lepid', 'leppy', 'lepra', 'lepre', 'lepry', 'lepta', 'lepus', 'lerot', 'lerwa', 'lesed', 'lesgh', 'lesya', 'lesiy', 'lessn', 'leste', 'letch', 'lethe', 'lethy', 'letty', 'letup', 'leuch', 'leuco', 'leuds', 'leuma', 'leung', 'levee', 'level', 'leven', 'lever', 'levet', 'levin', 'levir', 'levis', 'lewie', 'lewis', 'lewth', 'lewty', 'lexia', 'lexic', 'lexis', 'lhota', 'liana', 'liane', 'liang', 'liard', 'lyard', 'liars', 'lyart', 'lyase', 'libby', 'libel', 'liber', 'libya', 'libra', 'libre', 'libri', 'licca', 'lycea', 'lycee', 'licet', 'lichi', 'licht', 'lycid', 'licit', 'licks', 'lycus', 'lidar', 'lidia', 'lydia', 'lidos', 'liege', 'liens', 'lyery', 'liers', 'liesh', 'liest', 'lieue', 'lieus', 'lieut', 'lieve', 'lifey', 'lifen', 'lifer', 'lifts', 'ligan', 'ligas', 'liger', 'ligge', 'light', 'ligne', 'lygus', 'lying', 'liked', 'liken', 'lyken', 'liker', 'likes', 'likin', 'lilac', 'lilas', 'liles', 'lilly', 'lilts', 'liman', 'limas', 'limax', 'limba', 'limbi', 'limby', 'limbo', 'limbs', 'limbu', 'limed', 'limey', 'limen', 'limer', 'limes', 'limit', 'limli', 'limma', 'limmu', 'limns', 'limos', 'lymph', 'limpy', 'limps', 'limsy', 'linac', 'linch', 'lynch', 'linda', 'lindy', 'lindo', 'linea', 'lined', 'liney', 'linen', 'liner', 'lines', 'linet', 'linga', 'linge', 'lingy', 'lingo', 'lings', 'linha', 'linie', 'linin', 'linja', 'linje', 'linky', 'links', 'linne', 'lynne', 'linns', 'linon', 'linos', 'linty', 'lints', 'linum', 'linus', 'lions', 'lipan', 'lipic', 'lipid', 'lipin', 'lippy', 'lipse', 'liras', 'lyres', 'lyric', 'lyrid', 'lirot', 'lysed', 'lyses', 'lysin', 'lysis', 'lisle', 'lysol', 'lisps', 'lyssa', 'listy', 'lists', 'liszt', 'litai', 'litas', 'litch', 'liter', 'lites', 'lithe', 'lythe', 'lithi', 'lithy', 'litho', 'lytic', 'litra', 'litre', 'lytta', 'litui', 'litus', 'lived', 'liven', 'lives', 'livid', 'livor', 'livre', 'liwan', 'llama', 'llano', 'lloyd', 'lludd', 'loach', 'loads', 'loafs', 'loamy', 'loams', 'loans', 'loasa', 'loath', 'loave', 'lobal', 'lobar', 'lobby', 'lobed', 'lobes', 'lobos', 'lobus', 'local', 'loche', 'lochi', 'lochy', 'lochs', 'locky', 'locks', 'locos', 'locum', 'locus', 'loden', 'lodes', 'lodge', 'lodha', 'lodur', 'loeil', 'loess', 'lofty', 'lofts', 'logan', 'loges', 'loggy', 'logia', 'logic', 'logie', 'login', 'logis', 'logoi', 'logos', 'lohan', 'lohar', 'loyal', 'loins', 'lokao', 'loket', 'lolly', 'lolls', 'lomta', 'loner', 'longa', 'longe', 'longs', 'looby', 'looch', 'looed', 'looey', 'loofa', 'loofs', 'looie', 'looky', 'looks', 'looms', 'loony', 'loons', 'loope', 'loopy', 'loops', 'loord', 'loory', 'loose', 'loots', 'loped', 'loper', 'lopes', 'loppy', 'loral', 'loran', 'lordy', 'lords', 'lored', 'lorel', 'loren', 'lores', 'loric', 'loris', 'loros', 'lorry', 'lorum', 'losel', 'loser', 'loses', 'lossy', 'lotah', 'lotan', 'lotas', 'lotic', 'lotor', 'lotos', 'lotta', 'lotte', 'lotto', 'lotus', 'louch', 'louey', 'lough', 'louie', 'louis', 'loulu', 'loupe', 'loups', 'lourd', 'loury', 'lours', 'louse', 'lousy', 'louty', 'louts', 'lovat', 'loved', 'lovee', 'lovey', 'lover', 'loves', 'lowan', 'lowed', 'lower', 'lowes', 'lowly', 'lowry', 'lowse', 'lowth', 'loxed', 'loxes', 'loxia', 'loxic', 'lrecl', 'luaus', 'lubes', 'lubra', 'lucan', 'luces', 'lucet', 'lucia', 'lucid', 'lucky', 'lucks', 'lucre', 'luddy', 'luffa', 'luffs', 'luger', 'luges', 'luian', 'luigi', 'luite', 'lukan', 'lukas', 'luket', 'lulab', 'lulav', 'lully', 'lulls', 'lulus', 'lumen', 'lumme', 'lummy', 'lumpy', 'lumps', 'lumut', 'lunar', 'lunas', 'lunda', 'lunel', 'lunes', 'lunet', 'lunge', 'lungi', 'lungy', 'lungs', 'lunka', 'lunks', 'lunts', 'lupid', 'lupin', 'lupis', 'lupus', 'lural', 'lurch', 'lured', 'lurer', 'lures', 'lurid', 'lurky', 'lurks', 'lurry', 'luser', 'lushy', 'lusky', 'lusty', 'lusts', 'lusus', 'lutao', 'lutea', 'luted', 'luteo', 'luter', 'lutes', 'lutra', 'luxes', 'luxus', 'maana', 'maars', 'mabel', 'macan', 'macao', 'macaw', 'macco', 'maced', 'macer', 'maces', 'machi', 'macho', 'machs', 'macks', 'macle', 'macon', 'macro', 'madam', 'madge', 'madia', 'madid', 'madly', 'madoc', 'madre', 'mafey', 'mafia', 'mafic', 'mafoo', 'magas', 'mages', 'maggy', 'maghi', 'magic', 'magma', 'magna', 'magog', 'magot', 'magus', 'mahal', 'mahar', 'mahat', 'mahdi', 'mahoe', 'mahra', 'mahri', 'mahua', 'mahwa', 'mayan', 'mayas', 'maybe', 'maida', 'mayda', 'maidy', 'maids', 'maidu', 'mayed', 'mayey', 'mayer', 'maiid', 'maile', 'maill', 'mails', 'maims', 'maine', 'mains', 'maint', 'maynt', 'mayor', 'maire', 'mairs', 'maist', 'mayst', 'maius', 'majas', 'major', 'majos', 'makah', 'makar', 'maker', 'makes', 'makos', 'makua', 'makuk', 'malay', 'malam', 'malar', 'malax', 'malee', 'maleo', 'males', 'malgr', 'malic', 'malie', 'malik', 'malls', 'malmy', 'malms', 'malta', 'malty', 'malto', 'malts', 'malum', 'malus', 'malva', 'malwa', 'mamas', 'mamba', 'mambo', 'mambu', 'mamey', 'mamie', 'mamma', 'mammy', 'mamry', 'manak', 'manal', 'manas', 'manba', 'mande', 'mandi', 'mands', 'maned', 'maneh', 'manei', 'maney', 'manes', 'manet', 'manga', 'mange', 'mangi', 'mangy', 'mania', 'manic', 'manid', 'manie', 'manis', 'manit', 'maniu', 'manky', 'manks', 'manly', 'manna', 'manny', 'manoc', 'manor', 'manos', 'manqu', 'manse', 'manso', 'manta', 'manty', 'manto', 'manuf', 'manul', 'manus', 'maori', 'mapau', 'maple', 'mappy', 'maqui', 'marae', 'marah', 'maray', 'maral', 'maras', 'march', 'marci', 'marco', 'marcs', 'mardi', 'mardy', 'marek', 'mares', 'marga', 'marge', 'maria', 'marid', 'marie', 'mario', 'maris', 'marys', 'marka', 'marko', 'marks', 'marla', 'marli', 'marly', 'marls', 'marok', 'maror', 'maros', 'marry', 'marse', 'marsh', 'marsi', 'marty', 'marts', 'martu', 'marvy', 'masai', 'maser', 'masha', 'mashy', 'masks', 'mason', 'massa', 'masse', 'massy', 'masty', 'masts', 'matai', 'matar', 'matax', 'match', 'mated', 'matey', 'mater', 'mates', 'matha', 'mathe', 'maths', 'matie', 'matin', 'matka', 'matlo', 'matra', 'matsu', 'matta', 'matte', 'matti', 'matty', 'matts', 'matza', 'matzo', 'mauby', 'maugh', 'mauls', 'maund', 'mauri', 'mauts', 'mauve', 'maven', 'mavie', 'mavin', 'mavis', 'mawed', 'mawky', 'mawks', 'maxim', 'maxis', 'mazda', 'mazed', 'mazel', 'mazer', 'mazes', 'mazic', 'mazur', 'mazut', 'mbaya', 'mbira', 'mbori', 'mbuba', 'mccoy', 'mckay', 'meach', 'meads', 'mealy', 'meals', 'meany', 'means', 'meant', 'mease', 'meath', 'meaty', 'meats', 'meaul', 'mebos', 'mecca', 'mecon', 'mecum', 'medal', 'medea', 'media', 'medic', 'medii', 'medio', 'medle', 'medoc', 'meece', 'meech', 'meeds', 'meeks', 'meese', 'meeth', 'meets', 'meggy', 'meiji', 'meile', 'meiny', 'meith', 'melam', 'melas', 'melba', 'melch', 'melds', 'melee', 'meles', 'melia', 'melic', 'melis', 'mells', 'meloe', 'melos', 'melts', 'memos', 'menad', 'menat', 'mende', 'mendi', 'mendy', 'mends', 'menic', 'menow', 'mensa', 'mense', 'mensk', 'menta', 'menus', 'meows', 'merak', 'merat', 'merce', 'merch', 'merci', 'mercy', 'mered', 'merel', 'merer', 'meres', 'merge', 'mergh', 'meril', 'merit', 'merks', 'merle', 'merls', 'merop', 'meros', 'merry', 'merse', 'mesad', 'mesal', 'mesas', 'mesel', 'mesem', 'meshy', 'mesic', 'mesne', 'meson', 'messe', 'messy', 'mesua', 'metad', 'metae', 'metal', 'metas', 'meted', 'metel', 'meter', 'metes', 'metho', 'meths', 'metic', 'metif', 'metin', 'metis', 'metol', 'metra', 'metre', 'metro', 'metus', 'metze', 'meuni', 'meuse', 'meute', 'mewed', 'mewer', 'mewls', 'mezzo', 'mhorr', 'myall', 'miami', 'miaou', 'miaow', 'miasm', 'miaul', 'miauw', 'micah', 'micas', 'miche', 'micht', 'micky', 'micks', 'mycol', 'micra', 'micro', 'midas', 'middy', 'mider', 'midge', 'midgy', 'midis', 'midst', 'miens', 'miffy', 'miffs', 'miggs', 'might', 'miked', 'mikey', 'mikes', 'mikie', 'mikir', 'mikra', 'milan', 'mylar', 'milch', 'miler', 'miles', 'milha', 'milia', 'milit', 'milky', 'milko', 'milks', 'milla', 'mille', 'milly', 'mills', 'milor', 'milos', 'milpa', 'milty', 'milts', 'mymar', 'mimed', 'mimeo', 'mimer', 'mimes', 'mimic', 'mimir', 'mimly', 'mimsy', 'mimus', 'mimzy', 'minae', 'minah', 'mynah', 'minar', 'minas', 'mynas', 'minbu', 'mincy', 'minds', 'mined', 'miner', 'mines', 'minge', 'mingy', 'mingo', 'minie', 'minim', 'minis', 'minks', 'minny', 'minor', 'minos', 'minot', 'minow', 'minum', 'minus', 'myoid', 'myoma', 'myope', 'myopy', 'myops', 'miqra', 'mirac', 'mirak', 'mired', 'mires', 'mirex', 'mirid', 'mirky', 'mirks', 'mirly', 'myron', 'myrrh', 'mirth', 'mirvs', 'mirza', 'misce', 'misdo', 'mysel', 'miser', 'mises', 'misgo', 'mysid', 'mysis', 'misky', 'misly', 'misos', 'missa', 'missy', 'misty', 'mists', 'mitch', 'miter', 'mites', 'myths', 'mitis', 'mitra', 'mitre', 'mitty', 'mitts', 'mitua', 'mixed', 'mixen', 'mixer', 'mixes', 'mixup', 'mizar', 'mizen', 'mizzy', 'mnage', 'mneme', 'mnium', 'moans', 'moats', 'mobby', 'mobed', 'mobil', 'moble', 'moche', 'mochy', 'mocks', 'mocoa', 'modal', 'model', 'modem', 'moder', 'modes', 'modge', 'modif', 'modoc', 'modus', 'moeck', 'moggy', 'mogos', 'mogul', 'mohar', 'mohel', 'mohos', 'mohur', 'mohwa', 'moyen', 'moier', 'moile', 'moyle', 'moils', 'moira', 'moire', 'moise', 'moism', 'moist', 'moity', 'mojos', 'mokes', 'mokum', 'molal', 'molar', 'molas', 'moldy', 'molds', 'moler', 'moles', 'molet', 'molge', 'molka', 'molla', 'molle', 'molly', 'molls', 'molpe', 'molto', 'molts', 'molvi', 'momes', 'momma', 'momme', 'mommy', 'momus', 'monad', 'monal', 'monas', 'monax', 'monde', 'mondo', 'money', 'monel', 'moner', 'mongo', 'monic', 'monie', 'monks', 'monny', 'monos', 'monte', 'month', 'monty', 'montu', 'mooch', 'moody', 'moods', 'mooed', 'moola', 'mools', 'moong', 'moony', 'moons', 'moore', 'moory', 'moorn', 'moors', 'moosa', 'moose', 'moost', 'mooth', 'moots', 'mopan', 'moped', 'mopey', 'moper', 'mopes', 'mopla', 'moppy', 'mopsy', 'mopus', 'moqui', 'morae', 'moray', 'moral', 'moran', 'moras', 'morat', 'mordu', 'mordv', 'morel', 'mores', 'morga', 'moric', 'morin', 'mormo', 'morne', 'morns', 'moroc', 'moron', 'moror', 'morph', 'morra', 'morro', 'morse', 'morth', 'morts', 'morus', 'mosan', 'mosey', 'mosel', 'moses', 'mosgu', 'mosks', 'mossi', 'mossy', 'mosso', 'moste', 'mosts', 'mosul', 'mosur', 'moted', 'motey', 'motel', 'moter', 'motes', 'motet', 'mothy', 'moths', 'motif', 'moton', 'motor', 'motte', 'motty', 'motto', 'motts', 'mouch', 'moudy', 'moues', 'mould', 'moule', 'mouly', 'mouls', 'moult', 'mound', 'mount', 'mourn', 'mouse', 'mousy', 'mouth', 'moved', 'mover', 'moves', 'movie', 'mowch', 'mowed', 'mower', 'mowha', 'mowie', 'mowra', 'mowse', 'mowth', 'moxas', 'moxie', 'mozos', 'mphps', 'mpret', 'msink', 'mster', 'mtier', 'muang', 'mucic', 'mucid', 'mucin', 'mucky', 'mucks', 'mucor', 'mucro', 'mucus', 'mudar', 'mudde', 'muddy', 'mudee', 'mudir', 'mudra', 'muffy', 'muffs', 'mufti', 'mufty', 'muggy', 'muggs', 'mugho', 'mugil', 'muhly', 'muist', 'mujik', 'mukri', 'mukti', 'mulch', 'mulct', 'muled', 'muley', 'mules', 'mulet', 'mulga', 'mulla', 'mulls', 'mulse', 'multi', 'multo', 'mumbo', 'mummy', 'mumms', 'mumps', 'mumsy', 'munda', 'munga', 'munge', 'mungy', 'mungo', 'munia', 'munic', 'muntz', 'muong', 'muons', 'mural', 'muran', 'muras', 'murat', 'mured', 'mures', 'murex', 'murga', 'murid', 'murky', 'murks', 'murly', 'murmi', 'murph', 'murra', 'murre', 'murry', 'murrs', 'murut', 'murva', 'murza', 'musal', 'musar', 'musca', 'musci', 'mused', 'muser', 'muses', 'muset', 'musgu', 'musha', 'mushy', 'music', 'musie', 'musit', 'musky', 'musks', 'mussy', 'musth', 'musty', 'musts', 'mutch', 'muted', 'muter', 'mutes', 'mutic', 'mutts', 'mutus', 'muzzy', 'nabak', 'nabal', 'nabby', 'nabis', 'nabla', 'nable', 'nabob', 'nache', 'nacho', 'nacre', 'nacry', 'nadir', 'naevi', 'nagel', 'naggy', 'naght', 'nagor', 'nahor', 'nahua', 'nahum', 'naiad', 'nayar', 'naias', 'naifs', 'naily', 'nails', 'naira', 'nairy', 'naish', 'naive', 'naked', 'naker', 'nakir', 'nakoo', 'naled', 'namaz', 'nambe', 'namby', 'namda', 'named', 'namer', 'names', 'namma', 'nammo', 'nanas', 'nance', 'nancy', 'nanda', 'nandi', 'nandu', 'nanes', 'nanga', 'nanmu', 'nanny', 'nants', 'nantz', 'naomi', 'naoto', 'napal', 'napes', 'napoo', 'nappa', 'nappe', 'nappy', 'narco', 'narcs', 'nards', 'nardu', 'naren', 'nares', 'naric', 'naris', 'narky', 'narks', 'narra', 'nasab', 'nasal', 'nasat', 'nasch', 'nassa', 'nasty', 'nasua', 'nasus', 'natal', 'natch', 'nates', 'nathe', 'natty', 'natus', 'nauch', 'naumk', 'naunt', 'naval', 'navar', 'navel', 'naves', 'navet', 'navew', 'navig', 'navis', 'navvy', 'nawab', 'nawle', 'nawob', 'nazim', 'nazir', 'nazis', 'neaps', 'nears', 'neath', 'neats', 'nebby', 'nebel', 'necia', 'necks', 'necro', 'neddy', 'needy', 'needn', 'needs', 'neela', 'neeld', 'neele', 'neems', 'neeps', 'neese', 'neeze', 'nefas', 'neffy', 'neger', 'negro', 'negus', 'nehru', 'neifs', 'neigh', 'neist', 'nejdi', 'nelly', 'nemas', 'nemos', 'nenes', 'nenta', 'neons', 'neoza', 'nepal', 'neper', 'nepit', 'neral', 'nerds', 'nerka', 'nerol', 'nerts', 'nertz', 'nerve', 'nervy', 'nesty', 'nests', 'neter', 'netop', 'netty', 'netts', 'neuma', 'neume', 'neums', 'nevat', 'nevel', 'neven', 'never', 'neves', 'nevoy', 'nevus', 'newar', 'newel', 'newer', 'newly', 'newsy', 'newts', 'nexal', 'nexum', 'nexus', 'ngaio', 'ngapi', 'ngoko', 'ngoma', 'ngwee', 'nyaya', 'niais', 'nyala', 'niall', 'niata', 'nibby', 'nicer', 'niche', 'nicht', 'nicky', 'nicks', 'nicol', 'nidal', 'nided', 'nides', 'nidge', 'nydia', 'nidor', 'nidus', 'niece', 'niels', 'niepa', 'nieve', 'nific', 'nifle', 'nifty', 'nigel', 'nighs', 'night', 'nigre', 'nigua', 'nihal', 'nihil', 'nikau', 'nikko', 'nikon', 'nills', 'nylon', 'nilot', 'nimbi', 'nymil', 'nymph', 'nymss', 'nines', 'ninja', 'ninny', 'ninon', 'ninos', 'ninox', 'ninth', 'nintu', 'ninut', 'niobe', 'nyoro', 'niota', 'nipas', 'nippy', 'niris', 'nirls', 'nisan', 'nisei', 'nyssa', 'nisse', 'nisus', 'nitch', 'niter', 'nitid', 'niton', 'nitos', 'nitre', 'nitro', 'nitta', 'nitty', 'niuan', 'nival', 'nixed', 'nixer', 'nixes', 'nixie', 'nyxis', 'nixon', 'nizam', 'nizey', 'njave', 'nobby', 'nobel', 'nobis', 'noble', 'nobly', 'nobut', 'nocht', 'nocks', 'nodal', 'noddi', 'noddy', 'noded', 'nodes', 'nodus', 'noels', 'noemi', 'nogai', 'nogal', 'noggs', 'nohex', 'nohow', 'noyau', 'noily', 'noils', 'noint', 'noire', 'noise', 'noisy', 'nokta', 'nolle', 'nolos', 'nomad', 'nomap', 'nomas', 'nomen', 'nomes', 'nomic', 'nomoi', 'nomos', 'nonas', 'nonce', 'nonda', 'nondo', 'nones', 'nonet', 'nonya', 'nonic', 'nonyl', 'nonly', 'nonny', 'nooky', 'nooks', 'noons', 'noose', 'nopal', 'norah', 'noria', 'noric', 'norie', 'norit', 'norma', 'norms', 'norna', 'norry', 'norse', 'norsk', 'north', 'nosed', 'nosey', 'noser', 'noses', 'nosig', 'notal', 'notan', 'notch', 'noted', 'noter', 'notes', 'notre', 'notum', 'notus', 'nould', 'nouns', 'novae', 'novas', 'novel', 'novem', 'novum', 'novus', 'noway', 'nowch', 'nowed', 'nowel', 'nowts', 'noxal', 'npeel', 'nuadu', 'nubby', 'nubia', 'nucal', 'nucha', 'nucin', 'nuddy', 'nuder', 'nudes', 'nudge', 'nudie', 'nudum', 'nudzh', 'nugae', 'nukes', 'nullo', 'nulls', 'numac', 'numbs', 'numda', 'numen', 'numis', 'nummi', 'numps', 'numud', 'nunce', 'nunch', 'nunki', 'nunky', 'nunks', 'nunni', 'nunry', 'nuque', 'nurly', 'nurls', 'nurry', 'nurse', 'nursy', 'nutsy', 'nutty', 'oadal', 'oaken', 'oakum', 'oared', 'oaric', 'oasal', 'oases', 'oasis', 'oasts', 'oaten', 'oater', 'oaths', 'oaves', 'obeah', 'obeys', 'obeli', 'obese', 'obias', 'obiit', 'obits', 'objet', 'oblat', 'obley', 'obmit', 'oboes', 'obole', 'oboli', 'obols', 'occas', 'occur', 'ocean', 'ocher', 'ochna', 'ochre', 'ochry', 'ochro', 'ocyte', 'ocker', 'ocote', 'ocque', 'ocrea', 'octad', 'octal', 'octan', 'octet', 'octic', 'octyl', 'ocuby', 'oculi', 'odder', 'oddly', 'odell', 'odeon', 'odeum', 'odyle', 'odyls', 'odist', 'odium', 'odoom', 'odors', 'odour', 'oecus', 'oelet', 'oenin', 'ofays', 'offal', 'offed', 'offer', 'offic', 'often', 'ofter', 'oftly', 'ogams', 'ogeed', 'ogees', 'ogham', 'oghuz', 'ogive', 'ogled', 'ogler', 'ogles', 'ogmic', 'ogres', 'ohare', 'ohelo', 'ohias', 'ohing', 'ohmic', 'ohone', 'oyana', 'oicks', 'oidia', 'oyers', 'oiled', 'oiler', 'oylet', 'oinks', 'oisin', 'okays', 'okapi', 'okehs', 'okras', 'okrug', 'olcha', 'olchi', 'olden', 'older', 'oldie', 'oleic', 'olein', 'olena', 'olent', 'oleos', 'olepy', 'oleum', 'olios', 'oliva', 'ollas', 'ollav', 'ollie', 'ology', 'olona', 'olpae', 'olpes', 'olson', 'omaha', 'omani', 'omasa', 'omber', 'ombre', 'omega', 'omens', 'omers', 'omina', 'omits', 'omlah', 'omnes', 'omrah', 'oncer', 'onces', 'oncet', 'oncia', 'oncin', 'onery', 'onymy', 'onium', 'onker', 'onkos', 'onlay', 'onlap', 'onmun', 'onset', 'ontal', 'ontic', 'oobit', 'oohed', 'oolak', 'oolly', 'oomph', 'oopak', 'oopod', 'oorie', 'ootid', 'oozed', 'oozes', 'oozoa', 'opahs', 'opals', 'opata', 'opelu', 'opens', 'opera', 'ophic', 'ophir', 'ophis', 'opine', 'oping', 'opium', 'opsin', 'opted', 'optic', 'orach', 'oracy', 'orage', 'orale', 'orals', 'orang', 'orans', 'orant', 'oraon', 'orary', 'orate', 'orbed', 'orbic', 'orbit', 'orcas', 'orcin', 'order', 'ordos', 'oread', 'oreas', 'orgal', 'organ', 'orgia', 'orgic', 'orgue', 'orias', 'oribi', 'oriel', 'oriya', 'orion', 'oryza', 'orkey', 'orles', 'orlet', 'orlon', 'orlop', 'orlos', 'ormer', 'ornes', 'ornis', 'oromo', 'orpin', 'orpit', 'orris', 'orrow', 'orsel', 'orson', 'ortet', 'ortho', 'ortyx', 'ortol', 'orvet', 'osage', 'osaka', 'oscan', 'oscar', 'oscin', 'osela', 'oshac', 'oshea', 'oside', 'osier', 'oskar', 'osmic', 'osmin', 'osmol', 'osone', 'ossal', 'ossea', 'osset', 'ossia', 'ostia', 'ostic', 'otary', 'otate', 'other', 'othin', 'otyak', 'otium', 'otkon', 'otomi', 'ottar', 'otter', 'ottos', 'ouabe', 'ought', 'ouija', 'oukia', 'oulap', 'ounce', 'oundy', 'ounds', 'ouphe', 'ouphs', 'ourie', 'ousel', 'ousia', 'ousts', 'outas', 'outby', 'outdo', 'outed', 'outen', 'outer', 'outgo', 'outly', 'outre', 'ouvre', 'ouzel', 'ouzos', 'ovals', 'ovant', 'ovary', 'ovate', 'ovens', 'overs', 'overt', 'ovest', 'ovile', 'ovine', 'ovism', 'ovist', 'ovoid', 'ovoli', 'ovolo', 'ovula', 'ovule', 'owght', 'owing', 'owler', 'owlet', 'owned', 'owner', 'owsen', 'owser', 'oxane', 'oxboy', 'oxbow', 'oxeye', 'oxfly', 'oxide', 'oxids', 'oxime', 'oxims', 'oxlip', 'oxman', 'oxter', 'ozark', 'ozena', 'ozias', 'ozone', 'paauw', 'pablo', 'pacay', 'pacas', 'paced', 'pacer', 'paces', 'pacha', 'pacht', 'packs', 'pacos', 'pacta', 'pacts', 'padda', 'paddy', 'padge', 'padle', 'padou', 'padre', 'padri', 'padus', 'paean', 'paeon', 'pagan', 'paged', 'pager', 'pages', 'pagne', 'pagod', 'pagus', 'pahmi', 'pahos', 'payed', 'payee', 'payen', 'payer', 'paiks', 'pails', 'paine', 'payni', 'pains', 'paint', 'payor', 'pairs', 'pairt', 'paisa', 'paise', 'palay', 'palar', 'palas', 'palau', 'palch', 'palea', 'paled', 'paler', 'pales', 'palet', 'palew', 'palis', 'palki', 'palla', 'palli', 'pally', 'palls', 'pallu', 'palma', 'palmy', 'palmo', 'palms', 'palpi', 'palps', 'palsy', 'palta', 'palus', 'pamhy', 'pamir', 'pampa', 'panak', 'panax', 'panda', 'pandy', 'paned', 'panel', 'panes', 'panga', 'pangi', 'pangs', 'panic', 'panna', 'panne', 'panos', 'panse', 'pansy', 'panty', 'panto', 'pants', 'panus', 'paola', 'paolo', 'papal', 'papas', 'papaw', 'papey', 'paper', 'papio', 'papyr', 'pappi', 'pappy', 'papua', 'paque', 'parah', 'param', 'parao', 'paras', 'parch', 'parde', 'pardi', 'pardy', 'pardo', 'pards', 'pared', 'parel', 'paren', 'parer', 'pares', 'pareu', 'parge', 'pargo', 'paris', 'parka', 'parky', 'parks', 'parle', 'parli', 'parly', 'parma', 'parol', 'parra', 'parry', 'parrs', 'parse', 'parsi', 'parte', 'parti', 'party', 'parto', 'parts', 'parus', 'parve', 'pasan', 'pasch', 'paseo', 'pases', 'pasha', 'pashm', 'pasis', 'pasmo', 'passe', 'passo', 'passu', 'pasty', 'pasts', 'pasul', 'patao', 'patas', 'patch', 'pated', 'patee', 'patel', 'paten', 'pater', 'pates', 'pathy', 'paths', 'patia', 'patin', 'patio', 'patly', 'patsy', 'patta', 'patte', 'pattu', 'pauky', 'paula', 'pause', 'pauxi', 'pavan', 'paved', 'paven', 'paver', 'paves', 'pavia', 'pavid', 'pavin', 'pavis', 'pawaw', 'pawed', 'pawer', 'pawky', 'pawls', 'pawns', 'paxes', 'pbxes', 'peace', 'peage', 'peags', 'peaky', 'peaks', 'peals', 'peans', 'pearl', 'pears', 'peart', 'pease', 'peasy', 'peaty', 'peats', 'peavy', 'peban', 'pechs', 'pecht', 'pecky', 'pecks', 'pecos', 'pedal', 'pedee', 'pedes', 'pedro', 'pedum', 'peeke', 'peeks', 'peele', 'peels', 'peens', 'peeoy', 'peepy', 'peeps', 'peery', 'peers', 'peert', 'peeve', 'peggy', 'pegma', 'peine', 'peins', 'peise', 'peize', 'pekan', 'pekes', 'pekin', 'pekoe', 'peles', 'pelew', 'pelfs', 'pelon', 'pelta', 'pelts', 'penal', 'pence', 'penda', 'pendn', 'pends', 'penes', 'pengo', 'penis', 'penna', 'penni', 'penny', 'pense', 'pensy', 'penta', 'penup', 'peony', 'peons', 'pepla', 'pepos', 'peppy', 'pepsi', 'perai', 'perau', 'perca', 'perch', 'percy', 'perdy', 'perdu', 'peres', 'peril', 'peris', 'perit', 'perky', 'perks', 'perla', 'perle', 'perms', 'perry', 'perse', 'perty', 'perun', 'pesah', 'pesky', 'pesos', 'peste', 'pests', 'petal', 'peter', 'petit', 'petos', 'petre', 'petri', 'petro', 'petti', 'petty', 'petto', 'petum', 'peuhl', 'pewee', 'pewit', 'pflag', 'pfund', 'pgntt', 'phaca', 'phaet', 'phage', 'phane', 'phano', 'phare', 'pharm', 'pharo', 'phase', 'phasm', 'pheal', 'phebe', 'phene', 'pheny', 'pheon', 'phial', 'phies', 'phyla', 'phyle', 'phill', 'phyma', 'physa', 'phlox', 'phoby', 'phoca', 'phoma', 'phone', 'phony', 'phono', 'phons', 'phora', 'phose', 'phoss', 'photo', 'phots', 'phpht', 'phren', 'piaba', 'piala', 'piano', 'pians', 'piast', 'pibal', 'picae', 'pical', 'picas', 'picea', 'pyche', 'pichi', 'picky', 'picks', 'picot', 'picra', 'picry', 'picul', 'picus', 'pidan', 'piece', 'piend', 'piers', 'piert', 'piest', 'pieta', 'piete', 'piety', 'piezo', 'pygal', 'piggy', 'pight', 'pigly', 'pigmy', 'pygmy', 'piing', 'pyins', 'pikas', 'piked', 'pikey', 'pikel', 'piker', 'pikes', 'pikle', 'pilar', 'pylar', 'pilau', 'pilaw', 'pilch', 'pilea', 'piled', 'pilei', 'piler', 'piles', 'pylic', 'pilin', 'pilis', 'pills', 'pilmy', 'pilon', 'pylon', 'pilot', 'pilum', 'pilus', 'piman', 'pimas', 'pimps', 'pinal', 'pinas', 'pinax', 'pinch', 'pinda', 'pindy', 'pined', 'piney', 'piner', 'pines', 'pinge', 'pingo', 'pings', 'pinic', 'pinyl', 'pinky', 'pinko', 'pinks', 'pinna', 'pinny', 'pinon', 'pinot', 'pynot', 'pinta', 'pinte', 'pinto', 'pints', 'pinup', 'pinus', 'pyoid', 'pions', 'piotr', 'pious', 'pioxe', 'pipal', 'piped', 'pipey', 'piper', 'pipes', 'pipet', 'pipid', 'pipil', 'pipit', 'pippy', 'pipra', 'pique', 'pyral', 'pyran', 'pyres', 'pyrex', 'pyric', 'pirny', 'pirns', 'pirog', 'pirol', 'pirot', 'pyrus', 'pisay', 'pisan', 'pisco', 'pishu', 'pisky', 'piste', 'pisum', 'pitas', 'pitau', 'pitch', 'pithy', 'piths', 'piton', 'pitta', 'piuri', 'piute', 'pivot', 'piwut', 'pixel', 'pixes', 'pyxes', 'pixie', 'pyxie', 'pyxis', 'place', 'plack', 'plaga', 'plage', 'playa', 'plaid', 'plain', 'plays', 'plait', 'plane', 'plang', 'plank', 'plans', 'plant', 'plash', 'plasm', 'plass', 'platy', 'plato', 'plats', 'platt', 'plaud', 'plaza', 'plead', 'pleas', 'pleat', 'plebe', 'plebs', 'pleck', 'pleis', 'plena', 'pleny', 'pleon', 'plica', 'plied', 'plier', 'plyer', 'plies', 'pliny', 'plink', 'pliss', 'ploat', 'ploce', 'plock', 'plods', 'ploys', 'plomb', 'plonk', 'plook', 'plops', 'plote', 'plots', 'plott', 'plotx', 'plouk', 'plout', 'plows', 'pluck', 'pluff', 'plugs', 'pluma', 'plumb', 'plume', 'plumy', 'plump', 'plums', 'plunk', 'plupf', 'plush', 'pluto', 'pneum', 'poach', 'pobby', 'pocan', 'poche', 'pocky', 'pocks', 'pocul', 'pocus', 'podal', 'poddy', 'podex', 'podge', 'podgy', 'podia', 'podos', 'poems', 'poesy', 'poets', 'pogey', 'pogge', 'poggy', 'pohna', 'poilu', 'poind', 'point', 'poyou', 'poire', 'poise', 'pokan', 'poked', 'pokey', 'poker', 'pokes', 'pokie', 'pokom', 'polab', 'polar', 'poled', 'poley', 'poler', 'poles', 'polio', 'polyp', 'polis', 'polys', 'polit', 'polje', 'polka', 'polki', 'polly', 'polls', 'poloi', 'polos', 'pomak', 'pombe', 'pombo', 'pomey', 'pomel', 'pomes', 'pomme', 'pommy', 'pompa', 'pomps', 'ponca', 'ponce', 'pondy', 'pondo', 'ponds', 'poney', 'pones', 'ponga', 'pongo', 'ponja', 'ponos', 'ponto', 'pooch', 'poods', 'poohs', 'pooka', 'pooli', 'pooly', 'pools', 'poons', 'poops', 'poori', 'poort', 'pooty', 'poove', 'popal', 'popes', 'popie', 'poppa', 'poppy', 'popsy', 'poral', 'porch', 'pored', 'porer', 'pores', 'poret', 'porge', 'porgy', 'porgo', 'poria', 'porky', 'porks', 'porno', 'porns', 'poros', 'porry', 'porta', 'porte', 'porty', 'porto', 'ports', 'porus', 'posca', 'posed', 'posey', 'poser', 'poses', 'posho', 'posit', 'posse', 'possy', 'posts', 'potch', 'poter', 'potoo', 'potsy', 'potti', 'potty', 'potto', 'potus', 'pouce', 'pouch', 'poucy', 'pouff', 'poufs', 'poule', 'poulp', 'poult', 'pound', 'pours', 'pousy', 'pouty', 'pouts', 'powan', 'power', 'powny', 'poxed', 'poxes', 'pozzy', 'praam', 'prado', 'prahm', 'prahu', 'praya', 'prays', 'prams', 'prana', 'prand', 'prang', 'prank', 'praos', 'prase', 'prate', 'prats', 'pratt', 'praus', 'prawn', 'predy', 'preed', 'preen', 'prees', 'preys', 'prela', 'prepd', 'prepg', 'prepn', 'preps', 'presa', 'prese', 'press', 'prest', 'preta', 'preux', 'preve', 'prexy', 'priam', 'price', 'prich', 'pricy', 'prick', 'pride', 'pridy', 'pried', 'prier', 'pryer', 'pries', 'prigs', 'prill', 'prima', 'prime', 'primi', 'primy', 'primo', 'primp', 'prims', 'prine', 'prink', 'print', 'prion', 'prior', 'prise', 'pryse', 'prism', 'priss', 'prius', 'privy', 'prize', 'proal', 'proas', 'probe', 'prodd', 'prods', 'proem', 'profs', 'progs', 'proke', 'prole', 'promo', 'proms', 'prone', 'prong', 'proof', 'propr', 'props', 'prore', 'prose', 'prosy', 'proso', 'pross', 'prost', 'prote', 'proto', 'proud', 'prove', 'prowl', 'prows', 'proxy', 'prude', 'prudy', 'prunt', 'pruta', 'psalm', 'psend', 'pseud', 'pshav', 'pshaw', 'psych', 'psize', 'psoae', 'psoai', 'psoas', 'psora', 'pubal', 'pubes', 'pubic', 'pubis', 'puces', 'pucka', 'pucks', 'pudda', 'puddy', 'pudge', 'pudgy', 'pudic', 'pudsy', 'puffy', 'puffs', 'puget', 'puggi', 'puggy', 'pugil', 'puist', 'puked', 'puker', 'pukes', 'pukka', 'pulas', 'puled', 'puler', 'pules', 'pulex', 'pulik', 'pulis', 'pulka', 'pulli', 'pulls', 'pulps', 'pulse', 'pumas', 'pumex', 'pumps', 'punan', 'punas', 'punce', 'punct', 'punga', 'pungi', 'pungy', 'pungs', 'punic', 'punka', 'punky', 'punks', 'punkt', 'punny', 'punta', 'punti', 'punty', 'punto', 'punts', 'pupae', 'pupal', 'pupas', 'pupil', 'puppy', 'purau', 'purda', 'purdy', 'pured', 'purey', 'purer', 'purga', 'purge', 'purim', 'purin', 'puris', 'purls', 'purre', 'purry', 'purrs', 'purse', 'pursy', 'purty', 'puses', 'pushy', 'pussy', 'putid', 'puton', 'putti', 'putty', 'putto', 'putts', 'qaids', 'qanat', 'qatar', 'qiana', 'qibla', 'qiyas', 'qophs', 'quack', 'quadi', 'quads', 'quaff', 'quags', 'quail', 'quais', 'quays', 'quake', 'quaky', 'quale', 'qualm', 'quant', 'quare', 'quark', 'quarl', 'quash', 'quasi', 'quass', 'quata', 'quate', 'quauk', 'quave', 'quawk', 'qubba', 'queak', 'queal', 'quean', 'queen', 'queer', 'queet', 'quegh', 'queys', 'quell', 'quelt', 'queme', 'quent', 'query', 'querl', 'quern', 'quest', 'queue', 'quica', 'quick', 'quids', 'quiet', 'quiff', 'quila', 'quill', 'quilt', 'quina', 'quink', 'quins', 'quint', 'quipo', 'quips', 'quipu', 'quira', 'quire', 'quirk', 'quirl', 'quirt', 'quist', 'quite', 'quito', 'quits', 'quitu', 'quoad', 'quods', 'quoin', 'quoit', 'quota', 'quote', 'quoth', 'quott', 'qursh', 'qurti', 'raash', 'rabal', 'rabat', 'rabbi', 'rabic', 'rabid', 'rabin', 'rabot', 'raced', 'racer', 'races', 'rache', 'racks', 'racon', 'radar', 'radek', 'radii', 'radio', 'radix', 'radly', 'radon', 'raffe', 'raffs', 'rafik', 'rafty', 'rafts', 'ragas', 'raged', 'ragee', 'rager', 'rages', 'raggy', 'raghu', 'ragis', 'rahul', 'raiae', 'rayah', 'rayan', 'raias', 'rayas', 'rayat', 'raids', 'rayed', 'rails', 'rainy', 'rains', 'rayon', 'raise', 'rajab', 'rajah', 'rajas', 'rajes', 'rajiv', 'rakan', 'raked', 'rakee', 'raker', 'rakes', 'rakis', 'rakit', 'rales', 'rally', 'ralph', 'ramal', 'raman', 'rambo', 'ramed', 'ramee', 'ramet', 'ramex', 'ramie', 'rammi', 'rammy', 'ramon', 'ramps', 'ramta', 'ramus', 'ranal', 'rance', 'randy', 'randn', 'rands', 'ranee', 'range', 'rangy', 'ranid', 'ranis', 'ranks', 'ranli', 'ranny', 'ranty', 'rants', 'raped', 'raper', 'rapes', 'raphe', 'rapic', 'rapid', 'rappe', 'rarer', 'rased', 'rasen', 'raser', 'rases', 'rason', 'raspy', 'rasps', 'rasse', 'rasty', 'ratal', 'ratan', 'ratch', 'rated', 'ratel', 'rater', 'rates', 'ratha', 'rathe', 'ratio', 'ratos', 'ratti', 'ratty', 'ratwa', 'rauli', 'raupo', 'raved', 'ravel', 'raven', 'raver', 'raves', 'ravin', 'rawer', 'rawin', 'rawky', 'rawly', 'raxed', 'raxes', 'razed', 'razee', 'razer', 'razes', 'razoo', 'razor', 'reaal', 'reach', 'react', 'readd', 'ready', 'readl', 'reads', 'reaks', 'realm', 'reals', 'reamy', 'reams', 'reaps', 'rearm', 'rears', 'reasy', 'reask', 'reast', 'reata', 'reave', 'rebab', 'rebag', 'reban', 'rebar', 'rebbe', 'rebec', 'rebed', 'rebeg', 'rebel', 'rebia', 'rebid', 'rebob', 'rebop', 'rebox', 'rebud', 'rebuy', 'rebus', 'rebut', 'recap', 'recce', 'reccy', 'recco', 'recip', 'recit', 'recks', 'recon', 'recpt', 'recta', 'recti', 'recto', 'recur', 'recut', 'redan', 'reddy', 'redds', 'reded', 'redes', 'redia', 'redid', 'redye', 'redig', 'redip', 'redly', 'redos', 'redox', 'redry', 'redub', 'redue', 'redug', 'redux', 'reedy', 'reeds', 'reefy', 'reefs', 'reeky', 'reeks', 'reels', 'reese', 'reesk', 'reest', 'reeve', 'refan', 'refed', 'refel', 'refer', 'reffo', 'refit', 'refix', 'refly', 'refry', 'regal', 'regel', 'reges', 'reget', 'regga', 'regia', 'regie', 'regin', 'regle', 'regma', 'regna', 'regur', 'rehem', 'rehid', 'rehoe', 'reice', 'reich', 'reify', 'reifs', 'reign', 'reina', 'reink', 'reins', 'reist', 'reive', 'rejig', 'rekey', 'relay', 'relap', 'relax', 'reles', 'relet', 'relic', 'relig', 'relit', 'relot', 'reman', 'remap', 'remen', 'remet', 'remex', 'remit', 'remix', 'remop', 'remue', 'remus', 'renay', 'renal', 'rends', 'rendu', 'reneg', 'renes', 'renet', 'renew', 'renga', 'renig', 'renin', 'renky', 'renne', 'rente', 'rents', 'reoil', 'reown', 'repad', 'repay', 'repas', 'repeg', 'repel', 'repen', 'repew', 'repic', 'repin', 'reply', 'repot', 'repps', 'repry', 'repro', 'reran', 'reree', 'rerig', 'rerob', 'rerow', 'rerub', 'rerun', 'resay', 'resat', 'resaw', 'resee', 'reset', 'resew', 'resex', 'resid', 'resin', 'resit', 'resow', 'resty', 'restr', 'rests', 'resue', 'resun', 'resup', 'retag', 'retal', 'retan', 'retar', 'retax', 'retch', 'retem', 'rethe', 'retia', 'retie', 'retin', 'retip', 'retry', 'retro', 'reuel', 'reune', 'reuse', 'revay', 'revel', 'rever', 'revet', 'revie', 'revue', 'rewan', 'rewax', 'rewed', 'rewet', 'rewin', 'rewon', 'rexen', 'rexes', 'rfree', 'rhamn', 'rheae', 'rheas', 'rheda', 'rheen', 'rheic', 'rhein', 'rhema', 'rheme', 'rheum', 'rhila', 'rhyme', 'rhymy', 'rhina', 'rhine', 'rhino', 'rhyta', 'rhoda', 'rhoeo', 'rhomb', 'rhumb', 'rials', 'riant', 'riata', 'ribat', 'rybat', 'ribby', 'ribes', 'riced', 'ricey', 'ricer', 'rices', 'riche', 'richt', 'ricin', 'ricky', 'ricks', 'riden', 'rider', 'ryder', 'rides', 'ridge', 'ridgy', 'riels', 'rifer', 'riffi', 'riffs', 'rifle', 'rifty', 'rifts', 'rigel', 'right', 'rigid', 'rigol', 'rigor', 'riyal', 'ryked', 'rykes', 'riled', 'riley', 'riles', 'rille', 'rilly', 'rills', 'rimal', 'rimas', 'rimed', 'rimer', 'rimes', 'rimpi', 'rinch', 'rinde', 'rindy', 'rinds', 'rynds', 'ringe', 'ringy', 'rings', 'rinka', 'rinks', 'rinse', 'riots', 'ryots', 'ripal', 'riped', 'ripen', 'riper', 'ripes', 'ripup', 'risen', 'riser', 'rises', 'rishi', 'risky', 'risks', 'risqu', 'risus', 'rites', 'rithe', 'ritsu', 'ritus', 'ritzy', 'rival', 'rived', 'rivel', 'riven', 'river', 'rives', 'rivet', 'rizar', 'roach', 'roads', 'roams', 'roans', 'roars', 'robed', 'rober', 'robes', 'robin', 'roble', 'robot', 'robur', 'roche', 'rocky', 'rocks', 'rocta', 'rodeo', 'rodge', 'rogan', 'roger', 'rogue', 'roguy', 'rohan', 'rohob', 'rohun', 'royal', 'royet', 'roily', 'roils', 'royou', 'roist', 'rojak', 'rokee', 'rokey', 'roker', 'roleo', 'roles', 'rolfe', 'rollo', 'rolls', 'romal', 'roman', 'romeo', 'romic', 'rompy', 'romps', 'rompu', 'ronco', 'ronde', 'rondo', 'ronga', 'ronin', 'ronni', 'roods', 'rooed', 'roofy', 'roofs', 'rooky', 'rooks', 'roomy', 'rooms', 'roosa', 'roose', 'roost', 'rooti', 'rooty', 'roots', 'roove', 'roped', 'ropey', 'roper', 'ropes', 'roque', 'roral', 'roric', 'rorid', 'rorty', 'rosal', 'rosed', 'rosel', 'roses', 'roset', 'roshi', 'rosin', 'rotal', 'rotan', 'rotas', 'rotch', 'roter', 'rotes', 'rotge', 'rotls', 'rotor', 'rotos', 'rotse', 'rotta', 'rotte', 'rouen', 'roues', 'rouge', 'rough', 'rougy', 'rouky', 'round', 'roupy', 'roups', 'rouse', 'roust', 'route', 'routh', 'routs', 'roved', 'roven', 'rover', 'roves', 'rovet', 'rowan', 'rowdy', 'rowed', 'rowel', 'rowen', 'rower', 'rowet', 'rowte', 'rowth', 'rowty', 'roxie', 'rozum', 'ruach', 'ruana', 'rubby', 'rubes', 'rubia', 'rubin', 'ruble', 'rubor', 'rubus', 'ruche', 'rucky', 'rucks', 'rudas', 'ruddy', 'rudds', 'ruder', 'rudge', 'ruely', 'ruers', 'ruffe', 'ruffs', 'rufus', 'rugae', 'rugal', 'rugby', 'ruggy', 'ruing', 'ruins', 'ruled', 'ruler', 'rules', 'rumal', 'ruman', 'rumba', 'rumbo', 'rumen', 'rumex', 'rumly', 'rummy', 'rumor', 'rumpy', 'rumps', 'runby', 'runch', 'rundi', 'runed', 'runer', 'runes', 'rungs', 'runic', 'runny', 'runsy', 'runty', 'runts', 'rupee', 'rupia', 'rupie', 'rural', 'ruses', 'rushy', 'rusin', 'rusky', 'rusks', 'rusma', 'rusot', 'russe', 'rusty', 'rusts', 'rutch', 'ruths', 'rutic', 'rutyl', 'rutin', 'rutty', 'ruvid', 'sabal', 'saban', 'sabby', 'sabed', 'saber', 'sabes', 'sabia', 'sabik', 'sabin', 'sabir', 'sable', 'sably', 'sabot', 'sabra', 'sabre', 'sabzi', 'sacae', 'sacks', 'sacra', 'sacre', 'sacry', 'sacro', 'sades', 'sadhe', 'sadhu', 'sadic', 'sadie', 'sadis', 'sadly', 'saeta', 'safar', 'safen', 'safer', 'safes', 'sagai', 'sagan', 'sagas', 'sager', 'sages', 'saggy', 'sagos', 'sagra', 'sagum', 'sahib', 'sahme', 'sayal', 'saice', 'saidi', 'saids', 'sayee', 'sayer', 'saify', 'saiga', 'saiid', 'sayid', 'saily', 'sails', 'saimy', 'sains', 'saint', 'saiph', 'sairy', 'sayst', 'saite', 'saith', 'saiva', 'sajou', 'sakai', 'sakel', 'saker', 'sakes', 'sakha', 'sakis', 'sakti', 'salay', 'salal', 'salar', 'salat', 'salem', 'salep', 'sales', 'salet', 'salic', 'salix', 'salle', 'sally', 'salma', 'salmi', 'salmo', 'salol', 'salon', 'salpa', 'salps', 'salse', 'salta', 'salts', 'salud', 'salue', 'salus', 'salva', 'salve', 'salvy', 'salvo', 'samaj', 'samal', 'saman', 'samas', 'samba', 'sambo', 'samek', 'samel', 'samen', 'samir', 'sammy', 'samoa', 'sampi', 'samps', 'sanai', 'sancy', 'sanct', 'sandy', 'sands', 'saned', 'saner', 'sanes', 'sanga', 'sangh', 'sangu', 'sanit', 'sanka', 'sansi', 'santa', 'santy', 'santo', 'sapan', 'sapek', 'sapid', 'sapin', 'sapit', 'saple', 'sapor', 'sappy', 'saqib', 'saraf', 'sarah', 'saran', 'sards', 'saree', 'sarge', 'sargo', 'sarif', 'sarin', 'sarip', 'saris', 'sarky', 'sarks', 'sarna', 'sarod', 'saron', 'saros', 'sarpo', 'sarra', 'sarsa', 'sarsi', 'saruk', 'sarum', 'sarus', 'sasan', 'sasin', 'sasse', 'sassy', 'satai', 'satan', 'sated', 'satem', 'sates', 'satin', 'satyr', 'satis', 'sauba', 'sauch', 'saudi', 'saugh', 'sauld', 'sauls', 'sault', 'sauna', 'saunt', 'saura', 'saury', 'sauty', 'sauve', 'saved', 'savey', 'saver', 'saves', 'savin', 'savoy', 'savor', 'savvy', 'sawah', 'sawan', 'sawed', 'sawer', 'sawny', 'saxes', 'saxon', 'sazen', 'scabs', 'scads', 'scaff', 'scags', 'scala', 'scald', 'scale', 'scalf', 'scaly', 'scall', 'scalp', 'scalt', 'scalx', 'scalz', 'scamp', 'scams', 'scans', 'scant', 'scape', 'scare', 'scarf', 'scary', 'scarn', 'scarp', 'scars', 'scart', 'scase', 'scats', 'scatt', 'scaul', 'scaum', 'scaup', 'scaur', 'scaut', 'scawd', 'scawl', 'sceat', 'scelp', 'scena', 'scend', 'scene', 'scent', 'schav', 'schiz', 'schmo', 'schuh', 'schul', 'schwa', 'scian', 'scyld', 'scind', 'scion', 'sciot', 'scyth', 'sclat', 'sclav', 'sclaw', 'scler', 'sclim', 'scoad', 'scobs', 'scoff', 'scoke', 'scolb', 'scold', 'scomm', 'scoon', 'scoop', 'scoot', 'scopa', 'scope', 'scops', 'score', 'scorn', 'scote', 'scots', 'scott', 'scouk', 'scoup', 'scour', 'scout', 'scove', 'scovy', 'scowl', 'scows', 'scrab', 'scrae', 'scrag', 'scray', 'scram', 'scran', 'scrat', 'scraw', 'scree', 'screw', 'scrim', 'scrin', 'scrip', 'scrit', 'scrob', 'scrod', 'scrog', 'scroo', 'scrow', 'scrub', 'scruf', 'scrum', 'scuba', 'scudi', 'scudo', 'scuds', 'scuff', 'scuft', 'sculk', 'scull', 'sculp', 'scult', 'scums', 'scups', 'scurf', 'scuse', 'scuta', 'scute', 'scuts', 'sdump', 'sealy', 'seals', 'seamy', 'seams', 'seary', 'sears', 'seats', 'seave', 'seavy', 'sebat', 'sebum', 'secco', 'secno', 'secos', 'secre', 'sects', 'secus', 'sedan', 'sedat', 'seder', 'sedge', 'sedgy', 'sedum', 'seech', 'seege', 'seeks', 'seely', 'seels', 'seems', 'seenu', 'seepy', 'seeps', 'seers', 'segar', 'seggy', 'segni', 'segno', 'segol', 'segos', 'segou', 'segue', 'sehyo', 'seige', 'seine', 'seise', 'seism', 'seity', 'seize', 'sekar', 'seker', 'sekos', 'selah', 'selfs', 'sella', 'selle', 'selli', 'selly', 'sells', 'selva', 'semee', 'semel', 'semen', 'semes', 'semic', 'semih', 'semis', 'senal', 'senam', 'sence', 'senci', 'sends', 'senex', 'sengi', 'senit', 'senna', 'senor', 'sensa', 'sense', 'senso', 'sensu', 'senti', 'sents', 'senvy', 'senza', 'seora', 'seoul', 'sepad', 'sepal', 'sepia', 'sepic', 'sepoy', 'seppa', 'septa', 'septi', 'septs', 'seqed', 'sequa', 'seqwl', 'serab', 'serac', 'serai', 'seral', 'serau', 'seraw', 'sered', 'sereh', 'serer', 'seres', 'serfs', 'serge', 'sergt', 'seric', 'serif', 'serin', 'serio', 'sermo', 'seron', 'serow', 'serra', 'serry', 'serta', 'serum', 'serut', 'servo', 'sesia', 'sesma', 'sessa', 'sesti', 'setae', 'setal', 'seton', 'setup', 'seugh', 'seven', 'sever', 'sevum', 'sewan', 'sewar', 'sewed', 'sewen', 'sewer', 'sewin', 'sexed', 'sexes', 'sexly', 'sexto', 'sexts', 'sfoot', 'sfree', 'shack', 'shade', 'shady', 'shado', 'shads', 'shaft', 'shags', 'shahi', 'shahs', 'shays', 'shaka', 'shaky', 'shako', 'shaku', 'shale', 'shaly', 'shall', 'shalt', 'shama', 'shame', 'shams', 'shane', 'shang', 'shank', 'shant', 'shape', 'shapy', 'shaps', 'shard', 'share', 'shari', 'shark', 'sharn', 'sharp', 'shaul', 'shaup', 'shave', 'shawy', 'shawl', 'shawm', 'shawn', 'shaws', 'sheaf', 'sheal', 'shean', 'shear', 'sheas', 'sheat', 'sheds', 'shedu', 'sheel', 'sheen', 'sheep', 'sheer', 'sheet', 'sheik', 'shela', 'sheld', 'shelf', 'shell', 'shema', 'shemu', 'shend', 'sheng', 'shent', 'sheol', 'sherd', 'sheth', 'sheva', 'shewa', 'shewn', 'shews', 'shiah', 'shiai', 'shyam', 'shice', 'shick', 'shide', 'shied', 'shiel', 'shier', 'shyer', 'shies', 'shift', 'shiko', 'shilf', 'shilh', 'shily', 'shyly', 'shill', 'shims', 'shina', 'shine', 'shiny', 'shins', 'ships', 'shipt', 'shire', 'shirk', 'shirl', 'shirr', 'shirt', 'shish', 'shisn', 'shist', 'shita', 'shits', 'shiva', 'shive', 'shivy', 'shivs', 'shlep', 'shluh', 'shoad', 'shoal', 'shoat', 'shock', 'shode', 'shoed', 'shoer', 'shoes', 'shogi', 'shogs', 'shoya', 'shoyu', 'shoji', 'shojo', 'shola', 'shole', 'shona', 'shone', 'shood', 'shooi', 'shook', 'shool', 'shoon', 'shoop', 'shoor', 'shoos', 'shoot', 'shope', 'shops', 'shore', 'shorl', 'shorn', 'short', 'shote', 'shots', 'shott', 'shout', 'shove', 'showd', 'showy', 'shown', 'shows', 'shrab', 'shraf', 'shrag', 'shram', 'shrap', 'shred', 'shree', 'shrew', 'shrip', 'shris', 'shrog', 'shrub', 'shrug', 'shuba', 'shuck', 'shuff', 'shuln', 'shuls', 'shune', 'shuns', 'shunt', 'shure', 'shurf', 'shush', 'shute', 'shuts', 'siafu', 'sials', 'sibby', 'sibbs', 'sibyl', 'sybil', 'sybow', 'sicca', 'sycee', 'sicel', 'sicer', 'sices', 'syces', 'sicht', 'sicks', 'sicle', 'sycon', 'sided', 'sider', 'sides', 'sidhe', 'sidia', 'sidle', 'sidth', 'siege', 'siena', 'siest', 'sieur', 'sieva', 'sieve', 'sievy', 'sifac', 'syftn', 'sifts', 'sighs', 'sight', 'sigil', 'sigla', 'sigma', 'signa', 'signs', 'sikar', 'siker', 'sikes', 'sykes', 'siket', 'sikhs', 'sikra', 'silas', 'silds', 'silen', 'silex', 'sylid', 'silyl', 'silky', 'silks', 'silly', 'sills', 'silos', 'sylph', 'silty', 'silts', 'silva', 'sylva', 'simal', 'simar', 'simas', 'simba', 'simia', 'simon', 'simps', 'simul', 'sinae', 'sinal', 'since', 'synch', 'syncs', 'sines', 'sinew', 'singe', 'singh', 'sings', 'sinhs', 'sinic', 'sinky', 'sinks', 'synod', 'sinon', 'synop', 'sinto', 'sintu', 'sinus', 'sioux', 'siped', 'siper', 'sipes', 'sipid', 'sippy', 'sired', 'siree', 'siren', 'syren', 'sires', 'sirex', 'syria', 'sirih', 'siris', 'sirki', 'sirky', 'syrma', 'siroc', 'sirop', 'siros', 'sirra', 'sirup', 'syrus', 'sisal', 'sisel', 'sises', 'sysin', 'sissy', 'sissu', 'sitao', 'sitar', 'sitch', 'sited', 'sites', 'sithe', 'sitio', 'sitka', 'sitta', 'situp', 'situs', 'siums', 'siusi', 'sivan', 'siver', 'siwan', 'sixer', 'sixes', 'sixmo', 'sixte', 'sixth', 'sixty', 'sizal', 'sizar', 'sized', 'sizer', 'sizes', 'sjaak', 'skaff', 'skags', 'skail', 'skair', 'skald', 'skart', 'skate', 'skats', 'skean', 'skeat', 'skeed', 'skeeg', 'skeel', 'skeen', 'skeer', 'skees', 'skeet', 'skegs', 'skeif', 'skein', 'skelf', 'skell', 'skelp', 'skemp', 'skene', 'skeps', 'skere', 'skers', 'skete', 'skewy', 'skewl', 'skews', 'skice', 'skidi', 'skids', 'skied', 'skyed', 'skiey', 'skyey', 'skier', 'skies', 'skiff', 'skift', 'skiis', 'skill', 'skime', 'skimo', 'skimp', 'skims', 'skink', 'skins', 'skint', 'skips', 'skyre', 'skirl', 'skirp', 'skirr', 'skirt', 'skite', 'skyte', 'skits', 'skive', 'skivy', 'skiwy', 'skoal', 'skoot', 'skout', 'skuas', 'skulk', 'skull', 'skulp', 'skunk', 'skuse', 'slabs', 'slack', 'slade', 'slags', 'slain', 'slays', 'slait', 'slake', 'slaky', 'slamp', 'slams', 'slane', 'slang', 'slank', 'slant', 'slape', 'slaps', 'slare', 'slart', 'slash', 'slask', 'slate', 'slath', 'slaty', 'slats', 'slaum', 'slave', 'slavi', 'slavs', 'slaws', 'sleck', 'sleds', 'sleek', 'sleep', 'sleer', 'sleet', 'sleys', 'slent', 'slept', 'slete', 'slews', 'slice', 'slich', 'slick', 'slide', 'slier', 'slyer', 'slily', 'slyly', 'slime', 'slimy', 'slims', 'sline', 'sling', 'slink', 'slipe', 'slype', 'slips', 'slipt', 'slirt', 'slish', 'slite', 'slits', 'slive', 'sloan', 'sloat', 'slobs', 'slock', 'sloes', 'slogs', 'sloid', 'sloyd', 'slojd', 'sloka', 'sloke', 'slone', 'slonk', 'sloom', 'sloop', 'sloot', 'slope', 'slopy', 'slops', 'slorp', 'slosh', 'slote', 'sloth', 'slots', 'slour', 'slows', 'slubs', 'slued', 'sluer', 'slues', 'sluff', 'slugs', 'sluig', 'sluit', 'slump', 'slums', 'slung', 'slunk', 'slurb', 'slurp', 'slurs', 'slush', 'sluts', 'smack', 'smaik', 'small', 'smalm', 'smalt', 'smarm', 'smart', 'smash', 'smaze', 'smeek', 'smeer', 'smell', 'smelt', 'smerk', 'smeth', 'smews', 'smich', 'smift', 'smile', 'smily', 'smirk', 'smite', 'smith', 'smyth', 'smock', 'smogs', 'smoky', 'smoko', 'smolt', 'smook', 'smoos', 'smoot', 'smore', 'smote', 'smous', 'smout', 'smrgs', 'smurr', 'smuse', 'smush', 'smuts', 'snaff', 'snafu', 'snags', 'snail', 'snake', 'snaky', 'snape', 'snapy', 'snaps', 'snare', 'snary', 'snark', 'snarl', 'snash', 'snast', 'snath', 'snaws', 'snead', 'sneak', 'sneap', 'sneck', 'sneds', 'sneer', 'snell', 'snerp', 'snibs', 'snick', 'snide', 'snyed', 'snies', 'snyes', 'sniff', 'snift', 'snigs', 'snipe', 'snipy', 'snips', 'snirl', 'snirt', 'snite', 'snits', 'snitz', 'snivy', 'snobs', 'snock', 'snoek', 'snoga', 'snoke', 'snood', 'snook', 'snool', 'snoop', 'snoot', 'snore', 'snork', 'snort', 'snots', 'snout', 'snowy', 'snowk', 'snowl', 'snows', 'snubs', 'snuck', 'snuff', 'snugs', 'snurl', 'snurp', 'snurt', 'soaky', 'soaks', 'soapi', 'soapy', 'soaps', 'soary', 'soars', 'soave', 'sobby', 'sober', 'socht', 'socii', 'socky', 'socko', 'socks', 'socle', 'sodas', 'soddy', 'sodic', 'sodio', 'sodom', 'sofar', 'sofas', 'sofer', 'sofia', 'softa', 'softy', 'softs', 'soger', 'soget', 'soyas', 'soign', 'soily', 'soils', 'soyot', 'sojas', 'soken', 'sokes', 'solay', 'solan', 'solar', 'soldi', 'soldo', 'solea', 'soled', 'solen', 'soler', 'soles', 'solfa', 'solid', 'solio', 'solod', 'solon', 'solos', 'solum', 'solus', 'solve', 'somal', 'somas', 'somet', 'somma', 'somne', 'sonar', 'soncy', 'sonde', 'sones', 'songy', 'songo', 'songs', 'sonic', 'sonja', 'sonly', 'sonny', 'sonsy', 'sooey', 'sooke', 'sooky', 'soony', 'soord', 'sooth', 'sooty', 'soots', 'sophy', 'sophs', 'sopor', 'soppy', 'soral', 'soras', 'sorbs', 'sorda', 'sordo', 'sords', 'soree', 'sorel', 'sorer', 'sores', 'sorex', 'sorgo', 'sorns', 'sorra', 'sorry', 'sorty', 'sorts', 'sorus', 'sorva', 'sosia', 'sosie', 'soter', 'sotho', 'soths', 'sotie', 'sotik', 'sotol', 'sough', 'souly', 'souls', 'soulx', 'soulz', 'sound', 'soupy', 'soups', 'sourd', 'soury', 'sours', 'souse', 'south', 'sowan', 'sowar', 'sowed', 'sowel', 'sower', 'sowle', 'sowse', 'sowte', 'sozin', 'sozly', 'spaad', 'space', 'spacy', 'spack', 'spade', 'spado', 'spaed', 'spaer', 'spaes', 'spahi', 'spaid', 'spaik', 'spail', 'spain', 'spair', 'spays', 'spait', 'spake', 'spald', 'spale', 'spall', 'spalt', 'spane', 'spang', 'spank', 'spann', 'spans', 'spare', 'spary', 'spark', 'sparm', 'spars', 'spart', 'spasm', 'spass', 'spate', 'spath', 'spats', 'spave', 'spawl', 'spawn', 'speak', 'speal', 'spean', 'spear', 'spece', 'speck', 'specs', 'spect', 'speed', 'speel', 'speen', 'speer', 'speil', 'speir', 'spekt', 'spelk', 'spell', 'spelt', 'spend', 'spent', 'speos', 'spere', 'sperm', 'spete', 'spewy', 'spews', 'sphex', 'spial', 'spica', 'spick', 'spics', 'spied', 'spiel', 'spier', 'spyer', 'spies', 'spiff', 'spike', 'spiky', 'spiks', 'spile', 'spilt', 'spina', 'spine', 'spiny', 'spink', 'spins', 'spira', 'spire', 'spiry', 'spiro', 'spirt', 'spise', 'spiss', 'spite', 'spits', 'spitz', 'spivs', 'splad', 'splay', 'splat', 'splet', 'split', 'spock', 'spode', 'spoil', 'spoke', 'spoky', 'spole', 'spong', 'spoof', 'spook', 'spool', 'spoom', 'spoor', 'spoot', 'spore', 'sport', 'sposh', 'spots', 'spout', 'sprad', 'sprag', 'spray', 'sprat', 'spree', 'spret', 'sprew', 'sprig', 'sprit', 'sprod', 'sprot', 'sprue', 'sprug', 'spued', 'spues', 'spuke', 'spume', 'spumy', 'spung', 'spunk', 'spurl', 'spurn', 'spurs', 'spurt', 'sputa', 'spute', 'squab', 'squad', 'squam', 'squat', 'squaw', 'squeg', 'squet', 'squib', 'squid', 'squin', 'squit', 'squiz', 'sruti', 'ssing', 'ssort', 'sstor', 'staab', 'stabs', 'stacc', 'stacy', 'stack', 'stade', 'staff', 'stage', 'stagy', 'stags', 'staia', 'staid', 'staig', 'stail', 'stain', 'staio', 'stair', 'stays', 'stake', 'stale', 'stalk', 'stall', 'stamp', 'stand', 'stane', 'stang', 'stank', 'staph', 'stare', 'stary', 'stark', 'starn', 'starr', 'stars', 'start', 'starw', 'stash', 'state', 'stats', 'stauk', 'staun', 'staup', 'stave', 'stawn', 'stchi', 'stead', 'steal', 'steam', 'stean', 'stech', 'steed', 'steek', 'steel', 'steem', 'steen', 'steep', 'steer', 'stegh', 'steid', 'stein', 'stela', 'stele', 'stell', 'stema', 'stems', 'stend', 'steng', 'steno', 'stent', 'steps', 'stept', 'stere', 'steri', 'sterk', 'stern', 'stero', 'stert', 'stets', 'steve', 'stewy', 'stews', 'styan', 'styca', 'stich', 'stick', 'stied', 'styed', 'sties', 'styes', 'stife', 'stiff', 'stilb', 'stile', 'style', 'styli', 'still', 'stylo', 'stilt', 'stime', 'stimy', 'stymy', 'stine', 'sting', 'stink', 'stint', 'stion', 'stipa', 'stipe', 'stipo', 'stire', 'stirk', 'stirp', 'stirs', 'stite', 'stith', 'stive', 'stivy', 'stoae', 'stoai', 'stoas', 'stoat', 'stobs', 'stock', 'stoep', 'stoff', 'stoga', 'stogy', 'stoic', 'stoit', 'stoke', 'stola', 'stold', 'stole', 'stoma', 'stomp', 'stond', 'stone', 'stong', 'stony', 'stonk', 'stood', 'stoof', 'stook', 'stool', 'stoon', 'stoop', 'stoot', 'stopa', 'stope', 'stops', 'stopt', 'store', 'story', 'stork', 'storm', 'stosh', 'stoss', 'stott', 'stoun', 'stoup', 'stour', 'stout', 'stowp', 'stows', 'strad', 'strae', 'strag', 'stray', 'stram', 'strap', 'stree', 'strey', 'strep', 'stret', 'strew', 'stria', 'strid', 'strig', 'strip', 'strit', 'strix', 'stroy', 'strom', 'strop', 'strow', 'strub', 'strue', 'strum', 'strut', 'struv', 'stubb', 'stube', 'stubs', 'stuck', 'stude', 'study', 'studs', 'stuff', 'stull', 'stulm', 'stump', 'stums', 'stung', 'stunk', 'stuns', 'stunt', 'stupa', 'stupe', 'stupp', 'sturk', 'sturt', 'stuss', 'suade', 'suant', 'suave', 'subah', 'subas', 'subch', 'suber', 'subet', 'subra', 'subst', 'succi', 'sucks', 'sucre', 'sudan', 'suddy', 'sudds', 'sudes', 'sudic', 'sudor', 'sudra', 'sudsy', 'suede', 'suent', 'suers', 'suety', 'suets', 'sueve', 'suevi', 'sugan', 'sugat', 'sughs', 'sugih', 'sugis', 'suina', 'suine', 'suing', 'suint', 'suyog', 'suist', 'suite', 'suity', 'suits', 'sukey', 'sulci', 'sulea', 'sulfa', 'sulfo', 'sulka', 'sulky', 'sulks', 'sulla', 'sully', 'sumac', 'sumak', 'sumen', 'summa', 'sumos', 'sumph', 'sumps', 'sumpt', 'sunil', 'sunna', 'sunni', 'sunny', 'sunns', 'sunup', 'suomi', 'supai', 'super', 'supes', 'suppl', 'supra', 'supvr', 'surah', 'sural', 'suras', 'surat', 'surds', 'sured', 'surer', 'sures', 'surfy', 'surfs', 'surge', 'surgy', 'surya', 'surly', 'surma', 'surra', 'susan', 'susie', 'sussy', 'susso', 'sutor', 'sutra', 'sutta', 'suzan', 'svelt', 'swabs', 'swack', 'swage', 'swags', 'swail', 'swain', 'sways', 'swale', 'swami', 'swamy', 'swamp', 'swang', 'swank', 'swans', 'swape', 'swaps', 'sward', 'sware', 'swarf', 'swarm', 'swart', 'swash', 'swath', 'swati', 'swats', 'swazi', 'sweal', 'swear', 'sweat', 'swede', 'sweep', 'sweer', 'swego', 'swell', 'swelp', 'swelt', 'swept', 'swerd', 'swick', 'swift', 'swigs', 'swile', 'swill', 'swimy', 'swims', 'swine', 'swing', 'swink', 'swipe', 'swipy', 'swird', 'swire', 'swirl', 'swish', 'swiss', 'swith', 'swive', 'swizz', 'swobs', 'swoln', 'swonk', 'swoon', 'swoop', 'swops', 'sword', 'swore', 'sworn', 'swosh', 'swots', 'swoun', 'swung', 'swure', 'taata', 'tabac', 'tabby', 'tabel', 'taber', 'tabes', 'tabet', 'tabic', 'tabid', 'tabis', 'tabla', 'table', 'tabog', 'taboo', 'tabor', 'tabus', 'tabut', 'tacan', 'tacca', 'taces', 'tacet', 'tache', 'tachi', 'tachs', 'tacit', 'tacky', 'tacks', 'tacos', 'tacso', 'tacts', 'taels', 'tafia', 'tagal', 'tagel', 'taggy', 'tagua', 'tagus', 'tahar', 'tahil', 'tahin', 'tahrs', 'tahua', 'taich', 'tayer', 'taiga', 'tayir', 'taily', 'tails', 'taino', 'tains', 'taint', 'taipi', 'taipo', 'tayra', 'tairn', 'taise', 'taish', 'tajes', 'tajik', 'takao', 'takar', 'taked', 'taken', 'taker', 'takes', 'takin', 'takyr', 'talak', 'talao', 'talar', 'talas', 'talck', 'talcs', 'taled', 'taler', 'tales', 'talio', 'talis', 'talky', 'talks', 'talli', 'tally', 'talma', 'talon', 'talpa', 'taluk', 'talus', 'tamal', 'tamas', 'tambo', 'tamed', 'tamer', 'tames', 'tamil', 'tamis', 'tammy', 'tampa', 'tamps', 'tamul', 'tamus', 'tanak', 'tanan', 'tandy', 'tanga', 'tangi', 'tango', 'tangs', 'tanha', 'tania', 'tanya', 'tanka', 'tanks', 'tanna', 'tanny', 'tanoa', 'tansy', 'tanti', 'tanto', 'tanzy', 'tapas', 'taped', 'tapen', 'taper', 'tapes', 'tapet', 'tapia', 'tapir', 'tapis', 'tapit', 'tapoa', 'tappa', 'tapul', 'taqua', 'taraf', 'tarai', 'tarau', 'tarde', 'tardy', 'tardo', 'tarea', 'tared', 'tareq', 'tares', 'tarfa', 'targe', 'tarie', 'tarin', 'tarmi', 'tarns', 'taroc', 'tarok', 'taros', 'tarot', 'tarps', 'tarre', 'tarri', 'tarry', 'tarse', 'tarsi', 'tarte', 'tarts', 'tarve', 'tasco', 'tasks', 'tasse', 'tatar', 'tater', 'tates', 'tatie', 'tatoo', 'tatou', 'tatta', 'tatty', 'taube', 'taula', 'tauli', 'taunt', 'taupe', 'taupo', 'tauri', 'tauts', 'taver', 'tavoy', 'tawed', 'tawer', 'tawgi', 'tawie', 'tawny', 'tawpi', 'tawpy', 'tawse', 'taxed', 'taxer', 'taxes', 'taxin', 'taxir', 'taxis', 'taxon', 'taxor', 'taxus', 'tazia', 'tazza', 'tazze', 'tcawi', 'tchai', 'tchwi', 'teach', 'teaey', 'teaer', 'teaks', 'teals', 'teams', 'teary', 'tears', 'teart', 'tease', 'teasy', 'teaty', 'teats', 'teave', 'teaze', 'tebet', 'techy', 'tecla', 'tecon', 'tecta', 'tecum', 'teddy', 'tedge', 'teems', 'teeny', 'teens', 'teest', 'teeth', 'teety', 'teffs', 'tegua', 'tehee', 'teian', 'teiid', 'teind', 'teise', 'tejon', 'tekya', 'tekke', 'telae', 'telar', 'teleg', 'telei', 'teles', 'telex', 'telia', 'telic', 'telyn', 'telly', 'tells', 'tellt', 'teloi', 'telos', 'teman', 'tembe', 'tembu', 'temin', 'temne', 'tempe', 'tempi', 'tempo', 'temps', 'tempt', 'temse', 'tenai', 'tench', 'tendo', 'tends', 'tenet', 'tenez', 'tengu', 'tenia', 'tenio', 'tenla', 'tenne', 'tenno', 'tennu', 'tenon', 'tenor', 'tense', 'tenso', 'tenth', 'tenty', 'tents', 'tenue', 'tepal', 'tepas', 'tepee', 'tepid', 'tepor', 'terai', 'terap', 'teras', 'terce', 'terek', 'teres', 'tereu', 'terga', 'terma', 'terms', 'terna', 'terne', 'terns', 'terra', 'terre', 'terri', 'terry', 'terse', 'terzo', 'tesla', 'testa', 'teste', 'testy', 'tests', 'tetch', 'tetel', 'teths', 'teton', 'tetra', 'tetty', 'tetum', 'teuch', 'teugh', 'tewed', 'tewel', 'tewer', 'tewit', 'tewly', 'texan', 'texas', 'texts', 'thack', 'thais', 'thala', 'thana', 'thane', 'thank', 'tharf', 'tharm', 'thatd', 'thatn', 'thats', 'thave', 'thawy', 'thawn', 'thaws', 'theah', 'theat', 'theca', 'theek', 'theer', 'theet', 'theft', 'thegn', 'theyd', 'thein', 'their', 'thema', 'theme', 'thens', 'theol', 'theor', 'theos', 'theow', 'there', 'therm', 'these', 'theta', 'thete', 'thewy', 'thews', 'thick', 'thief', 'thigh', 'thilk', 'thill', 'thymi', 'thymy', 'thyms', 'thine', 'thing', 'think', 'thins', 'thiol', 'third', 'thirl', 'thirt', 'thisn', 'thoft', 'thoke', 'thole', 'tholi', 'thone', 'thong', 'thoom', 'thore', 'thorn', 'thoro', 'thorp', 'thort', 'those', 'thous', 'thowt', 'thram', 'thrap', 'thraw', 'thrax', 'three', 'threw', 'thrip', 'throb', 'throe', 'throu', 'throw', 'thrum', 'thruv', 'thuan', 'thuds', 'thugs', 'thuya', 'thuja', 'thule', 'thulr', 'thumb', 'thump', 'thund', 'thung', 'thuoc', 'thurl', 'thurm', 'thurt', 'tiang', 'tiara', 'tibby', 'tibbu', 'tibey', 'tiber', 'tibet', 'tibia', 'tical', 'ticca', 'ticer', 'tyche', 'ticky', 'ticks', 'ticul', 'tidal', 'tiddy', 'tided', 'tides', 'tydie', 'tyees', 'tiens', 'tiers', 'tiffy', 'tiffs', 'tiger', 'tight', 'tigon', 'tigre', 'tigua', 'tyigh', 'tying', 'tyken', 'tikes', 'tykes', 'tikis', 'tikka', 'tikor', 'tikur', 'tilak', 'tilda', 'tilde', 'tiled', 'tiler', 'tyler', 'tiles', 'tilia', 'tilly', 'tills', 'tilth', 'tilty', 'tilts', 'tylus', 'timar', 'timbe', 'timbo', 'timed', 'timer', 'times', 'timet', 'timid', 'timne', 'timon', 'timor', 'tinct', 'tinea', 'tined', 'tyned', 'tines', 'tynes', 'tinge', 'tingi', 'tings', 'tinne', 'tinni', 'tinny', 'tinsy', 'tinta', 'tinty', 'tints', 'typal', 'typed', 'typey', 'typer', 'types', 'typha', 'typic', 'tipis', 'tipit', 'tiple', 'typos', 'tippy', 'typps', 'tipsy', 'tipup', 'tiraz', 'tired', 'tyred', 'tirer', 'tires', 'tyres', 'tirls', 'tirma', 'tiros', 'tyros', 'tirve', 'tisar', 'tisic', 'tissu', 'tyste', 'titan', 'titar', 'titer', 'tithe', 'tythe', 'titis', 'title', 'titre', 'titty', 'titus', 'tiver', 'tiwaz', 'tizzy', 'tlaco', 'tmema', 'toady', 'toads', 'today', 'toddy', 'todea', 'todus', 'toffy', 'toffs', 'tofts', 'tofus', 'togae', 'togas', 'toged', 'togue', 'toher', 'toyed', 'toyer', 'toile', 'toils', 'toyon', 'toyos', 'toise', 'toist', 'toity', 'toits', 'tokay', 'toked', 'token', 'tokes', 'tokyo', 'tolan', 'tolas', 'toldo', 'toled', 'toles', 'tolyl', 'tolly', 'tolls', 'tolus', 'toman', 'tomas', 'tombe', 'tombs', 'tomes', 'tomia', 'tomin', 'tommy', 'tonal', 'tondi', 'tondo', 'toned', 'toner', 'tones', 'tonga', 'tongs', 'tonic', 'tonka', 'tonna', 'tonne', 'tonto', 'tonus', 'tools', 'toona', 'toons', 'toosh', 'tooth', 'toots', 'topas', 'topau', 'topaz', 'toped', 'topee', 'toper', 'topes', 'tophe', 'tophi', 'tophs', 'topia', 'topic', 'topis', 'topog', 'topoi', 'topos', 'toppy', 'topsy', 'topsl', 'toque', 'torah', 'toral', 'toran', 'toras', 'torch', 'torcs', 'tored', 'tores', 'toret', 'toric', 'torii', 'torma', 'toros', 'torse', 'torsi', 'torsk', 'torso', 'torta', 'torts', 'torus', 'torve', 'tosca', 'toshy', 'tossy', 'total', 'toted', 'totem', 'toter', 'totes', 'totty', 'totum', 'touch', 'tough', 'tould', 'tourn', 'tours', 'tourt', 'touse', 'tousy', 'toust', 'touts', 'tovah', 'tovar', 'tovet', 'towai', 'towan', 'towed', 'towel', 'tower', 'towie', 'towny', 'towns', 'towsy', 'toxic', 'toxin', 'toxon', 'tozee', 'tozer', 'trabu', 'trace', 'tracy', 'track', 'tract', 'trade', 'trady', 'tragi', 'traik', 'trail', 'train', 'trays', 'trait', 'trama', 'trame', 'tramp', 'trams', 'trank', 'trans', 'trant', 'trapa', 'traps', 'trapt', 'trash', 'trasy', 'trass', 'trave', 'trawl', 'tread', 'treas', 'treed', 'treey', 'treen', 'trees', 'trefa', 'treys', 'treks', 'trema', 'trend', 'trent', 'tress', 'trest', 'trets', 'trews', 'triac', 'triad', 'trial', 'trias', 'tribe', 'trica', 'trice', 'trick', 'tried', 'trier', 'tries', 'trifa', 'triga', 'trigo', 'trigs', 'trike', 'trill', 'tryma', 'trims', 'tryms', 'trina', 'trine', 'trink', 'triol', 'trior', 'trios', 'trypa', 'tripe', 'tripy', 'tripl', 'trips', 'tript', 'trist', 'tryst', 'trite', 'trixy', 'troad', 'troak', 'troat', 'troca', 'troch', 'trock', 'troco', 'trode', 'troft', 'trogs', 'troic', 'trois', 'troys', 'troke', 'troll', 'tromp', 'trona', 'tronc', 'trone', 'tronk', 'troop', 'troot', 'trooz', 'trope', 'troth', 'trots', 'troue', 'trouv', 'trove', 'trows', 'trubu', 'truce', 'truck', 'trudy', 'trued', 'truer', 'trues', 'truff', 'truly', 'trull', 'trump', 'trunk', 'trush', 'truss', 'trust', 'truth', 'tsade', 'tsadi', 'tsars', 'tsere', 'tsine', 'tsked', 'tsuba', 'tsubo', 'tsuga', 'tsuma', 'tuant', 'tuarn', 'tuart', 'tuath', 'tubae', 'tubal', 'tubar', 'tubas', 'tubba', 'tubby', 'tubed', 'tubes', 'tubig', 'tubik', 'tucky', 'tucks', 'tucum', 'tudel', 'tudor', 'tufan', 'tufas', 'tuffs', 'tufty', 'tufts', 'tugui', 'tuyer', 'tuism', 'tukra', 'tules', 'tulip', 'tulle', 'tulsa', 'tulsi', 'tumid', 'tumli', 'tummy', 'tumor', 'tumps', 'tunal', 'tunas', 'tunca', 'tuned', 'tuner', 'tunes', 'tunga', 'tungo', 'tungs', 'tunic', 'tunis', 'tunka', 'tunna', 'tunny', 'tupek', 'tupik', 'tuple', 'tuque', 'turbo', 'turco', 'turds', 'turfy', 'turfs', 'turgy', 'turio', 'turki', 'turks', 'turma', 'turns', 'turps', 'turse', 'turus', 'turvy', 'tushy', 'tushs', 'tusky', 'tusks', 'tutee', 'tutin', 'tutly', 'tutor', 'tutti', 'tutty', 'tutto', 'tutus', 'tuxes', 'tuzla', 'twaes', 'twain', 'twait', 'twale', 'twalt', 'twana', 'twang', 'twank', 'twant', 'twats', 'tweag', 'tweak', 'tweed', 'tweeg', 'tweel', 'tween', 'tweet', 'tweil', 'twere', 'twerp', 'twice', 'twick', 'twier', 'twyer', 'twigs', 'twill', 'twilt', 'twine', 'twiny', 'twink', 'twins', 'twint', 'twire', 'twirk', 'twirl', 'twirp', 'twist', 'twite', 'twits', 'twixt', 'twoes', 'tzaam', 'tzars', 'uayeb', 'ualis', 'uaupe', 'uchee', 'uckia', 'udasi', 'udder', 'udell', 'udish', 'uglis', 'ugric', 'uhlan', 'uhllo', 'uhuru', 'uigur', 'uinal', 'uinta', 'ukase', 'ulama', 'ulans', 'ulcer', 'ulcus', 'ulema', 'uller', 'ulmic', 'ulmin', 'ulmus', 'ulnad', 'ulnae', 'ulnar', 'ulnas', 'uloid', 'ulpan', 'ultra', 'uluhi', 'ululu', 'ulvan', 'ulvas', 'umaua', 'umbel', 'umber', 'umble', 'umbos', 'umbra', 'umbre', 'umest', 'umiac', 'umiak', 'umiaq', 'umiri', 'umist', 'ummps', 'umped', 'umpty', 'umset', 'unact', 'unadd', 'unais', 'unami', 'unamo', 'unapt', 'unary', 'unark', 'unarm', 'unaus', 'unbag', 'unbay', 'unbar', 'unbed', 'unbet', 'unbid', 'unbit', 'unbog', 'unboy', 'unbow', 'unbox', 'unbud', 'uncap', 'uncia', 'uncle', 'uncoy', 'uncos', 'uncow', 'uncus', 'uncut', 'undam', 'undee', 'unden', 'under', 'undid', 'undye', 'undig', 'undim', 'undog', 'undon', 'undry', 'undub', 'undue', 'undug', 'uneye', 'unfar', 'unfed', 'unfew', 'unfit', 'unfix', 'unfur', 'ungag', 'unget', 'ungka', 'ungod', 'ungot', 'ungum', 'unhad', 'unhap', 'unhat', 'unhex', 'unhid', 'unhip', 'unhit', 'unhot', 'uniat', 'unice', 'unify', 'uninn', 'union', 'unism', 'unist', 'unite', 'unity', 'units', 'unius', 'unjam', 'unked', 'unkey', 'unken', 'unket', 'unkid', 'unkin', 'unlay', 'unlap', 'unlaw', 'unlax', 'unled', 'unlet', 'unlid', 'unlie', 'unlit', 'unmad', 'unman', 'unmet', 'unmew', 'unmix', 'unnet', 'unnew', 'unode', 'unoil', 'unold', 'unona', 'unorn', 'unown', 'unpay', 'unpeg', 'unpen', 'unpin', 'unpot', 'unput', 'unray', 'unram', 'unred', 'unrid', 'unrig', 'unrip', 'unrow', 'unrra', 'unrun', 'unsad', 'unsay', 'unsee', 'unset', 'unsew', 'unsex', 'unshy', 'unsin', 'unsly', 'unson', 'unsty', 'unsun', 'untap', 'untar', 'untax', 'untie', 'until', 'untin', 'untop', 'unurn', 'unuse', 'unwan', 'unwax', 'unweb', 'unwed', 'unwet', 'unwig', 'unwit', 'unwon', 'unwry', 'unzen', 'unzip', 'upaya', 'uparm', 'upbay', 'upbar', 'upbid', 'upbye', 'upbuy', 'upcry', 'upcut', 'updos', 'updry', 'upeat', 'upend', 'upfly', 'upget', 'upher', 'upjet', 'uplay', 'upleg', 'uplit', 'upmix', 'upped', 'upper', 'uppop', 'uprid', 'uprip', 'uprun', 'upsey', 'upset', 'upsit', 'upsun', 'upsup', 'uptie', 'upupa', 'upway', 'upwax', 'uraei', 'urali', 'urare', 'urari', 'urase', 'urate', 'urban', 'urbic', 'urdee', 'ureal', 'ureas', 'uredo', 'ureic', 'ureid', 'urena', 'urent', 'urged', 'urger', 'urges', 'uriah', 'urial', 'urian', 'uriel', 'urine', 'urite', 'urlar', 'urled', 'urman', 'urnae', 'urnal', 'ursae', 'ursal', 'ursid', 'urson', 'ursuk', 'ursus', 'urubu', 'urucu', 'urutu', 'usage', 'usant', 'usara', 'usent', 'users', 'ushak', 'ushas', 'usher', 'usine', 'using', 'uskok', 'usnea', 'usnic', 'usnin', 'usque', 'uster', 'usual', 'usure', 'usury', 'usurp', 'utchy', 'utees', 'utend', 'uteri', 'utero', 'uther', 'utick', 'utile', 'utrum', 'utsuk', 'utter', 'uvala', 'uvate', 'uveal', 'uveas', 'uviol', 'uvito', 'uvres', 'uvrou', 'uvula', 'uvver', 'uzara', 'uzbak', 'uzbeg', 'uzbek', 'vache', 'vacoa', 'vacua', 'vacuo', 'vadim', 'vadis', 'vagal', 'vagas', 'vague', 'vagus', 'vails', 'vaire', 'vairy', 'vairs', 'vajra', 'vakia', 'vakil', 'vales', 'valet', 'valew', 'valid', 'valyl', 'valmy', 'valor', 'valsa', 'valse', 'value', 'valva', 'valve', 'vamos', 'vamps', 'vance', 'vanda', 'vaned', 'vanes', 'vangs', 'vanir', 'vapid', 'vapor', 'vappa', 'varan', 'varas', 'varda', 'vardy', 'varec', 'varia', 'vario', 'varix', 'varna', 'varus', 'varve', 'vasal', 'vases', 'vasty', 'vasts', 'vates', 'vatic', 'vaudy', 'vault', 'vaunt', 'vealy', 'veals', 'vedda', 'vedet', 'vedic', 'vedro', 'veena', 'veeps', 'veery', 'veers', 'vefry', 'vegas', 'vehme', 'veily', 'veils', 'veiny', 'veins', 'vejoz', 'velal', 'velar', 'velds', 'veldt', 'velic', 'velte', 'velum', 'venae', 'venal', 'vends', 'vened', 'venge', 'venie', 'venin', 'venom', 'venta', 'vents', 'venue', 'venus', 'vepse', 'veray', 'verby', 'verbs', 'verde', 'verdi', 'verey', 'verek', 'verge', 'vergi', 'verpa', 'verre', 'verry', 'versa', 'verse', 'verso', 'verst', 'verty', 'verts', 'vertu', 'verus', 'verve', 'vespa', 'vesta', 'vests', 'vetch', 'veter', 'vetus', 'veuve', 'vexed', 'vexer', 'vexes', 'vexil', 'viage', 'vials', 'viand', 'vyase', 'vibes', 'vibex', 'vibix', 'vicar', 'viced', 'vices', 'vichy', 'vicia', 'vicki', 'vicky', 'vicua', 'vicus', 'video', 'vidya', 'vidry', 'vidua', 'viers', 'viewy', 'views', 'vifda', 'vigas', 'vigia', 'vigil', 'vigor', 'vying', 'vijay', 'vijao', 'viler', 'villa', 'ville', 'villi', 'vills', 'vimen', 'vimpa', 'vinal', 'vinas', 'vinca', 'vince', 'vinci', 'vinea', 'vined', 'viner', 'vines', 'vinet', 'vinew', 'vingt', 'vinic', 'vinyl', 'vinny', 'vinod', 'vinos', 'vinta', 'vinum', 'viola', 'viols', 'viper', 'viral', 'vireo', 'vires', 'virga', 'virge', 'virgo', 'virid', 'virls', 'viron', 'virtu', 'virus', 'visas', 'vised', 'vises', 'visie', 'visit', 'visne', 'vison', 'visor', 'vista', 'visto', 'vitae', 'vital', 'vitis', 'vitra', 'vitry', 'vitro', 'vitta', 'viuva', 'vivas', 'vivat', 'vivax', 'vivda', 'vivek', 'viver', 'vives', 'vivid', 'vivos', 'vivre', 'vixen', 'vizir', 'vizor', 'vizzy', 'vlach', 'vobis', 'vocab', 'vocal', 'vocat', 'voces', 'voder', 'vodum', 'vodun', 'vogie', 'vogue', 'vogul', 'voice', 'voids', 'voila', 'voile', 'volar', 'voled', 'voles', 'volet', 'volga', 'volow', 'volta', 'volte', 'volti', 'volto', 'volts', 'volva', 'vomer', 'vomit', 'voraz', 'votal', 'voted', 'voter', 'votes', 'vouch', 'vouge', 'vouli', 'voust', 'vowed', 'vowel', 'vower', 'vraic', 'vroom', 'vrouw', 'vrows', 'vucom', 'vuggy', 'vuggs', 'vughs', 'vulgo', 'vulva', 'waapa', 'waasi', 'wabby', 'wacke', 'wacky', 'wacks', 'waddy', 'waded', 'wader', 'wades', 'wadge', 'wadis', 'wadna', 'waefu', 'waffs', 'wafty', 'wafts', 'waged', 'wager', 'wages', 'waget', 'wagga', 'waggy', 'wagon', 'wahoo', 'wayao', 'waifs', 'waily', 'wails', 'wayne', 'wains', 'waird', 'wairs', 'waise', 'waist', 'waits', 'waive', 'wakan', 'wakas', 'waked', 'waken', 'waker', 'wakes', 'wakhi', 'wakif', 'wakon', 'waled', 'waler', 'wales', 'walks', 'walla', 'wally', 'walls', 'walsh', 'walth', 'walty', 'waltz', 'wamel', 'wames', 'wamus', 'wandy', 'wands', 'waned', 'waney', 'wanes', 'wanga', 'wanky', 'wanle', 'wanly', 'wanna', 'wanny', 'wanty', 'wants', 'wanze', 'wappo', 'warch', 'wards', 'wared', 'wares', 'warks', 'warly', 'warms', 'warns', 'warnt', 'warps', 'warri', 'warse', 'warst', 'warth', 'warty', 'warts', 'warua', 'warve', 'wasat', 'wasco', 'wasel', 'washy', 'washo', 'wasir', 'wasnt', 'waspy', 'wasps', 'waste', 'wasty', 'wasts', 'watap', 'watch', 'watts', 'wauch', 'waugh', 'wauks', 'wauls', 'wauns', 'waura', 'wauve', 'waved', 'wavey', 'waver', 'waves', 'wawah', 'wawls', 'waxed', 'waxen', 'waxer', 'waxes', 'wazir', 'weaky', 'weald', 'weals', 'weans', 'weary', 'wears', 'weave', 'webby', 'weber', 'wecht', 'wedel', 'wedge', 'wedgy', 'weeda', 'weedy', 'weeds', 'weeks', 'weeny', 'weens', 'weent', 'weepy', 'weeps', 'weesh', 'weest', 'weety', 'weets', 'weeze', 'wefty', 'wefts', 'wehee', 'weigh', 'weird', 'weirs', 'weism', 'wekas', 'wekau', 'welch', 'welds', 'welly', 'wells', 'welsh', 'welts', 'wemmy', 'wench', 'wende', 'wendi', 'wendy', 'wends', 'wenny', 'weren', 'wersh', 'weste', 'westy', 'wests', 'wetly', 'wevet', 'wezen', 'whack', 'whale', 'whaly', 'whalm', 'whalp', 'whame', 'whamp', 'whams', 'whand', 'whang', 'whank', 'whaps', 'whare', 'wharf', 'wharl', 'wharp', 'whart', 'whase', 'whata', 'whatd', 'whats', 'whauk', 'whaup', 'whaur', 'wheal', 'wheam', 'wheel', 'wheem', 'wheen', 'wheep', 'wheer', 'wheft', 'whein', 'wheys', 'wheki', 'whelk', 'whelm', 'whelp', 'whens', 'where', 'whets', 'whewl', 'whews', 'whewt', 'whiba', 'which', 'whick', 'whids', 'whiff', 'whift', 'whigs', 'while', 'whilk', 'whill', 'whils', 'whims', 'whine', 'whing', 'whiny', 'whins', 'whips', 'whipt', 'whirl', 'whirr', 'whirs', 'whish', 'whisp', 'whiss', 'whist', 'white', 'whity', 'whits', 'whizz', 'whole', 'wholl', 'whomp', 'whone', 'whoof', 'whoop', 'whoot', 'whops', 'whore', 'whory', 'whorl', 'whort', 'whose', 'whoso', 'whsle', 'whuff', 'whulk', 'whump', 'whush', 'whute', 'wicca', 'wicht', 'wicky', 'wicks', 'widdy', 'widen', 'wider', 'wides', 'widow', 'width', 'wield', 'wierd', 'wifed', 'wifes', 'wifie', 'wigan', 'wiggy', 'wight', 'wiyat', 'wiyot', 'wilco', 'wilds', 'wiled', 'wyled', 'wiles', 'wyles', 'wilga', 'willi', 'willy', 'wills', 'wilts', 'wince', 'winch', 'windy', 'winds', 'wynds', 'windz', 'wined', 'winey', 'winer', 'wines', 'wingy', 'wings', 'winks', 'winly', 'winna', 'wynne', 'wynns', 'winos', 'winze', 'wiped', 'wiper', 'wipes', 'wired', 'wirer', 'wires', 'wiros', 'wirra', 'wised', 'wisen', 'wiser', 'wises', 'wisha', 'wishy', 'wisht', 'wyson', 'wispy', 'wisps', 'wisse', 'wiste', 'wysty', 'wists', 'witan', 'witch', 'wited', 'wyted', 'witen', 'wites', 'wytes', 'withe', 'withy', 'witty', 'wived', 'wiver', 'wyver', 'wives', 'wizen', 'wizes', 'wlity', 'wloka', 'woady', 'woads', 'woald', 'wocas', 'woden', 'wodge', 'wodgy', 'woful', 'wogul', 'woibe', 'wokas', 'woken', 'woldy', 'wolds', 'wolfs', 'wolly', 'wolof', 'wolve', 'woman', 'womby', 'wombs', 'women', 'wonga', 'wonky', 'wonna', 'wonts', 'woody', 'woods', 'wooed', 'wooer', 'woofy', 'woofs', 'woold', 'woolf', 'wooly', 'wools', 'woomp', 'woons', 'woops', 'woosh', 'wootz', 'woozy', 'wopsy', 'wordy', 'words', 'worky', 'works', 'world', 'wormy', 'worms', 'worry', 'worse', 'worst', 'worth', 'worts', 'wouch', 'wough', 'would', 'wound', 'woven', 'wowed', 'wrack', 'wramp', 'wrang', 'wraps', 'wrapt', 'wrast', 'wrath', 'wrawl', 'wreak', 'wreat', 'wreck', 'wrens', 'wrest', 'wrick', 'wride', 'wried', 'wrier', 'wryer', 'wries', 'wryly', 'wring', 'wrist', 'write', 'writh', 'writs', 'wrive', 'wroke', 'wrong', 'wroot', 'wrote', 'wroth', 'wrung', 'wudge', 'wunna', 'wurly', 'wurst', 'wuzzy', 'xebec', 'xenia', 'xenic', 'xenyl', 'xenon', 'xenos', 'xeres', 'xeric', 'xerox', 'xerus', 'xicak', 'xylan', 'xylem', 'xylia', 'xylic', 'xylyl', 'xylol', 'xylon', 'xinca', 'xyrid', 'xyris', 'xysti', 'xysts', 'xoana', 'xurel', 'xviii', 'xxiii', 'zabra', 'zabti', 'zayat', 'zayin', 'zaire', 'zakah', 'zakat', 'zaman', 'zambo', 'zamia', 'zande', 'zante', 'zanza', 'zanze', 'zapas', 'zapus', 'zaque', 'zarfs', 'zaxes', 'zazen', 'zeals', 'zebec', 'zebra', 'zebub', 'zebus', 'zeins', 'zeism', 'zeiss', 'zeist', 'zemmi', 'zemni', 'zendo', 'zerda', 'zerma', 'zeros', 'zests', 'zetas', 'zhmud', 'ziara', 'zibet', 'ziega', 'ziffs', 'zygal', 'zigan', 'zygon', 'zihar', 'zilch', 'zilla', 'zills', 'zimbi', 'zymes', 'zymic', 'zymin', 'zimme', 'zimmi', 'zimmy', 'zincy', 'zinco', 'zincs', 'zineb', 'zingy', 'zings', 'zinke', 'zinky', 'zippy', 'zirai', 'zirak', 'ziram', 'zitis', 'zizel', 'zizia', 'zizit', 'zlote', 'zloty', 'zmudz', 'zoaea', 'zocco', 'zoeae', 'zoeal', 'zoeas', 'zogan', 'zohak', 'zoism', 'zoist', 'zokor', 'zolle', 'zombi', 'zonal', 'zonar', 'zonda', 'zoned', 'zoner', 'zones', 'zonic', 'zonta', 'zooid', 'zooks', 'zooms', 'zoona', 'zoons', 'zooty', 'zoque', 'zoril', 'zoris', 'zorro', 'zosma', 'zowie', 'zucco', 'zudda', 'zulus', 'zunis', 'urmom', 'jabba', 'soare']};\r\nexport default words;","import seedrandom from \"seedrandom\";\r\nimport {GameMode} from \"./enums\";\r\nimport wordList from \"./words_5\";\r\n\r\nexport const ROWS = 6;\r\nexport const COLS = 5;\r\n\r\nexport function validate(choice, cookieChoices) {\r\n\tconst choices = Object.keys(choice)\r\n\tconst chosen = Object.keys(cookieChoices)\r\n\r\n\tif (chosen.length !== choices.length) {\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn chosen.every(c => choices.includes(c))\r\n}\r\n\r\nexport const words = {\r\n\t...wordList,\r\n\tcontains: (word: string) => {\r\n\t\treturn wordList.words.includes(word) || wordList.valid.includes(word);\r\n\t},\r\n};\r\n\r\nexport function checkHardMode(board: GameBoard, row: number): HardModeData {\r\n\tfor (let i = 0; i < COLS; ++i) {\r\n\t\tif (board.state[row - 1][i] === \"🟩\" && board.words[row - 1][i] !== board.words[row][i]) {\r\n\t\t\treturn {pos: i, char: board.words[row - 1][i], type: \"🟩\"};\r\n\t\t}\r\n\t}\r\n\tfor (let i = 0; i < COLS; ++i) {\r\n\t\tif (board.state[row - 1][i] === \"🟨\" && !board.words[row].includes(board.words[row - 1][i])) {\r\n\t\t\treturn {pos: i, char: board.words[row - 1][i], type: \"🟨\"};\r\n\t\t}\r\n\t}\r\n\treturn { pos: -1, char: \"\", type: \"⬛\" };\r\n}\r\n\r\nclass Tile {\r\n\tpublic value: string;\r\n\tpublic notSet: Set<string>;\r\n\tconstructor() {\r\n\t\tthis.notSet = new Set<string>();\r\n\t}\r\n\tnot(char: string) {\r\n\t\tthis.notSet.add(char);\r\n\t}\r\n}\r\n\r\nclass WordData {\r\n\tpublic letterCounts: Map<string, [number, boolean]>;\r\n\tprivate notSet: Set<string>;\r\n\tpublic word: Tile[];\r\n\tconstructor() {\r\n\t\tthis.notSet = new Set<string>();\r\n\t\tthis.letterCounts = new Map<string, [number, boolean]>();\r\n\t\tthis.word = [];\r\n\t\tfor (let col = 0; col < COLS; ++col) {\r\n\t\t\tthis.word.push(new Tile());\r\n\t\t}\r\n\t}\r\n\tconfirmCount(char: string) {\r\n\t\tlet c = this.letterCounts.get(char);\r\n\t\tif (!c) {\r\n\t\t\tthis.not(char);\r\n\t\t} else {\r\n\t\t\tc[1] = true;\r\n\t\t}\r\n\t}\r\n\tcountConfirmed(char: string) {\r\n\t\tconst val = this.letterCounts.get(char);\r\n\t\treturn val ? val[1] : false;\r\n\t}\r\n\tsetCount(char: string, count: number) {\r\n\t\tlet c = this.letterCounts.get(char);\r\n\t\tif (!c) {\r\n\t\t\tthis.letterCounts.set(char, [count, false]);\r\n\t\t} else {\r\n\t\t\tc[0] = count;\r\n\t\t}\r\n\t}\r\n\tincrementCount(char: string) {\r\n\t\t++this.letterCounts.get(char)[0];\r\n\t}\r\n\tnot(char: string) {\r\n\t\tthis.notSet.add(char);\r\n\t}\r\n\tinGlobalNotList(char: string) {\r\n\t\treturn this.notSet.has(char);\r\n\t}\r\n\tlettersNotAt(pos: number) {\r\n\t\treturn new Set([...this.notSet, ...this.word[pos].notSet]);\r\n\t}\r\n}\r\n\r\nexport function getRowData(n: number, board: GameBoard) {\r\n\tconst wd = new WordData();\r\n\tfor (let row = 0; row < n; ++row) {\r\n\t\tconst occured = new Set<string>();\r\n\t\tfor (let col = 0; col < COLS; ++col) {\r\n\t\t\tconst state = board.state[row][col];\r\n\t\t\tconst char = board.words[row][col];\r\n\t\t\tif (state === \"⬛\") {\r\n\t\t\t\twd.confirmCount(char);\r\n\t\t\t\t// if char isn't in the global not list add it to the not list for that position\r\n\t\t\t\tif (!wd.inGlobalNotList(char)) {\r\n\t\t\t\t\twd.word[col].not(char);\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// If this isn't the first time this letter has occured in this row\r\n\t\t\tif (occured.has(char)) {\r\n\t\t\t\twd.incrementCount(char);\r\n\t\t\t} else if (!wd.countConfirmed(char)) {\r\n\t\t\t\toccured.add(char);\r\n\t\t\t\twd.setCount(char, 1);\r\n\t\t\t}\r\n\t\t\tif (state === \"🟩\") {\r\n\t\t\t\twd.word[col].value = char;\r\n\t\t\t}\r\n\t\t\telse {\t// if (state === \"🟨\")\r\n\t\t\t\twd.word[col].not(char);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet exp = \"\";\r\n\tfor (let pos = 0; pos < wd.word.length; ++pos) {\r\n\t\texp += wd.word[pos].value ? wd.word[pos].value : `[^${[...wd.lettersNotAt(pos)].join(\" \")}]`;\r\n\t}\r\n\treturn (word: string) => {\r\n\t\tif (new RegExp(exp).test(word)) {\r\n\t\t\tconst chars = word.split(\"\");\r\n\t\t\tfor (const e of wd.letterCounts) {\r\n\t\t\t\tconst occurences = countOccurences(chars, e[0]);\r\n\t\t\t\tif (!occurences || (e[1][1] && occurences !== e[1][0])) return false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n}\r\n\r\nfunction countOccurences<T>(arr: T[], val: T) {\r\n\treturn arr.reduce((count, v) => v === val ? count + 1 : count, 0);\r\n}\r\n\r\nexport function getState(word: string, guess: string): LetterState[] {\r\n\tconst charArr = word.split(\"\");\r\n\tconst result = Array<LetterState>(5).fill(\"⬛\");\r\n\tfor (let i = 0; i < word.length; ++i) {\r\n\t\tif (charArr[i] === guess.charAt(i)) {\r\n\t\t\tresult[i] = \"🟩\";\r\n\t\t\tcharArr[i] = \"$\";\r\n\t\t}\r\n\t}\r\n\tfor (let i = 0; i < word.length; ++i) {\r\n\t\tconst pos = charArr.indexOf(guess[i]);\r\n\t\tif (result[i] !== \"🟩\" && pos >= 0) {\r\n\t\t\tcharArr[pos] = \"$\";\r\n\t\t\tresult[i] = \"🟨\";\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport function contractNum(n: number) {\r\n\tswitch (n % 10) {\r\n\t\tcase 1: return `${n}st`;\r\n\t\tcase 2: return `${n}nd`;\r\n\t\tcase 3: return `${n}rd`;\r\n\t\tdefault: return `${n}th`;\r\n\t}\r\n}\r\n\r\nexport const keys = [\"qwertyuiop\", \"asdfghjkl\", \"zxcvbnm\"];\r\n\r\nexport function newSeed(mode: GameMode) {\r\n\tconst today = new Date();\r\n\tswitch (mode) {\r\n\t\tcase GameMode.daily:\r\n\t\t\treturn new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate())).valueOf();\r\n\t\tcase GameMode.hourly:\r\n\t\t\treturn new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours()).valueOf();\r\n\t\tcase GameMode.infinite:\r\n\t\t\treturn new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes(), today.getSeconds()).valueOf();\r\n\t}\r\n}\r\n\r\nexport const modeData: ModeData = {\r\n\tdefault: GameMode.daily,\r\n\tmodes: [\r\n\t\t{\r\n\t\t\tname: \"Daily\",\r\n\t\t\tunit: 86400000,\r\n\t\t\tstart: 1642370400000,\t// 17/01/2022\r\n\t\t\tseed: newSeed(GameMode.daily),\r\n\t\t\thistorical: false,\r\n\t\t\tstreak: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Hourly\",\r\n\t\t\tunit: 3600000,\r\n\t\t\tstart: 1642528800000,\t// 18/01/2022 8:00pm\r\n\t\t\tseed: newSeed(GameMode.hourly),\r\n\t\t\thistorical: false,\r\n\t\t\ticon: \"m50,7h100v33c0,40 -35,40 -35,60c0,20 35,20 35,60v33h-100v-33c0,-40 35,-40 35,-60c0,-20 -35,-20 -35,-60z\",\r\n\t\t\tstreak: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Infinite\",\r\n\t\t\tunit: 1000,\r\n\t\t\tstart: 1642428600000,\t// 17/01/2022 4:10:00pm\r\n\t\t\tseed: newSeed(GameMode.infinite),\r\n\t\t\thistorical: false,\r\n\t\t\ticon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport function getWordNumber(mode: GameMode) {\r\n\treturn Math.round((modeData.modes[mode].seed - modeData.modes[mode].start) / modeData.modes[mode].unit) + 1;\r\n}\r\n\r\nexport function seededRandomInt(min: number, max: number, seed: number) {\r\n\tconst rng = seedrandom(`${seed}`);\r\n\treturn Math.floor(min + (max - min) * rng());\r\n}\r\n\r\nexport const DELAY_INCREMENT = 200;\r\n\r\nexport const PRAISE = [\r\n\t\"Genius\",\r\n\t\"Magnificent\",\r\n\t\"Impressive\",\r\n\t\"Splendid\",\r\n\t\"Great\",\r\n\t\"Phew\",\r\n];\r\n\r\nexport function createNewGame(mode: GameMode): GameState {\r\n\treturn {\r\n\t\tactive: true,\r\n\t\tguesses: 0,\r\n\t\ttime: modeData.modes[mode].seed,\r\n\t\twordNumber: getWordNumber(mode),\r\n\t\tvalidHard: true,\r\n\t\tboard: {\r\n\t\t\twords: Array(ROWS).fill(\"\"),\r\n\t\t\tstate: Array.from({ length: ROWS }, () => (Array(COLS).fill(\"🔳\")))\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport function createDefaultSettings(): Settings {\r\n\treturn {\r\n\t\thard: new Array(modeData.modes.length).map(() => false),\r\n\t\tdark: true,\r\n\t\tcolorblind: false,\r\n\t\ttutorial: 3,\r\n\t};\r\n}\r\n\r\nexport function createDefaultStats(mode: GameMode): Stats {\r\n\tconst stats = {\r\n\t\tplayed: 0,\r\n\t\tlastGame: 0,\r\n\t\tguesses: {\r\n\t\t\tfail: 0,\r\n\t\t\t1: 0,\r\n\t\t\t2: 0,\r\n\t\t\t3: 0,\r\n\t\t\t4: 0,\r\n\t\t\t5: 0,\r\n\t\t\t6: 0,\r\n\t\t}\r\n\t};\r\n\tif (!modeData.modes[mode].streak) return stats;\r\n\treturn {\r\n\t\t...stats,\r\n\t\tstreak: 0,\r\n\t\tmaxStreak: 0,\r\n\t};\r\n}\r\n\r\nexport function createLetterStates(): { [key: string]: LetterState; } {\r\n\treturn {\r\n\t\ta: \"🔳\",\r\n\t\tb: \"🔳\",\r\n\t\tc: \"🔳\",\r\n\t\td: \"🔳\",\r\n\t\te: \"🔳\",\r\n\t\tf: \"🔳\",\r\n\t\tg: \"🔳\",\r\n\t\th: \"🔳\",\r\n\t\ti: \"🔳\",\r\n\t\tj: \"🔳\",\r\n\t\tk: \"🔳\",\r\n\t\tl: \"🔳\",\r\n\t\tm: \"🔳\",\r\n\t\tn: \"🔳\",\r\n\t\to: \"🔳\",\r\n\t\tp: \"🔳\",\r\n\t\tq: \"🔳\",\r\n\t\tr: \"🔳\",\r\n\t\ts: \"🔳\",\r\n\t\tt: \"🔳\",\r\n\t\tu: \"🔳\",\r\n\t\tv: \"🔳\",\r\n\t\tw: \"🔳\",\r\n\t\tx: \"🔳\",\r\n\t\ty: \"🔳\",\r\n\t\tz: \"🔳\",\r\n\t};\r\n}\r\n\r\nexport const definitions = new Map<string, Promise<DictionaryEntry>>();\r\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\nimport type { GameMode } from \"./enums\";\r\nimport { createDefaultSettings, createLetterStates } from \"./utils\";\r\n\r\nexport const mode = writable<GameMode>();\r\n\r\nexport const letterStates = writable(createLetterStates());\r\n\r\nexport const settings = writable(createDefaultSettings());","<script lang=\"ts\">\r\n\texport let onClick = () => {};\r\n</script>\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" on:click={onClick}>\r\n\t<slot />\r\n</svg>\r\n\r\n<style lang=\"scss\">\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t\twidth: 24px;\r\n\t\tmargin: 0 4px;\r\n\t\t:global(path) {\r\n\t\t\tfill: var(--icon-color);\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher, getContext } from \"svelte\";\r\n\timport { scale, fade } from \"svelte/transition\";\r\n\timport { mode } from \"../stores\";\r\n\timport { modeData } from \"../utils\";\r\n\timport GameIcon from \"./GameIcon.svelte\";\r\n\timport type { Toaster } from \"./widgets\";\r\n\texport let showStats: boolean;\r\n\texport let tutorial: boolean;\r\n\texport let showRefresh: boolean;\r\n\texport let toaster = getContext<Toaster>(\"toaster\");\r\n\tconst dispatch = createEventDispatcher();\r\n\tmode.subscribe((m) => {\r\n\t\tif (modeData.modes[m].unit - (new Date().valueOf() - modeData.modes[m].seed) > 0) {\r\n\t\t\tshowRefresh = false;\r\n\t\t}\r\n\t});\r\n</script>\r\n<header>\r\n\r\n<div class=\"icons\">\r\n\t\t<GameIcon onClick={() => dispatch(\"tutorial\")}>\r\n\t\t\t<path\r\n\t\t\t\td=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"></path>\r\n\t\t</GameIcon>\r\n\r\n\t\t{#if showRefresh}\r\n\t\t\t<GameIcon onClick={() => dispatch(\"reload\")}>\r\n\t\t\t\t<path\r\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\r\n\t\t\t\t\td=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"></path>\r\n\t\t\t</GameIcon>\r\n\t\t{/if}\r\n\t</div>\r\n\t<h1\r\n\t\tid=\"FoodleColor\"\r\n\t\ton:click|self={() => {\r\n\t\t\t$mode = ($mode + 1) % modeData.modes.length;\r\n\t\t\ttoaster.pop(modeData.modes[$mode].name);\r\n\t\t}}\r\n\t\ton:contextmenu|preventDefault|self={() => {\r\n\t\t\t$mode = ($mode - 1 + modeData.modes.length) % modeData.modes.length;\r\n\t\t\ttoaster.pop(modeData.modes[$mode].name);\r\n\t\t}}>\r\n\t\tFoodle\r\n\t</h1>\r\n\t<div class=\"icons\">\r\n\t\t{#if showStats}\r\n\t\t\t<GameIcon onClick={() => dispatch(\"stats\")}>\r\n\t\t\t\t<path\r\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\r\n\t\t\t\t\td=\"M16,11V3H8v6H2v12h20V11H16z M10,5h4v14h-4V5z M4,11h4v8H4V11z M20,19h-4v-6h4V19z\"></path>\r\n\t\t\t</GameIcon>\r\n\t\t{/if}\r\n\t\t<GameIcon onClick={() => dispatch(\"settings\")}>\r\n\t\t\t<path\r\n\t\t\t\td=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"></path>\r\n\t\t</GameIcon>\r\n\t</div>\r\n\t{#if tutorial}\r\n\t\t<div transition:scale class=\"tutorial\" on:click={() => dispatch(\"closeTutPopUp\")}>\r\n\t\t\tTap Foodle to change game mode\r\n\t\t\t<span class=\"ok\">OK</span>\r\n\t\t</div>\r\n\t{/if}\r\n</header>\r\n\r\n<style lang=\"scss\">\r\n\theader {\r\n\t\t--height: 51px;\r\n\t\tposition: relative;\r\n\t\tfont-weight: 700;\r\n\t\ttext-transform: uppercase;\r\n\t\tletter-spacing: 0.27rem;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tborder-bottom: 1px solid var(--border-primary);\r\n\t\twidth: 100%;\r\n\t\theight: var(--height);\r\n\t}\r\n\t.icons {\r\n\t\theight: 100%;\r\n\t\tz-index: 1;\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t//position: absolute\r\n\th1 {\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-family: \"Exo\", sans-serif;\r\n\t\tfont-weight: 900;\r\n\t\t//position: absolute;   goddammit code TODO: fix this\r\n\t\tfont-size: var(--fs-large);\r\n\t\tcursor: pointer;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t#FoodleColor { //Color crap\r\n\t\twidth: min-content;                    //Im stumped for now\r\n\t\twidth: -moz-min-content;\r\n\t\tbackground: linear-gradient(135deg,\r\n\t\t\t\tvar(--color-4) 1%, var(--color-4) 30%,\r\n\t\t\t\ttransparent 30%, transparent 32%,\r\n\t\t\t\tvar(--color-3) 32%, var(--color-3) 70%,\r\n\t\t\t\ttransparent 70%, transparent 72.3%,\r\n\t\t\t\tvar(--color-2) 72.3%);\r\n\t\tbackground-clip: text;\r\n\t\t-webkit-background-clip: text;\r\n\t\tcolor: transparent;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { onDestroy } from \"svelte\";\r\n\r\n\timport { mode } from \"../../stores\";\r\n\r\n\timport { DELAY_INCREMENT, ROWS } from \"../../utils\";\r\n\r\n\texport let value = \"\";\r\n\texport let state: LetterState;\r\n\texport let position = 0;\r\n\texport function bounce() {\r\n\t\tsetTimeout(() => (animation = \"bounce\"), (ROWS + position) * DELAY_INCREMENT);\r\n\r\n\t}\r\n\tlet s: string;\r\n\tlet pop = false;\r\n\tlet animation = \"\";\r\n\r\n\t// reset animation when value changes, because for some reason changing anination to \"\" when the game is over causes the tiles to flash\r\n\t$: !value && (animation = \"\");\r\n\t// ensure all animations play\r\n\tconst unsub = mode.subscribe(() => {\r\n\t\tanimation = \"\";\r\n\t\ts = \"🔳\";\r\n\t\tsetTimeout(() => (s = \"\"), 10);\r\n\t});\r\n\t// prevent pop animation from playing at the beginning\r\n\tsetTimeout(() => (pop = true), 200);\r\n\r\n\tonDestroy(unsub);\r\n</script>\r\n\r\n<div\r\n\tdata-animation={animation}\r\n\tclass:value\r\n\tclass:pop\r\n\tclass=\"tile {state} {s}\"\r\n\tstyle=\"transition-delay: {position * DELAY_INCREMENT}ms\"\r\n>\r\n\t<div class=\"front\">{value}</div>\r\n\t<div class=\"back\">{value}</div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\t:not(.pop),\r\n\t:global(.complete) .value {\r\n\t\tscale: 1 !important;\r\n\t\topacity: 1 !important;\r\n\t}\r\n\t.value {\r\n\t\tanimation: pop 0.1s;\r\n\t\t.front {\r\n\t\t\tborder-color: var(--border-primary);\r\n\t\t}\r\n\t}\r\n\t.tile {\r\n\t\tfont-size: 2rem;\r\n\t\tfont-weight: bold;\r\n\t\ttext-transform: uppercase;\r\n\t\tposition: relative;\r\n\t\ttransform-style: preserve-3d;\r\n\t\t&[data-animation=\"bounce\"] {\r\n\t\t\tanimation: bounce 1s;\r\n\t\t}\r\n\t}\r\n\t.back,\r\n\t.front {\r\n\t\tdisplay: grid;\r\n\t\tplace-items: center;\r\n\t\tposition: absolute;\r\n\t\tinset: 0;\r\n\t\tbackface-visibility: hidden;\r\n\t\t-webkit-backface-visibility: hidden;\r\n\t\ttransition: transform 0s ease-in-out;\r\n\t}\r\n\t.front {\r\n\t\tborder: 2px solid var(--border-primary);\r\n\t\ttransform: rotateX(0deg);\r\n\t\tcolor: var(--fg-primary);\r\n\t}\r\n\t.back {\r\n\t\tbackground: var(--color-absent);\r\n\t\ttransform: rotateX(180deg);\r\n\t}\r\n\t.🟩 .back {\r\n\t\tbackground: var(--color-correct);\r\n\t}\r\n\t.🟨 .back {\r\n\t\tbackground: var(--color-present);\r\n\t}\r\n\t:global(.complete) .tile:not(.🔳) .front {\r\n\t\ttransition-delay: inherit !important;\r\n\t\ttransition-duration: 0.8s;\r\n\t\ttransform: rotateX(180deg);\r\n\t}\r\n\t:global(.complete) .tile:not(.🔳) .back {\r\n\t\ttransition-delay: inherit !important;\r\n\t\ttransition-duration: 0.8s;\r\n\t\ttransform: rotateX(0deg);\r\n\t}\r\n\t@keyframes pop {\r\n\t\tfrom {\r\n\t\t\tscale: 0.8;\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\r\n\t\t40% {\r\n\t\t\tscale: 1.1;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\t@keyframes bounce {\r\n\t\t0%,\r\n\t\t20% {\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\t\t40% {\r\n\t\t\ttransform: translateY(-30px);\r\n\t\t}\r\n\t\t50% {\r\n\t\t\ttransform: translateY(5px);\r\n\t\t}\r\n\t\t60% {\r\n\t\t\ttransform: translateY(-15px);\r\n\t\t}\r\n\t\t80% {\r\n\t\t\ttransform: translateY(2px);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport { COLS } from \"../../utils\";\r\n\r\n\timport Tile from \"./Tile.svelte\";\r\n\texport let guesses: number;\r\n\texport let num: number;\r\n\texport let value = \"\";\r\n\texport let state: LetterState[];\r\n\texport function shake() {\r\n\t\tanimation = \"shake\";\r\n\t}\r\n\texport function bounce() {\r\n\t\ttiles.forEach((e) => e.bounce());\r\n\t}\r\n\tconst dispatch = createEventDispatcher();\r\n\tlet animation = \"\";\r\n\tlet tiles: Tile[] = [];\r\n</script>\r\n\r\n<div\r\n\tclass=\"board-row\"\r\n\ton:contextmenu|preventDefault={(e) => dispatch(\"ctx\", { x: e.clientX, y: e.clientY })}\r\n\ton:dblclick|preventDefault={(e) => dispatch(\"ctx\", { x: e.clientX, y: e.clientY })}\r\n\ton:animationend={() => (animation = \"\")}\r\n\tdata-animation={animation}\r\n\tclass:complete={guesses > num}\r\n>\r\n\t{#each Array(COLS) as _, i}\r\n\t\t<Tile bind:this={tiles[i]} state={state[i]} value={value.charAt(i)} position={i} />\r\n\t{/each}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\t.board-row {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(var(--cols), 1fr);\r\n\t\tgap: 5px;\r\n\t\t&[data-animation=\"shake\"] {\r\n\t\t\tanimation: shake 0.6s;\r\n\t\t}\r\n\t}\r\n\t@keyframes shake {\r\n\t\t10%,\r\n\t\t90% {\r\n\t\t\ttransform: translateX(-1px);\r\n\t\t}\r\n\r\n\t\t20%,\r\n\t\t80% {\r\n\t\t\ttransform: translateX(2px);\r\n\t\t}\r\n\r\n\t\t30%,\r\n\t\t50%,\r\n\t\t70% {\r\n\t\t\ttransform: translateX(-4px);\r\n\t\t}\r\n\r\n\t\t40%,\r\n\t\t60% {\r\n\t\t\ttransform: translateX(4px);\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { definitions as cache } from \"../../utils\";\r\n\texport let word: string;\r\n\t/** The maximum number of alternate definitions to provide*/\r\n\texport let alternates = 9;\r\n\r\n\tasync function getWordData(word: string): Promise<DictionaryEntry> {\r\n\t\tif (!cache.has(word)) {\r\n\t\t\tconst data = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`, {\r\n\t\t\t\tmode: \"cors\",\r\n\t\t\t});\r\n\t\t\tif (data.ok) {\r\n\t\t\t\tcache.set(word, (await data.json())[0]);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`Failed to fetch definition`);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache.get(word);\r\n\t}\r\n</script>\r\n\r\n<div class=\"def\">\r\n\t{#await getWordData(word)}\r\n\t\t<h4>Fetching definition...</h4>\r\n\t{:then data}\r\n\t\t<h2>{word}</h2>\r\n\t\t<em>{data.meanings[0].partOfSpeech}</em>\r\n\t\t<ol>\r\n\t\t\t{#if word !== data.word}\r\n\t\t\t\t<li>variant of {data.word}.</li>\r\n\t\t\t{/if}\r\n\t\t\t{#each data.meanings[0].definitions.slice(0, 1 + alternates - (word !== data.word ? 1 : 0)) as def}\r\n\t\t\t\t<li>{def.definition}</li>\r\n\t\t\t{/each}\r\n\t\t</ol>\r\n\t{:catch}\r\n\t\t<div>Your word was <strong>{word}</strong>. (failed to fetch definition)</div>\r\n\t{/await}\r\n</div>\r\n\r\n<style>\r\n\th2 {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin-right: 1rem;\r\n\t\tmargin-bottom: 0.8rem;\r\n\t}\r\n\tol {\r\n\t\tpadding-left: 1.5rem;\r\n\t}\r\n\tli {\r\n\t\tmargin-bottom: 0.5rem;\r\n\t}\r\n\tli::first-letter {\r\n\t\ttext-transform: uppercase;\r\n\t}\r\n\tli::marker {\r\n\t\tcolor: var(--fg-secondary);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport Definition from \"./Definition.svelte\";\r\n\r\n\texport let x = 0;\r\n\texport let y = 0;\r\n\texport let word = \"\";\r\n\texport let pAns: number;\r\n\texport let pSols: number;\r\n\tconst width = parseInt(getComputedStyle(document.body).getPropertyValue(\"--game-width\")) / 2;\r\n\r\n\t$: x = window.innerWidth - x < width ? window.innerWidth - width : x;\r\n</script>\r\n\r\n<div class=\"ctx-menu\" style=\"top: {y}px; left: {x}px;\">\r\n\t{#if word !== \"\"}\r\n\t\t<div>\r\n\t\t\tConsidering all hints, this row had:\r\n\t\t\t<br /><br />\r\n\t\t\t{pAns} possible answers\r\n\t\t\t<br />\r\n\t\t\t{pSols} valid guesses\r\n\t\t</div>\r\n\t\t<Definition {word} alternates={1} />\r\n\t{:else}\r\n\t\t<div>\r\n\t\t\tConsidering all hints, there are:\r\n\t\t\t<br /><br />\r\n\t\t\t{pAns} possible answers\r\n\t\t\t<br />\r\n\t\t\t{pSols} valid guesses\r\n\t\t</div>\r\n\t{/if}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\t.ctx-menu {\r\n\t\tposition: fixed;\r\n\t\tz-index: 2;\r\n\t\tfont-size: var(--fs-small);\r\n\t\tbackground-color: var(--bg-secondary);\r\n\t\tborder: solid 1px var(--border-primary);\r\n\t\tborder-radius: 4px;\r\n\t\tpadding: 10px;\r\n\t\twidth: calc(var(--game-width) / 2);\r\n\r\n\t\t& > :global(*) {\r\n\t\t\tborder-bottom: 1px solid var(--border-primary);\r\n\t\t\tpadding-bottom: 5px;\r\n\t\t}\r\n\t\t& > :global(*:last-child) {\r\n\t\t\tborder-bottom: none;\r\n\t\t\tpadding-bottom: unset;\r\n\t\t\tpadding-top: 5px;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { getRowData, words } from \"../../utils\";\r\n\timport Row from \"./Row.svelte\";\r\n\timport ContextMenu from \"../widgets/ContextMenu.svelte\";\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport { scale } from \"svelte/transition\";\r\n\texport let value: string[];\r\n\texport let board: GameBoard;\r\n\texport let guesses: number;\r\n\texport let icon: string;\r\n\texport let tutorial: boolean;\r\n\texport function shake(row: number) {\r\n\t\trows[row].shake();\r\n\t}\r\n\texport function bounce(row: number) {\r\n\t\trows[row].bounce();\r\n\t}\r\n\texport function hideCtx(e?: MouseEvent) {\r\n\t\tif (!e || !e.defaultPrevented) showCtx = false;\r\n\t}\r\n\tconst dispatch = createEventDispatcher();\r\n\tlet rows: Row[] = [];\r\n\tlet showCtx = false;\r\n\tlet pAns = 0;\r\n\tlet pSols = 0;\r\n\tlet x = 0;\r\n\tlet y = 0;\r\n\tlet word = \"\";\r\n\tfunction context(cx: number, cy: number, num: number, val: string) {\r\n\t\tif (guesses >= num) {\r\n\t\t\tx = cx;\r\n\t\t\ty = cy;\r\n\t\t\tshowCtx = true;\r\n\t\t\tword = guesses > num ? val : \"\";\r\n\t\t\tconst match = getRowData(num, board);\r\n\t\t\tpAns = words.words.filter((w) => match(w)).length;\r\n\t\t\tpSols = pAns + words.valid.filter((w) => match(w)).length;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n{#if showCtx}\r\n\t<ContextMenu {pAns} {pSols} {x} {y} {word} />\r\n{/if}\r\n\r\n<div class=\"board\">\r\n\t{#each value as _, i}\r\n\t\t<Row\r\n\t\t\tnum={i}\r\n\t\t\t{guesses}\r\n\t\t\tbind:this={rows[i]}\r\n\t\t\tbind:value={value[i]}\r\n\t\t\tstate={board.state[i]}\r\n\t\t\ton:ctx={(e) => context(e.detail.x, e.detail.y, i, value[i])}\r\n\t\t/>\r\n\t{/each}\r\n\t{#if icon}\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" fill=\"none\">\r\n            <path d={icon} stroke-width=\"14\"/>\r\n        </svg>\r\n    {/if}\r\n\t{#if tutorial}\r\n\t\t<div transition:scale class=\"tutorial\" on:click={() => dispatch(\"closeTutPopUp\")}>\r\n\t\t\tdouble tap (right click) a row to see a word's definition, or how many words could be\r\n\t\t\tplayed there\r\n\t\t\t<span class=\"ok\">OK</span>\r\n\t\t</div>\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.board {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-rows: repeat(var(--rows), 1fr);\r\n\t\tgap: 5.5px;\r\n\t\tmax-height: 420px;\r\n\t\tflex-grow: 1;\r\n\t\taspect-ratio: var(--cols) / var(--rows);\r\n\t\tpadding: 10px;\r\n\t\tposition: relative;\r\n\t}\r\n\tsvg {\r\n\t\tposition: absolute;\r\n\t\tz-index: -1;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: min(130%, 100vw);\r\n\t}\r\n\tpath {\r\n\t\tstroke: var(--bg-secondary);\r\n\t}\r\n\t.tutorial {\r\n\t\ttop: calc(100 / var(--rows) * 1%);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\r\n\texport let letter: string;\r\n\texport let state: LetterState = \"🔳\";\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<div class={state} class:big={letter.length !== 1} on:click={() => dispatch(\"keystroke\", letter)}>\r\n\t{letter}<slot />\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tfont-size: calc(var(--fs-tiny) + 1px);\r\n\t\tfont-weight: bold;\r\n\t\ttext-transform: uppercase;\r\n\t\tborder-radius: 4px;\r\n\t\theight: 58px;\r\n\t\tbackground: var(--key-bg);\r\n\t\tcursor: pointer;\r\n\t\tdisplay: grid;\r\n\t\tplace-items: center;\r\n\t\tflex: 1;\r\n\t\ttransition: background-color 0.3s ease-in-out;\r\n\t}\r\n\t:global(.guesses) div {\r\n\t\ttransition-delay: 1s;\r\n\t}\r\n\t:global(.guesses .preventChange) div {\r\n\t\ttransition-duration: 0.15s;\r\n\t\ttransition-delay: 0s;\r\n\t\tbackground: var(--key-bg) !important;\r\n\t}\r\n\t.big {\r\n\t\tfont-size: var(--fs-tiny);\r\n\t\tflex-grow: 1.5;\r\n\t}\r\n\t.⬛ {\r\n\t\tbackground: var(--color-absent);\r\n\t}\r\n\t.🟨 {\r\n\t\tbackground: var(--color-present);\r\n\t}\r\n\t.🟩 {\r\n\t\tbackground: var(--color-correct);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher, onDestroy, onMount } from \"svelte/internal\";\r\n\timport { letterStates, mode } from \"../../stores\";\r\n\timport { COLS, keys } from \"../../utils\";\r\n\timport Key from \"./Key.svelte\";\r\n\r\n\texport let value = \"\";\r\n\texport let disabled = false;\r\n\tlet preventChange = true;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tfunction appendValue(char: string) {\r\n\t\tif (!disabled && value.length < COLS) {\r\n\t\t\tdispatch(\"keystroke\", char);\r\n\t\t\tvalue += char;\r\n\t\t}\r\n\t}\r\n\tfunction backspaceValue() {\r\n\t\tif (!disabled) {\r\n\t\t\tvalue = value.slice(0, value.length - 1);\r\n\t\t}\r\n\t}\r\n\tfunction handleKeystroke(e: KeyboardEvent) {\r\n\t\tif (!disabled && !e.ctrlKey && !e.altKey) {\r\n\t\t\tif (e.key && /^[a-z]$/.test(e.key.toLowerCase())) {\r\n\t\t\t\treturn appendValue(e.key.toLowerCase());\r\n\t\t\t}\r\n\t\t\tif (e.key === \"Backspace\") return backspaceValue();\r\n\r\n\t\t\tif (e.key === \"Enter\") return dispatch(\"submitWord\");\r\n\t\t}\r\n\t\tif (e.key === \"Escape\") dispatch(\"esc\");\r\n\t}\r\n\r\n\t// Ensure keys change on load instead of loading their state color & change the color of all the keys to neutral, then to their correct color on mode change\r\n\tconst unsub = mode.subscribe(() => {\r\n\t\tpreventChange = true;\r\n\t\tsetTimeout(() => (preventChange = false), 200);\r\n\t});\r\n\tonDestroy(unsub);\r\n</script>\r\n\r\n<svelte:body on:keydown={handleKeystroke} />\r\n\r\n<div class:preventChange class=\"keyboard\">\r\n\t<div class=\"row\">\r\n\t\t{#each keys[0] as letter}\r\n\t\t\t<Key\r\n\t\t\t\t{letter}\r\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\r\n\t\t\t\tstate={$letterStates[letter]}\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t</div>\r\n\t<div class=\"row\">\r\n\t\t{#each keys[1] as letter}\r\n\t\t\t<Key\r\n\t\t\t\t{letter}\r\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\r\n\t\t\t\tstate={$letterStates[letter]}\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t</div>\r\n\t<div class=\"row\">\r\n\t\t<Key letter=\"ENTER\" on:keystroke={() => !disabled && dispatch(\"submitWord\")} />\r\n\t\t{#each keys[2] as letter}\r\n\t\t\t<Key\r\n\t\t\t\t{letter}\r\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\r\n\t\t\t\tstate={$letterStates[letter]}\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t\t<Key letter=\"\" on:keystroke={backspaceValue}>\r\n            <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                        d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\r\n                />\r\n            </svg>\r\n        </Key>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.keyboard {\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 2px;\r\n\t}\r\n\t.row {\r\n\t\ttouch-action: manipulation;\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tmargin: 0 auto 8px;\r\n\t\tpadding: 0 8px;\r\n\t\tgap: 6px;\r\n\t}\r\n\t.row:nth-of-type(2) {\r\n\t\tpadding: 0 30px;\r\n\t}\r\n\tsvg {\r\n\t\tfill: var(--fg-primary);\r\n\t\twidth: 24px;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\r\n\timport GameIcon from \"./GameIcon.svelte\";\r\n\r\n\texport let visible = false;\r\n\texport let fullscreen = false;\r\n\r\n\tconst dispach = createEventDispatcher();\r\n\r\n\tfunction close() {\r\n\t\tvisible = false;\r\n\t\tdispach(\"close\");\r\n\t}\r\n</script>\r\n\r\n{#if fullscreen}\r\n\t<div class:visible class=\"page\">\r\n\t\t<div class=\"exit\" on:click={close}>\r\n\t\t\t<GameIcon>\r\n\t\t\t\t<path\r\n\t\t\t\t\td=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n\t\t\t</GameIcon>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<slot />\r\n\t\t</div>\r\n\t\t<slot name=\"footer\" />\t</div>\r\n{:else}\r\n\t<div class:visible class=\"overlay\" on:click|self={close}>\r\n\t\t<div class=\"modal\">\r\n\t\t\t<div class=\"exit\" on:click={close}>\r\n\t\t\t\t<GameIcon>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\td=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n\t\t\t\t</GameIcon>\r\n\t\t\t</div>\r\n\t\t\t<slot />\r\n\t\t</div>\r\n\t</div>\r\n{/if}\r\n\r\n<style lang=\"scss\">\r\n\t@mixin modal-outer() {\r\n\t\ttransition: all 0.2s ease;\r\n\t\tfont-size: var(--fs-small);\r\n\t\tvisibility: hidden;\r\n\t\tposition: absolute;\r\n\t\tz-index: 1;\r\n\t\topacity: 0;\r\n\t\tinset: 0;\r\n\t}\r\n\t.overlay.visible,\r\n\t.visible.page,\r\n\t.visible .modal {\r\n\t\ttop: 0;\r\n\t\topacity: 1;\r\n\t\tvisibility: visible;\r\n\t}\r\n\t.exit {\r\n\t\tposition: absolute;\r\n\t\ttop: var(--modal-padding);\r\n\t\tright: var(--modal-padding);\r\n\t}\r\n\t/* regular modal */\r\n\t.overlay {\r\n\t\t@include modal-outer();\r\n\t\tbackground: #0008;\r\n\t}\r\n\t.modal {\r\n\t\t--modal-padding: 16px;\r\n\t\tbackground: var(--bg-primary);\r\n\t\tmax-width: var(--game-width);\r\n\t\theight: min-content;\r\n\t\tmax-height: 90%;\r\n\t\toverflow-y: auto;\r\n\t\tborder-radius: 8px;\r\n\t\tborder: 1px solid var(--bg-secondary);\r\n\t\tpadding: var(--modal-padding);\r\n\t\tpadding-top: calc(2 * var(--modal-padding));\r\n\t\tposition: absolute;\r\n\t\twidth: 90%;\r\n\t\tinset: 20vh 0 0;\r\n\t\tmargin: auto;\r\n\t\ttransition: all 0.3s ease;\r\n\t\t> :global(*:not(h3)) {\r\n\t\t\tmargin-bottom: 15px;\r\n\t\t}\r\n\t}\r\n\t/* fullscreen modal */\r\n\t.page {\r\n\t\t@include modal-outer();\r\n\t\tbackground: var(--bg-primary);\r\n\t\ttop: 10vh;\r\n\t\theight: 100%;\r\n\t\tmax-width: var(--game-width);\r\n\t\tmargin: auto;\r\n\t\tpadding: 10px 16px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-between;\r\n\t\toverflow-y: auto;\r\n\t\t.exit {\r\n\t\t\ttop: 10px;\r\n\t\t\tright: 10px;\r\n\t\t}\r\n\r\n\t}\r\n\t:global([slot=\"footer\"]) {\r\n\t\tcolor: var(--fg-secondary);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: flex-end;\r\n\t\ttext-align: end;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\texport let value: boolean;\r\n\texport let disabled = false\r\n</script>\r\n\r\n<div on:click={() => !disabled && (value = !value)} class:checked={value} {disabled}></div>\r\n\r\n<style lang=\"scss\">\r\n\tdiv[disabled=\"true\"] {\r\n\t\topacity: 0.5;\r\n\t\tcursor: unset;\r\n\t}\r\n\tdiv {\r\n\t\twidth: 32px;\r\n\t\theight: 20px;\r\n\t\tborder-radius: 10px;\r\n\t\tbackground: var(--icon-color);\r\n\t\tposition: relative;\r\n\t\tcursor: pointer;\r\n\t\ttransition: background-color 0.3s ease;\r\n\t\t&::before {\r\n\t\t\tcontent: \"\";\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 16px;\r\n\t\t\taspect-ratio: 1;\r\n\t\t\tbackground: white;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tmargin: 2px;\r\n\t\t\tleft: 0;\r\n\t\t\ttransition: left 0.3s ease;\r\n\t\t}\r\n\t}\r\n\t.checked {\r\n\t\tbackground: var(--color-correct);\r\n\t\t&::before {\r\n\t\t\tleft: 12px;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\texport let value: number;\r\n\texport let options: (string | number)[];\r\n\texport let disabled = false;\r\n</script>\r\n\r\n<select bind:value {disabled}>\r\n\t{#each options as val, i}\r\n\t\t<option value={i}>{val}</option>\r\n\t{/each}\r\n</select>\r\n\r\n<style>\r\n\tselect {\r\n\t\tborder: solid 1px var(--border-secondary);\r\n\t\tpadding: 8px;\r\n\t\tmin-width: 85px;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: var(--bg-secondary);\r\n\t\tcolor: var(--fg-primary);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport Switch from \"./Switch.svelte\";\r\n\timport DropDown from \"./DropDown.svelte\";\r\n\texport let value: any;\r\n\texport let type: SettingType;\r\n\texport let options: (string | number)[] = [];\r\n\texport let disabled = false;\r\n\tconst types = {\r\n\t\tswitch: Switch,\r\n\t\tdropdown: DropDown\r\n\t};\r\n</script>\r\n\r\n<div class=\"setting\">\r\n\t<div>\r\n\t\t<div class=\"title\"><slot name=\"title\" /></div>\r\n\t\t<div class=\"desc\"><slot name=\"desc\" /></div>\r\n\t</div>\r\n\t<svelte:component this={types[type]} bind:value {options} {disabled} />\r\n</div>\r\n\r\n<style>\r\n\t.setting {\r\n\t\t/* border-bottom: 1px solid var(--border-primary); */\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t}\r\n\t.title {\r\n\t\tfont-size: var(--fs-medium);\r\n\t\tfont-weight: 500;\r\n\t}\r\n\t.desc {\r\n\t\tfont-size: var(--fs-tiny);\r\n\t\tcolor: var(--fg-secondary);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport {createEventDispatcher, getContext, onMount} from \"svelte\";\r\n\timport {mode, settings} from \"../../stores\";\r\n\timport {modeData} from \"../../utils\";\r\n\timport type {Toaster} from \"../widgets\";\r\n\timport Setting from \"./Setting.svelte\";\r\n\r\n\texport let state: GameState;\r\n\tconst toaster = getContext<Toaster>(\"toaster\");\r\n\tlet root: HTMLElement;\r\n\tconst dispatch = createEventDispatcher();\r\n\tonMount(() => {\r\n\t\troot = document.documentElement;\r\n\t});\r\n\t$: {\r\n\t\tif (root) {\r\n\t\t\t$settings.dark ? root.classList.remove(\"light\") : root.classList.add(\"light\");\r\n\t\t\t$settings.colorblind\r\n\t\t\t\t? root.classList.add(\"colorblind\")\r\n\t\t\t\t: root.classList.remove(\"colorblind\");\r\n\t\t\tlocalStorage.setItem(\"settings\", JSON.stringify($settings));\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<!-- not currently supported, see https://github.com/sveltejs/svelte/issues/3105 -->\r\n<!-- <svelte:body class:light={!$settings.dark} class:colorblind={$settings.colorblind} /> -->\r\n<div style=\"z-index: 0\" class=\"outer\">\r\n    <div class=\"settings-top\">\r\n        <h3>settings</h3>\r\n        <div\r\n                on:click={() => {\r\n\t\t\t\tif (!state.validHard) {\r\n\t\t\t\t\ttoaster.pop(\"Game has already violated hard mode\");\r\n\t\t\t\t}\r\n\t\t\t}}\r\n        >\r\n            <Setting type=\"switch\" bind:value={$settings.hard[$mode]} disabled={!state.validHard}>\r\n\t\t\t\t<span slot=\"title\">Hard Mode</span>\r\n\t\t\t\t<span slot=\"desc\">Any revealed hints must be used in subsequent guesses</span>\r\n\t\t\t</Setting>\r\n\t\t</div>\r\n\t\t<Setting type=\"switch\" bind:value={$settings.dark}>\r\n\t\t\t<span slot=\"title\">Dark Theme</span>\r\n\t\t</Setting>\r\n\t\t<Setting type=\"switch\" bind:value={$settings.colorblind}>\r\n\t\t\t<span slot=\"title\">Color Blind Mode</span>\r\n\t\t\t<span slot=\"desc\">High contrast colors</span>\r\n\t\t</Setting>\r\n\t\t<Setting type=\"dropdown\" bind:value={$mode} options={modeData.modes.map((e) => e.name)}>\r\n\t\t\t<span slot=\"title\">Game Mode</span>\r\n\t\t\t<span slot=\"desc\">The game mode determines how often the word refreshes</span>\r\n\t\t</Setting>\r\n\t\t<div class=\"links\">\r\n\t\t\t<a href=\"https://www.buymeacoffee.com/JasonLovesDoggo\" target=\"_blank\">Support me</a>\r\n\t\t\t<span on:click={() => dispatch(\"contact\")} style=\"text-decoration: underline;\">Suggest a word</span>\r\n\t\t\t<a href=\"https://github.com/JasonLovesDoggo/JasonLovesDoggo.github.io/issues/new\" target=\"_blank\">Report a\r\n\t\t\t\tBug</a>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.outer {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t.links {\r\n\t\tfont-size: var(--fs-medium);\r\n\t\tborder-bottom: 1px solid var(--border-primary);\r\n\t\tcolor: var(--fg-secondary);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t:global(.settings-top > div) {\r\n\t\tpadding: 16px 0;\r\n\t\tborder-bottom: 1px solid var(--border-primary);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\texport let visible = true;\r\n</script>\r\n\r\n<div class=\"sep\" class:visible>\r\n\t<div>\r\n\t\t<slot name=\"1\" />\r\n\t</div>\r\n\t<div>\r\n\t\t<slot name=\"2\" />\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.sep.visible {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.sep {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.sep :first-child {\r\n\t\tborder-right: 1px solid var(--fg-primary);\r\n\t}\r\n\t.sep div {\r\n\t\tflex: 1;\r\n\t\tdisplay: grid;\r\n\t\tplace-items: center;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport type Toaster from \"./Toaster.svelte\";\r\n\timport { mode } from \"../../stores\";\r\n\timport { COLS, modeData } from \"../../utils\";\r\n\timport { getContext } from \"svelte\";\r\n\texport let state: GameState;\r\n\tconst toaster = getContext<Toaster>(\"toaster\");\r\n\tfunction failed() {\r\n\t\tif (state.guesses === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn state.board.state[state.guesses - 1].join(\"\") === \"🟩\".repeat(COLS);\r\n\r\n\t}\r\n\t$: stats = `${modeData.modes[$mode].name} Foodle #${state.wordNumber} ${\r\n\t\t!state.active && failed() ? state.guesses : \"X\"\r\n\t}/${state.board.words.length}\\n\\n    ${state.board.state\r\n\t\t.slice(0, state.guesses)\r\n\t\t.map((r) => r.join(\"\"))\r\n\t\t.join(\"\\n    \")}\\nnasoj.me/foodle/`;\r\n</script>\r\n\r\n<div\r\n        on:click={() => {\r\n\t\tnavigator.clipboard.writeText(stats);\r\n\t\ttoaster.pop(\"Copied\");\r\n\t}}\r\n>\r\n    share\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n                d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\r\n                fill=\"white\"\r\n        />\r\n    </svg>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\tdiv {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: var(--fs-medium);\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-weight: bold;\r\n\t\tbackground: var(--color-correct);\r\n\t\tborder-radius: 4px;\r\n\t\theight: 52px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tgap: 8px;\r\n\t\twidth: 80%;\r\n\t\tcursor: pointer;\r\n\t&:hover {\r\n\t\t\topacity: 0.9;\r\n\t\t}\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { COLS, ROWS } from \"../../utils\";\r\n\r\n\timport { Tile } from \"../board\";\r\n\timport {createEventDispatcher} from \"svelte\";\r\n\tconst dispatch = createEventDispatcher();\r\n\texport let visible: boolean;\r\n</script>\r\n\r\n<h1>how to play</h1>\r\n<div>Guess the <strong>FOODLE</strong> in {ROWS} tries.</div>\r\n<div>Each guess must be a valid {COLS} letter word. Hit the enter button to submit.</div>\r\n<div>\r\n\tAfter each guess, the color of the tiles will change to show how close your guess was to the\r\n\tword.\r\n</div>\r\n<div class:complete={visible} class=\"examples\">\r\n\t<div><strong>Examples</strong></div>\r\n\t<div class=\"row\">\r\n\t\t<Tile value=\"T\" state=\"🟩\" />\r\n\t\t<Tile value=\"a\" state=\"🔳\" />\r\n\t\t<Tile value=\"c\" state=\"🔳\" />\r\n\t\t<Tile value=\"o\" state=\"🔳\" />\r\n\t\t<Tile value=\"s\" state=\"🔳\" />\r\n\t</div>\r\n\t<div>The letter <strong>T</strong> is in the word and in the correct spot.</div>\r\n\t<div class=\"row\">\r\n\t\t<Tile value=\"p\" state=\"🔳\" />\r\n\t\t<Tile value=\"i\" state=\"🟨\" />\r\n\t\t<Tile value=\"z\" state=\"🔳\" />\r\n\t\t<Tile value=\"z\" state=\"🔳\" />\r\n\t\t<Tile value=\"a\" state=\"🔳\" />\r\n\t</div>\r\n\t<div>The letter <strong>I</strong> is in the word but in the wrong spot.</div>\r\n\t<div class=\"row\">\r\n\t\t<Tile value=\"b\" state=\"🔳\"/>\r\n\t\t<Tile value=\"r\" state=\"🔳\"/>\r\n\t\t<Tile value=\"e\" state=\"🔳\"/>\r\n\t\t<Tile value=\"a\" state=\"🔳\"/>\r\n\t\t<Tile value=\"d\" state=\"⬛\"/>\r\n\t</div>\r\n\t<div>The letter <strong>D</strong> is not in the word in any spot.</div>\r\n</div>\r\n<div>\r\n\tThis is a recreation of the original <a\r\n\t\thref=\"https://www.powerlanguage.co.uk/wordle/\"\r\n\t\ttarget=\"_blank\">Wordle</a\r\n>\r\n\tby Josh Wardle with a different theme and additional modes and features.\r\n\t<br/>\r\n\tPlease <span on:click={() => dispatch(\"contact\")} style=\"text-decoration: underline;\">contact</span> the developer\r\n\t<a href=\"https://github.com/JasonLovesDoggo\" target=\"_blank\">Jason</a>.\r\n\tif you have any problems. Or find us on <a class=\"social_link twitter\" href=\"https://twitter.com/FoodleTheGame\">Twitter</a>\r\n\t<br/>\r\n\tOpen the settings menu to see some of the additional features.\r\n\tOr click\r\n\t<a href=\"https://nasoj.me/\" target=\"_blank\">Here to go home.</a>\r\n\tOr view the <span on:click={() => dispatch(\"changelog\")} style=\"text-decoration: underline;\">ChangeLog.</span>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\t* {\r\n\t\talign-content: center;\r\n\t}\r\n\r\n\tdiv {\r\n\t\tmargin: 14px 0;\r\n\t}\r\n\r\n\t.examples {\r\n\t\tborder-top: 1px solid var(--border-primary);\r\n\t\tborder-bottom: 1px solid var(--border-primary);\r\n\r\n\t\t:global(.row > *) {\r\n\t\t\theight: 100%;\r\n\t\t\taspect-ratio: 1;\r\n\t\t}\r\n\r\n\t\t&:not(.complete) :global(.row .back) {\r\n\t\t\ttransition-delay: 0.3s;\r\n\t\t}\r\n\t}\r\n\r\n\t.row {\r\n\t\theight: 40px;\r\n\t\tdisplay: flex;\r\n\t\tgap: 4px;\r\n\t}\r\n\r\n\r\n\t.twitter:hover {\r\n\t\tcolor: #00acee\r\n\t}\r\n\r\n\t.social_link {\r\n\t\t-webkit-transition: color 0.4s ease-out;\r\n\t\t-moz-transition: color 0.4s ease-out;\r\n\t\t-o-transition: color 0.4s ease-out;\r\n\t\t-ms-transition: color 0.4s ease-out;\r\n\t\ttransition: color 0.4s ease-out;\r\n\t}\r\n\r\n\t.social_link:hover {\r\n\t\tfont-size: 15px;\r\n\t}\r\n\r\n</style>\r\n\r\n","<script lang=\"ts\">\r\n    export let visible: boolean;\r\n</script>\r\n\r\n<div class:complete={visible} class=\"container contact-form\">\r\n    <h1>Contact Me</h1>\r\n    <div id=\"link_container\">\r\n        <a class=\"twitter\" href=\"https://twitter.com/FoodleTheGame\" style=\"font-size: 20px\">Twitter</a>\r\n        <a href=\"https://github.com/JasonLovesDoggo/JasonLovesDoggo.github.io/issues/new\"\r\n           style=\"font-size: 20px\">Github</a>\r\n    </div>\r\n    <br/>\r\n    <form name=\"Foodle-form\" accept-charset=\"utf-8\" action=\"https://formspree.io/f/xqknbywk\" method=\"post\">\r\n        <label for=\"fname\">First Name</label>\r\n        <input type=\"text\" id=\"fname\" name=\"First name\" placeholder=\"Jason\" required>\r\n\r\n        <label for=\"lname\">Last Name</label>\r\n        <input id=\"lname\" name=\"Last name\" placeholder=\"Cameron \" required type=\"text\">\r\n\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" name=\"Email\" placeholder=\"foodlethegame@gmail.com\" required>\r\n        <label for=\"Issue-Type\"> Issue Type</label>\r\n        <select name=\"Issue Type\" id=\"Issue-Type\" required=\"\">\r\n            <option value=\"\" selected=\"\" disabled=\"\">Select</option>\r\n            <option value=\"Bug Report\">Bug Report</option>\r\n            <option value=\"Missing Word\">Missing Word</option>\r\n            <option value=\"Other\">Other</option>\r\n        </select>\r\n\r\n        <label for=\"message\">Message</label>\r\n        <textarea id=\"message\" name=\"message\" placeholder=\"Please write a descriptive message\" rows=\"2\" style=\"height:200px\"></textarea>\r\n        <div class=\"g-recaptcha\" data-sitekey=\"6LexoLkeAAAAAAeeRiBX2wFK7nQ1eaW68mRS2J1m\"></div>\r\n        <input type=\"submit\" value=\"Submit\">\r\n        <input type=\"reset\" value=\"Reset\">\r\n        <br/>\r\n        <div><p class=\"captcha\">\r\n            This site is protected by reCAPTCHA and the Google <a rel=\"noopener\" aria-haspopup=\"true\" target=\"_blank\"\r\n                                                                  href=\"https://policies.google.com/privacy\">Privacy\r\n            Policy</a> and <a rel=\"noopener\" aria-haspopup=\"true\" target=\"_blank\"\r\n                              href=\"https://policies.google.com/terms\">Terms of Service</a> apply.</p></div>\r\n    </form>\r\n</div>\r\n\r\n<style>\r\n    .contact-form {\r\n        z-index: 99999;\r\n        position: relative;\r\n        -ms-overflow-style: none; /* IE and Edge */\r\n        scrollbar-width: none; /* Firefox */\r\n    }\r\n\r\n    .contact-form::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n\r\n    input[type=text], input[type=email], select, textarea {\r\n        color: var(--bg-primary);\r\n        width: 100%; /* Full width */\r\n        padding: 11px; /* Some padding */\r\n        border: 1px solid #ccc; /* Gray border */\r\n        border-radius: 4px; /* Rounded borders */\r\n        box-sizing: border-box; /* Make sure that padding and width stays in place */\r\n        margin-top: 6px; /* Add a top margin */\r\n        margin-bottom: 16px; /* Bottom margin */\r\n        resize: vertical /* Allow the user to vertically resize the textarea (not horizontally) */\r\n    }\r\n\r\n    ::placeholder, ::-ms-input-placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n        color: var(--fg-primary);\r\n        opacity: 1; /* Firefox */\r\n    }\r\n\r\n    label {\r\n        color: var(--fg-primary);\r\n    }\r\n\r\n    /* Style the submit button with a specific background color etc */\r\n    input[type=submit], input[type=reset] {\r\n        background-color: var(--fg-primary);\r\n        color: var(--bg-primary); /* This works */\r\n        padding: 11px 20px;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    input:checked {\r\n        color: var(--fg-primary);\r\n    }\r\n\r\n    /* When moving the mouse over the submit button, add a darker green color */\r\n    input[type=submit]:hover {\r\n        background-color: var(--color-correct);\r\n    }\r\n\r\n    input[type=reset]:hover {\r\n        background-color: var(--red);\r\n    }\r\n\r\n    /* Add a background color and some padding around the form */\r\n    .container {\r\n        /* From https://css.glass */\r\n        background: rgba(var(--bg-primary), 0.5);\r\n        border-radius: 16px;\r\n        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\r\n        backdrop-filter: blur(0px);\r\n        -webkit-backdrop-filter: blur(0px);\r\n        margin: 10px;\r\n        padding: 15px;\r\n    }\r\n\r\n    .container h1 {\r\n        color: var(--fg-primary);\r\n    }\r\n\r\n    .captcha {\r\n        font-size: 10px;\r\n        margin: revert;\r\n    }\r\n\r\n    .twitter {\r\n        -webkit-transition: color 0.4s ease-out;\r\n        -moz-transition: color 0.4s ease-out;\r\n        -o-transition: color 0.4s ease-out;\r\n        -ms-transition: color 0.4s ease-out;\r\n        transition: color 0.4s ease-out;\r\n    }\r\n\r\n    .twitter:hover {\r\n        color: #00acee\r\n    }\r\n\r\n    #link_container {\r\n        margin: 3% 25% 0 25%;\r\n        padding: 2%;\r\n        text-align: justify;\r\n\r\n    }\r\n\r\n    #link_container:after {\r\n        content: ' ';\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 0\r\n    }\r\n\r\n    #link_container > a {\r\n        display: inline-block\r\n    }\r\n</style>\r\n\r\n","<script lang=\"ts\">\r\n\r\n    export let visible: boolean;\r\n    let source: Response | string = ` # Fetching ChangeLog...`\r\n    let filename: string\r\n    let githuburl: string\r\n    let json: Record<string, string | []> = {};\r\n    let errormsg: string\r\n    //import { onMount } from 'svelte';\r\n            //TODO: redo this module with the foodle api\r\n    //onMount(() => {\r\n    //setInterval(GetLatestVersion, 86400000) //Check the latest version once a day\r\n    //});\r\n\r\n    async function GetLatestVersion() {    // TODO: change this to the foodle api when ready\r\n        const data = await fetch(`https://api.github.com/repos/JasonLovesDoggo/JasonLovesDoggo.github.io/releases/latest`, {\r\n            mode: \"cors\",\r\n        });\r\n        let json = (await data.json())\r\n        if (data.ok) {\r\n            githuburl = json['html_url']\r\n            return await GetChangeLog(json['tag_name']);\r\n        }\r\n\r\n    }\r\n\r\n    async function GetChangeLog(tag_name) {    // TODO: change this to the foodle api when ready\r\n        const data = await fetch(`https://nasoj.me/foodle/changelogs/${tag_name}.json`, {\r\n            cache: 'no-cache'\r\n        });\r\n        if (data.ok) {\r\n            return json = await data.json();\r\n        } else {\r\n            throw new Error('Failed to fetch the changelog')\r\n\r\n        }\r\n    }\r\n    //TODO make the changelog scrollable via {#each and loop through the\r\n</script>\r\n\r\n<div class:complete={visible} id=\"ChangeLogContainer\">\r\n    {#await GetLatestVersion()}\r\n        <h1>Fetching data...</h1>\r\n    {:then json}\r\n        {#if errormsg !== ''}\r\n\r\n            <h1 style=\"padding-bottom: 7%;\" class=\"center\">Foodle {json['version']}</h1>\r\n            <h2>{json['title']}</h2>\r\n            <h3 class=\"margind\" style=\"text-align: revert\">Updates</h3>\r\n            <ul class=\"margind\">\r\n                {#each json['changes'] as change}\r\n                    <li class=\"margind\">{change}</li>\r\n                {/each}\r\n            </ul>\r\n            <h2 style=\"padding-top: 4%;\" class=\"center\"><a target=\"_blank\" href={githuburl}>View on GitHub</a>\r\n            </h2>\r\n        {/if}\r\n\r\n    {:catch s}\r\n        <div><h2> Failed to fetch the changelog but you can <a target=\"_blank\" href={githuburl}>view it on GitHub</a>\r\n        </h2></div>\r\n    {/await}\r\n\r\n</div>\r\n\r\n\r\n<style>\r\n    *:before, *:after {\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .center {\r\n        text-align: center;\r\n    }\r\n\r\n    .margind {\r\n        margin: 15px;\r\n    }\r\n    #ChangeLogContainer {\r\n        position: relative;\r\n        margin: 5%;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher} from \"svelte\";\r\n\timport type { GameMode } from \"../../enums\";\r\n\timport { mode } from \"../../stores\";\r\n\timport { modeData } from \"../../utils\";\r\n\tconst dispatch = createEventDispatcher();\r\n\tconst HOUR = 3600000;\r\n\tconst MINUTE = 60000;\r\n\tconst SECOND = 1000;\r\n\tlet ms = 1000;\r\n\tlet countDown: number;\r\n\texport function reset(m: GameMode) {\r\n\t\tclearInterval(countDown);\r\n\t\tms =\r\n\t\t\tmodeData.modes[m].unit -\r\n\t\t\t(new Date().valueOf() - modeData.modes[m].seed) +\r\n\t\t\tnew Date().getTimezoneOffset() * 60000;\r\n\t\tif (ms < 0) dispatch(\"timeup\");\r\n\t\tcountDown = setInterval(() => {\r\n\t\t\tms =\r\n\t\t\t\tmodeData.modes[m].unit -\r\n\t\t\t\t(new Date().valueOf() - modeData.modes[m].seed) +\r\n\t\t\t\tnew Date().getTimezoneOffset() * 60000;\r\n\t\t\tif (ms < 0) {\r\n\t\t\t\tclearInterval(countDown);\r\n\t\t\t\tdispatch(\"timeup\");\r\n\t\t\t}\r\n\t\t}, SECOND);\r\n\t}\r\n\t$: reset($mode);\r\n</script>\r\n\r\n<h4>Next Daily Foodle Is In</h4>\r\n<div class=\"container\">\r\n\t{#if ms > 0}\r\n\t\t<div class=\"timer\">\r\n\t\t\t{`${Math.floor(ms / HOUR)}`.padStart(2, \"0\")}:{`${Math.floor(\r\n\t\t\t\t(ms % HOUR) / MINUTE\r\n\t\t\t)}`.padStart(2, \"0\")}:{`${Math.floor((ms % MINUTE) / SECOND)}`.padStart(2, \"0\")}\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<div class=\"button\" on:click={() => dispatch(\"reload\")}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                        d=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\th4 {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t.container {\r\n\t\theight: 45px;\r\n\t\tmin-width: 70%;\r\n\t}\r\n\t.timer {\r\n\t\tfont-size: clamp(25px, 8vw, var(--fs-large));\r\n\t\ttext-align: center;\r\n\t}\r\n\t.button {\r\n\t\theight: 80%;\r\n\t\taspect-ratio: 1;\r\n\t\tpadding: 4px;\r\n\t\tbackground: var(--color-correct);\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tmargin: auto;\r\n\t}\r\n\tsvg {\r\n\t\tfill: white;\r\n\t\theight: 100%;\r\n\t}\r\n\t.button:hover {\r\n\t\topacity: 0.9;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { fade } from \"svelte/transition\";\r\n\r\n\texport function pop(text: string, duration = 1) {\r\n\t\ttoast = [text, ...toast];\r\n\t\tsetTimeout(() => (toast = toast.slice(0, toast.length - 1)), duration * 1000);\r\n\t}\r\n\tlet toast: string[] = [];\r\n</script>\r\n\r\n<div class=\"toast\">\r\n\t{#each toast as slice}\r\n\t\t<div class=\"slice\" out:fade={{ duration: 200 }}>{slice}</div>\r\n\t{/each}\r\n</div>\r\n\r\n<style>\r\n\t.toast {\r\n\t\ttop: 10%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\tposition: absolute;\r\n\t\tz-index: 10;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t.slice {\r\n\t\tcolor: var(--bg-primary);\r\n\t\tbackground: var(--fg-primary);\r\n\t\tpadding: 16px;\r\n\t\tmargin: 16px auto;\r\n\t\tborder-radius: 4px;\r\n\t\twidth: fit-content;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\texport let index = 0;\r\n\tconst tips = [\r\n\t\t\"You can change the gamemode by clicking Foodle.\",\r\n\t\t\"Hard mode is game mode specific. Turning it on in one game mode won't change it on the others.\",\r\n\t\t\"The Infinite word resets every time you reload the page\",\r\n\t\t\"Double tap or right click a word on the board to learn its definition.\",\r\n\t\t\"Hard mode can be enabled during a game if you haven't violated the hard mode rules yet.\",\r\n\t\t\"Double tap or right click the next row to see how many possible words can be played there, if you use all the previous information.\",\r\n\t\t\"Because words are chosen from the list randomly it is possible to get the same word again.\",\r\n\t\t\"When you see the refresh button in the top left corner it means a new word is ready.\",\r\n\t\t\"Make sure to read carefully the words are food *Related* that doesn't mean it's the name of a dish\",\r\n\t\t\"Everyone has the same Daily/Hourly word at the same time. Your word #103 is the same as everyone else's #103.\",\r\n\t\t\"There are more valid guesses than possible words, ie. not all 5 letter words can be selected as an answer by the game.\",\r\n\t\t\"Historical games don't count towards your stats. Historical games are when you follow a link to a specific game number.\",\r\n\t];\r\n\t\texport const length = tips.length;\r\n</script>\r\n\r\n<div class=\"outer\">\r\n    <div class=\"number\">Tip {index + 1}/{tips.length}</div>\r\n    <div class=\"tip\">{tips[index]}</div>\r\n    <svg\r\n            class=\"left\"\r\n            on:click={() => (index = (index - 1 + tips.length) % tips.length)}\r\n            viewBox=\"0 0 100 100\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path d=\"M75,0L25,50L75,100z\"/>\r\n    </svg>\r\n    <svg\r\n            class=\"right\"\r\n            on:click={() => (index = (index + 1) % tips.length)}\r\n            viewBox=\"0 0 100 100\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path d=\"M25,0L75,50L25,100z\"/>\r\n    </svg>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\t.outer {\r\n\t\tmargin: 15px auto;\r\n\t\tpadding: 10px 20px;\r\n\t\tmax-width: calc(0.6 * var(--game-width));\r\n\t\tborder: solid 1px var(--border-secondary);\r\n\t\tbackground: var(--bg-secondary);\r\n\t\tborder-radius: 4px;\r\n\t\tposition: relative;\r\n\t}\r\n\t.number {\r\n\t\ttext-align: center;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t.left,\r\n\t.right {\r\n\t\tcursor: pointer;\r\n\t\tposition: absolute;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground: var(--fg-primary);\r\n\t\tfill: var(--bg-primary);\r\n\t\theight: 45px;\r\n\t\tpadding: 10px 0;\r\n\t\ttop: 50%;\r\n\t}\r\n\t.left {\r\n\t\tleft: 0;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t}\r\n\t.right {\r\n\t\tright: 0;\r\n\t\ttransform: translate(50%, -50%);\r\n\t}\r\n\t.tip {\r\n\t\ttext-align: center;\r\n\t\tmin-height: 70px;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\n    export let VersionOutDated: boolean = true\n    let filename: string\n    let version;\n    import {getContext, onMount} from 'svelte';\n\n    onMount(() => {\n        setInterval(CompareVersions, 86400000) //Check the latest version once a day\n    });\n\n    async function GetLatestVersion() {    // TODO: change this to the foodle api when ready\n        const data = await fetch(`https://foodle-website-api.herokuapp.com/v1/foodle/version`, {\n            mode: \"no-cors\",\n        });\n        if (data.ok) {\n            let json = await data.json();\n            console.log(`Server Version: ${json['version']}`)\n            return version = json['version']\n        }\n\n    }\n\n    export function CompareVersions() {\n        version = GetLatestVersion()\n        let LocalVersion;\n        LocalVersion = getContext<string>(\"version\").slice(0, -1);\n        console.log(`Local Version: ${LocalVersion}`)\n        return version !== LocalVersion;\n\n    }\n</script>\n\n<div class:complete={VersionOutDated}>\n    {#if VersionOutDated}\n        <div id=\"OutDatedNotification\">\n            <h1>Your version of foodle is outdated. Your version is {localStorage.getItem(`foodle-version`)} while the\n                newest version is {GetLatestVersion()}</h1>\n            <a class=\"update\">Update</a>\n        </div>\n    {/if}\n\n</div>\n<style>\n    .update {\n        background-color: var(--color-correct);\n    }\n\n    .update:hover {\n        background-color: var(--color-correct);\n    }\n\n    #OutDatedNotification {\n        border-radius: 15px;\n        border: var(--bg-secondary);\n    }\n</style>\n\n","<script lang=\"ts\">\r\n\timport { getContext } from \"svelte\";\r\n\timport { GameMode } from \"../../enums\";\r\n\timport { mode } from \"../../stores\";\r\n\timport { modeData } from \"../../utils\";\r\n\timport GameIcon from \"../GameIcon.svelte\";\r\n\timport type Toaster from \"./Toaster.svelte\";\r\n\r\n\texport let wordNumber: number;\r\n\r\n\tconst toaster: Toaster = getContext(\"toaster\");\r\n\tfunction share() {\r\n\r\n\t\ttoaster.pop(\"Copied\");\r\n\t\tnavigator.clipboard.writeText(`${window.location.href}/${wordNumber}`);\r\n\t}\r\n</script>\r\n\r\n<div on:click={share}>\r\n\t<GameIcon>\r\n\t\t<path\r\n\t\t\td=\"M4.167 4.167c-1.381 1.381-1.381 3.619 0 5L6.5 11.5a1.18 1.18 0 0 1 0 1.667 1.18 1.18 0 0 1-1.667 0L2.5 10.833C.199 8.532.199 4.801 2.5 2.5s6.032-2.301 8.333 0l3.333 3.333c2.301 2.301 2.301 6.032 0 8.333a1.18 1.18 0 0 1-1.667 0 1.18 1.18 0 0 1 0-1.667c1.381-1.381 1.381-3.619 0-5L9.167 4.167c-1.381-1.381-3.619-1.381-5 0zm5.667 14c-2.301-2.301-2.301-6.032 0-8.333a1.18 1.18 0 0 1 1.667 0 1.18 1.18 0 0 1 0 1.667c-1.381 1.381-1.381 3.619 0 5l3.333 3.333c1.381 1.381 3.619 1.381 5 0s1.381-3.619 0-5L17.5 12.5a1.18 1.18 0 0 1 0-1.667 1.18 1.18 0 0 1 1.667 0l2.333 2.333c2.301 2.301 2.301 6.032 0 8.333s-6.032 2.301-8.333 0l-3.333-3.333z\"></path>\r\n\t</GameIcon>\r\n\tCopy link to this game ({modeData.modes[$mode].name} #{wordNumber})\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tcolor: var(--fg-secondary);\r\n\t\tfont-size: var(--fs-regular);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tgap: 10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\texport let stat: number | string;\r\n\texport let name: string;\r\n</script>\r\n\r\n<section>\r\n\t<div class=\"stat\">{stat}</div>\r\n\t<div class=\"name\">{name}</div>\r\n</section>\r\n\r\n<style>\r\n\tsection {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\twidth: 60px;\r\n\t}\r\n\t.stat {\r\n\t\tfont-size: var(--fs-large);\r\n\t}\r\n\t.name {\r\n\t\ttext-align: center;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { mode } from \"../../../stores\";\r\n\timport { modeData } from \"../../../utils\";\r\n\r\n\timport Stat from \"./Stat.svelte\";\r\n\texport let data: Stats;\r\n\r\n\tlet stats: [string, string | number][];\r\n\t$: {\r\n\t\tstats = [\r\n\t\t\t[\"Played\", data.played],\r\n\t\t\t[\"Win %\", Math.round(((data.played - data.guesses.fail) / data.played) * 100) || 0],\r\n\t\t\t[\r\n\t\t\t\t\"Average Guesses\",\r\n\t\t\t\t(\r\n\t\t\t\t\tObject.entries(data.guesses).reduce((a, b) => {\r\n\t\t\t\t\t\tif (!isNaN(parseInt(b[0]))) {\r\n\t\t\t\t\t\t\treturn a + parseInt(b[0]) * b[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn a;\r\n\t\t\t\t\t}, 0) / data.played || 0\r\n\t\t\t\t).toFixed(1),\r\n\t\t\t],\r\n\t\t];\r\n\t\tif (data.guesses.fail > 0) {\r\n\t\t\tstats.push([\"Lost\", data.guesses.fail]);\r\n\t\t}\r\n\t\tif (\"streak\" in data) {\r\n\t\t\tstats.push([\"Current Streak\", data.streak]);\r\n\t\t\tstats.push([\"Max Streak\", data.maxStreak]);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<h3>Statistics ({modeData.modes[$mode].name})</h3>\r\n<div>\r\n\t{#each stats as stat}\r\n\t\t<Stat name={stat[0]} stat={stat[1]} />\r\n\t{/each}\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tgap: 8px;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\texport let guesses = 0;\r\n\texport let distribution: Guesses;\r\n\texport let active: boolean;\r\n\r\n\t$: max = Math.max(...Object.values(distribution));\r\n</script>\r\n\r\n<h3>guess distribution</h3>\r\n<div class=\"container\">\r\n\t{#each Object.entries(distribution) as guess, i (guess[0])}\r\n\t\t{#if !isNaN(parseInt(guess[0]))}\r\n\t\t\t<div class=\"graph\">\r\n\t\t\t\t<span class=\"guess\">{guess[0]}</span>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"bar\"\r\n\t\t\t\t\tclass:this={parseInt(guess[0]) === guesses && !active}\r\n\t\t\t\t\tstyle=\"width: {(guess[1] / max) * 100}%;\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{guess[1]}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t{/each}\r\n</div>\r\n\r\n<style>\r\n\t.guess {\r\n\t\tdisplay: grid;\r\n\t\tplace-items: center;\r\n\t}\r\n\t.container {\r\n\t\twidth: 80%;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n\t.graph {\r\n\t\theight: 20px;\r\n\t\tdisplay: flex;\r\n\t\tgap: 4px;\r\n\t}\r\n\t.bar {\r\n\t\tmin-width: 8.5%;\r\n\t\ttransition: width 0.3s ease-out;\r\n\t\tbackground: var(--color-absent);\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: end;\r\n\t\talign-items: center;\r\n\t\tpadding-right: 8px;\r\n\t}\r\n\t.bar.this {\r\n\t\tbackground: var(--color-correct);\r\n\t}\r\n</style>\r\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","<script>\n  import Cookies from 'js-cookie';\n  import { fade } from 'svelte/transition';\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { validate } from '../../utils';\n\n  const dispatch = createEventDispatcher();\n\n  export let cookieName = 'gdpr_settings';\n\n  let shown = false;\n  let settingsShown = false;\n\n  export let heading = 'GDPR Cookie Policy';\n  export let description_1 =\n          'We use cookies to offer a better browsing experience, analyze site traffic and provide statistics for Foodle. By Continuing, you consent to our ';\n  export let description_2 = '& use of cookies.';\n\n  export let categories = {\n    analytics: function () {\n      console.log('analytics accepted');\n    },\n    statistics: function () {\n      console.log('statistics accepted');\n    },\n    necessary: function () {\n      console.log('necessary accepted');\n    }\n  };\n\n  export let cookieConfig = {};\n\n  const defaults = {\n    sameSite: 'strict'\n  };\n\n  export let choices = {};\n  const choicesDefaults = {\n    necessary: {\n      label: 'Necessary cookies',\n      description: 'Used for cookie control.',\n      value: true\n    },\n    statistics: {\n      label: 'statistics cookies',\n      description: 'Used for Statistics purposes. Such as keeping your foodle score',\n      value: true\n    },\n    analytics: {\n      label: 'Analytics cookies',\n      description:\n              'Used to control Google Analytics, a 3rd party tool offered by Google to analyse user behavior.',\n      value: true\n    }\n  };\n\n  $: choicesMerged = Object.assign({}, choicesDefaults, choices);\n\n  $: choicesArr = Object.values(choicesMerged)\n          .map((item, index) => {\n            return Object.assign(\n                    {},\n                    item,\n                    { id: Object.keys(choicesMerged)[index] }\n            );\n          });\n\n  $: cookieChoices = choicesArr.reduce((result, item, index, array) => {\n    result[item.id] = item.value ? item.value : false;\n    return result;\n  }, {});\n\n  export let acceptLabel = 'Continue';\n  export let settingsLabel = 'Types of Cookies Used';\n  export let closeLabel = 'Close';\n\n  export function show() {\n    shown = true;\n  }\n\n  onMount(() => {\n    if (!cookieName) {\n      throw new Error('You must set gdpr cookie name');\n    }\n\n    const cookie = Cookies.get(cookieName);\n    if (!cookie) {\n      show();\n    }\n\n    try {\n      const { choices } = JSON.parse(cookie);\n      const valid = validate(cookieChoices, choices);\n\n      if (!valid) {\n        throw new Error('cookie consent has changed');\n      }\n\n      execute(choices);\n    } catch (e) {\n      removeCookie();\n      show();\n    }\n  });\n\n  function setCookie(choices) {\n    const expires = new Date();\n    expires.setDate(expires.getDate() + 365);\n\n    const options = Object.assign({}, defaults, cookieConfig, { expires });\n    Cookies.set(cookieName, JSON.stringify({ choices }), options);\n  }\n\n  function removeCookie() {\n    const { path } = cookieConfig;\n    Cookies.remove(cookieName, Object.assign({}, path ? { path } : {}));\n  }\n\n  function execute(chosen) {\n    const types = Object.keys(cookieChoices);\n\n    types.forEach(t => {\n      const agreed = chosen[t];\n      if (choicesMerged[t]) {\n        choicesMerged[t].value = agreed;\n      }\n      if (agreed) {\n        categories[t] && categories[t]();\n        dispatch(`${t}`);\n      }\n    });\n    shown = false;\n  }\n\n  function choose() {\n    setCookie(cookieChoices);\n    execute(cookieChoices);\n  }\n</script>\n\n{#if shown}\n  <div class=\"cookieConsentWrapper\" transition:fade>\n    <div class=\"cookieConsent\">\n      <div class=\"cookieConsent__Left\">\n        <div class=\"cookieConsent__Content\">\n          <h4 class=\"cookieConsent__Title\">{heading}</h4>\n          <br>\n          <p class=\"cookieConsent__Description\">\n            {@html description_1}\n          </p>\n          <a href=\"./privacy.html\">Privacy Policy</a>\n          <p class=\"cookieConsent__Description\">\n            {@html description_2}\n          </p>\n        </div>\n      </div>\n      <div class=\"cookieConsent__Right\">\n        <button\n                type=\"button\"\n                class=\"cookieConsent__Button\"\n                on:click={() => { settingsShown = true } }>\n          {settingsLabel}\n        </button>\n        <button type=\"submit\" class=\"cookieConsent__Button\" on:click={choose}>\n          {acceptLabel}\n        </button>\n      </div>\n    </div>\n  </div>\n{/if}\n\n{#if settingsShown}\n  <div class=\"cookieConsentOperations\" transition:fade>\n    <div class=\"cookieConsentOperations__List\">\n      {#each choicesArr as choice}\n        {#if Object.hasOwnProperty.call(choicesMerged, choice.id) && choicesMerged[choice.id]}\n          <div\n                  class=\"cookieConsentOperations__Item\"\n                  class:disabled={true}>\n            <input\n                    type=\"checkbox\"\n                    id={`gdpr-check-${choice.id}`}\n                    bind:checked={choicesMerged[choice.id].value}\n                    disabled/>      <!-- add logic to actually disable the cookies maybe-->\n            <label for={`gdpr-check-${choice.id}`}>{choice.label}</label>\n            <span class=\"cookieConsentOperations__ItemLabel\">\n            {choice.description}\n          </span>\n          </div>\n        {/if}\n      {/each}\n      <button\n              type=\"submit\"\n              class=\"cookieConsent__Button cookieConsent__Button--Close\"\n              on:click={() => { settingsShown = false } }>\n        {closeLabel}\n      </button>\n    </div>\n  </div>\n{/if}\n","<script lang=\"ts\">\r\n    import Header from \"./Header.svelte\";\r\n    import {Board} from \"./board\";\r\n    import {Keyboard} from \"./keyboard\";\r\n    import Modal from \"./Modal.svelte\";\r\n    import {getContext, onMount, setContext} from \"svelte\";\r\n    import {Settings} from \"./settings\";\r\n    import {\r\n        Share,\r\n        Seperator,\r\n        Definition,\r\n        Contact,\r\n        ChangeLog,\r\n        Tutorial,\r\n        Statistics,\r\n        Distribution,\r\n        Timer,\r\n        Toaster,\r\n        ShareGame,\r\n        Updater,\r\n        Tips,\r\n    } from \"./widgets\";\r\n    import {\r\n        contractNum,\r\n        DELAY_INCREMENT,\r\n        PRAISE,\r\n        getState,\r\n        modeData,\r\n        checkHardMode,\r\n        ROWS,\r\n        COLS,\r\n        newSeed,\r\n        createNewGame,\r\n        seededRandomInt,\r\n        createLetterStates,\r\n        words,\r\n    } from \"../utils\";\r\n    import {letterStates, settings, mode} from \"../stores\";\r\n    import GdprBanner from './widgets/gdprCookies.svelte'\r\n\r\n    export let word: string;\r\n    export let showStats: boolean = false;\r\n    export let stats: Stats;\r\n    export let game: GameState;\r\n    export let toaster: Toaster;\r\n    setContext(\"toaster\", toaster);\r\n    const version = getContext<string>(\"version\");\r\n    // implement transition delay on keys\r\n    const delay = DELAY_INCREMENT * ROWS + 800;\r\n    let showTutorial = $settings.tutorial === 3;\r\n    export let showContact = false;\r\n    export let showChangeLog = false;\r\n    let showSettings = false;\r\n    let showRefresh = false;\r\n    let showCookieBanner = true;\r\n    let board: Board;\r\n    let timer: Timer;\r\n    let tips: Tips;\r\n    let tip = 0;\r\n\r\n    function setContact(option: boolean) {\r\n        showContact = option\r\n    }\r\n\r\n    function setChangeLogVisibility(option: boolean) {\r\n        showChangeLog = option\r\n    }\r\n\r\n    window.addEventListener('hashchange', function () {\r\n        if (window.location.hash.substring(1) === 'contact') {\r\n            showContact = true\r\n        }\r\n    });\r\n\r\n    $: if (showSettings && tips) tip = Math.floor(tips.length * Math.random());\r\n\r\n    function submitWord() {\r\n        if (game.board.words[game.guesses].length !== COLS) {\r\n            toaster.pop(\"Not enough letters\");\r\n            board.shake(game.guesses);\r\n            //Checks if the word is missing letters\r\n            //console.log(game.board.words[game.guesses])  //DEBUG\r\n            //console.log(game.guesses)\r\n            //console.log('wordslmao')\r\n            //console.log(game.board.words)\r\n        } else if (words.contains(game.board.words[game.guesses])) {       //wordlist contains the word\r\n            if (game.guesses > 0) {\r\n                const hm = checkHardMode(game.board, game.guesses);\r\n                if ($settings.hard[$mode]) {\r\n                    if (hm.type === \"🟩\") {\r\n                        toaster.pop(\r\n                            `${contractNum(hm.pos + 1)} letter must be ${hm.char.toUpperCase()}`\r\n                        );\r\n                        board.shake(game.guesses);\r\n                        return;\r\n                    } else if (hm.type === \"🟨\") {\r\n                        toaster.pop(`Guess must contain ${hm.char.toUpperCase()}`);\r\n                        board.shake(game.guesses);\r\n                        return;\r\n                    }\r\n                } else if (hm.type !== \"⬛\") {\r\n                    game.validHard = false;\r\n                }\r\n            }\r\n            const state = getState(word, game.board.words[game.guesses]);\r\n            game.board.state[game.guesses] = state;\r\n            state.forEach((e, i) => {\r\n                const ls = $letterStates[game.board.words[game.guesses][i]];\r\n                if (ls === \"🔳\" || e === \"🟩\") {\r\n                    $letterStates[game.board.words[game.guesses][i]] = e;\r\n                }\r\n            });\r\n            ++game.guesses;\r\n            if (game.board.words[game.guesses - 1] === word) win();\r\n            else if (game.guesses === ROWS) lose();\r\n        } else {\r\n            toaster.pop(\"Not in word list\");\r\n            board.shake(game.guesses);\r\n        }\r\n    }\r\n\r\n    function win() {\r\n        // ga('send', 'event', 'game', 'foodle_win', $mode);\r\n        board.bounce(game.guesses - 1);\r\n        game.active = false;\r\n        setTimeout(\r\n            () => toaster.pop(PRAISE[game.guesses - 1]),\r\n            DELAY_INCREMENT * COLS + DELAY_INCREMENT\r\n        );\r\n        setTimeout(() => (showStats = true), delay * 1.4);\r\n        if (!modeData.modes[$mode].historical) {\r\n            ++stats.guesses[game.guesses];\r\n            ++stats.played;\r\n            if (\"streak\" in stats) {\r\n                stats.streak =\r\n                    modeData.modes[$mode].seed - stats.lastGame > modeData.modes[$mode].unit\r\n                        ? 1\r\n                        : stats.streak + 1;\r\n                if (stats.streak > stats.maxStreak) stats.maxStreak = stats.streak;\r\n            }\r\n            stats.lastGame = modeData.modes[$mode].seed;\r\n            localStorage.setItem(`stats-${$mode}`, JSON.stringify(stats));\r\n        }\r\n    }\r\n\r\n    function lose() {\r\n        // \tga('send', 'event', 'game', 'foodle_lose', $mode);\r\n        game.active = false;\r\n        setTimeout(() => (showStats = true), delay);\r\n        if (!modeData.modes[$mode].historical) {\r\n            ++stats.guesses.fail;\r\n            ++stats.played;\r\n            if (\"streak\" in stats) stats.streak = 0;\r\n            stats.lastGame = modeData.modes[$mode].seed;\r\n            localStorage.setItem(`stats-${$mode}`, JSON.stringify(stats));\r\n        }\r\n    }\r\n\r\n    function concede() {\r\n        //\tga('send', 'event', 'game', 'foodle_give_up', $mode);\r\n        showSettings = false;\r\n        setTimeout(() => (showStats = true), DELAY_INCREMENT);\r\n        lose();\r\n    }\r\n\r\n    function reload() {\r\n        modeData.modes[$mode].historical = false;\r\n        modeData.modes[$mode].seed = newSeed($mode);\r\n        game = createNewGame($mode);\r\n        word = words.words[seededRandomInt(0, words.words.length, modeData.modes[$mode].seed)];\r\n        $letterStates = createLetterStates();\r\n        showStats = false;\r\n        showRefresh = false;\r\n        timer.reset($mode);\r\n    }\r\n\r\n    onMount(() => {\r\n        if (!game.active) setTimeout(() => (showStats = true), delay);\r\n    });\r\n    // $: toaster.pop(word);\r\n</script>\r\n\r\n<svelte:body on:click={board.hideCtx} on:contextmenu={board.hideCtx}/>\r\n\r\n<main class:guesses={game.guesses !== 0} style=\"--rows: {ROWS}; --cols: {COLS}\">\r\n\r\n    <Header\r\n            bind:showRefresh\r\n            on:closeTutPopUp|once={() => ($settings.tutorial = 1)}\r\n            on:reload={reload}\r\n            on:settings={() => (showSettings = true)}\r\n            on:stats={() => (showStats = true)}\r\n            on:tutorial={() => (showTutorial = true)}\r\n            showStats={stats.played > 0 || (modeData.modes[$mode].historical && !game.active)}\r\n            tutorial={$settings.tutorial === 2}\r\n    />\r\n    <Board\r\n            bind:this={board}\r\n            bind:value={game.board.words}\r\n            board={game.board}\r\n            guesses={game.guesses}\r\n            icon={modeData.modes[$mode].icon}\r\n            on:closeTutPopUp|once={() => ($settings.tutorial = 0)}\r\n            tutorial={$settings.tutorial === 1}\r\n    />\r\n    <Keyboard\r\n            bind:value={game.board.words[game.guesses === ROWS ? 0 : game.guesses]}\r\n            disabled={!game.active || $settings.tutorial === 3}\r\n            on:esc={() => {\r\n\t\t\tshowTutorial = false;\r\n\t\t\tshowStats = false;\r\n\t\t\tshowSettings = false;\r\n\t\t\tshowContact = false;\r\n            showChangeLog = false;\r\n\t\t}}\r\n            on:keystroke={() => {\r\n\t\t\tif ($settings.tutorial) $settings.tutorial = 0;\r\n\t\t\tboard.hideCtx();\r\n\t\t}}\r\n            on:submitWord={submitWord}\r\n    />\r\n</main>\r\n\r\n<Modal\r\n        bind:visible={showTutorial}\r\n        fullscreen={$settings.tutorial === 0}\r\n        on:close|once={() => $settings.tutorial === 3 && --$settings.tutorial}>\r\n\r\n    <Tutorial on:changelog={() => {\r\n\t\tshowTutorial = false;\r\n\t\tshowChangeLog = true;}}\r\n              on:contact={() => {\r\n\t\tshowTutorial = false;\r\n\t\tshowContact = true;}}\r\n              visible={showTutorial}\r\n    />\r\n</Modal>\r\n<GdprBanner/>\r\n\r\n<Modal>\r\n\t<Updater/>\r\n</Modal>\r\n\r\n<Modal\r\n        bind:visible={showContact}>\r\n    <Contact visible={showContact}/>\r\n</Modal>\r\n\r\n<Modal\r\n        bind:visible={showChangeLog}>\r\n    <ChangeLog visible={showChangeLog}/>\r\n</Modal>\r\n\r\n<Modal bind:visible={showStats}>\r\n    {#if modeData.modes[$mode].historical}\r\n        <h2 class=\"historical\">Statistics not available for historical games</h2>\r\n    {:else}\r\n        <Statistics data={stats}/>\r\n        <Distribution distribution={stats.guesses} guesses={game.guesses} active={game.active}/>\r\n    {/if}\r\n    <Seperator visible={!game.active}>\r\n        <Timer\r\n                bind:this={timer}\r\n                on:reload={reload}\r\n                on:timeup={() => (showRefresh = true)}\r\n                slot=\"1\"\r\n        />\r\n        <Share slot=\"2\" state={game}/>\r\n    </Seperator>\r\n    <ShareGame wordNumber={game.wordNumber}/>\r\n    {#if !game.active}\r\n        <Definition {word} alternates={2}/>\r\n    {/if}\r\n</Modal>\r\n\r\n<Modal\r\n\r\n        bind:visible={showSettings} fullscreen={true}>\r\n    <Settings on:contact={() => {\r\n\t\tshowSettings = false;\r\n\t\tshowContact = true;}}\r\n              on:showChangeLog={() => {\r\n\t\tshowSettings = false;\r\n\t\tshowChangeLog = true;}}\r\n              state={game}/>\r\n    {#if game.active}\r\n        <div class=\"concede\" on:click={concede}>give up</div>\r\n    {/if}\r\n    <Tips bind:this={tips} index={tip}/>\r\n\r\n    <div slot=\"footer\">\r\n\r\n        <div on:click={() => {\r\n\t\tshowSettings = false;\r\n\t\tshowContact = true;\r\n\t\t}} style=\"text-decoration: underline\">Contact\r\n        </div>\r\n        <div on:click={() => {\r\n\t\tshowSettings = false;\r\n\t\tshowChangeLog = true;\r\n\t\t}} style=\"text-decoration: underline\">ChangeLog\r\n        </div>\r\n        <a href=\"https://www.powerlanguage.co.uk/wordle/\" target=\"_blank\">Original Wordle</a>\r\n        <div>\r\n            <div>v{version}</div>\r\n            <div\r\n                    class=\"word\"\r\n                    on:dblclick={() => {\r\n\t\t\t\t\tlocalStorage.clear();\r\n\t\t\t\t\ttoaster.pop(\"localStorage cleared\");\r\n\t\t\t\t}}\r\n                    title=\"double click to reset your stats\"\r\n            >\r\n                {modeData.modes[$mode].name} Foodle #{game.wordNumber}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</Modal>\r\n\r\n<style lang=\"scss\">\r\n  main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100%;\r\n    max-width: var(--game-width);\r\n    margin: auto;\r\n    position: relative;\r\n  }\r\n\r\n  .historical {\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    padding: 0 20px;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .concede {\r\n    margin-top: 15px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    font-size: var(--fs-medium);\r\n    font-weight: bold;\r\n    padding: 15px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    background-color: var(--red);\r\n\r\n    &:hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport {\r\n\t\tmodeData,\r\n\t\tseededRandomInt,\r\n\t\tcreateDefaultStats,\r\n\t\tcreateNewGame,\r\n\t\tcreateDefaultSettings,\r\n\t\tcreateLetterStates,\r\n\t\tROWS,\r\n\t\tgetWordNumber,\r\n\t\twords,\r\n\t} from \"./utils\";\r\n\timport Game from \"./components/Game.svelte\";\r\n\timport { letterStates, settings, mode } from \"./stores\";\r\n\timport { GameMode } from \"./enums\";\r\n\timport { Toaster } from \"./components/widgets\";\r\n\timport { setContext } from \"svelte\";\r\n\texport let version: string;\r\n\tsetContext(\"version\", version);\r\n\tlocalStorage.setItem(\"version\", version);\r\n\tlet stats: Stats;\r\n\tlet word: string;\r\n\tlet state: GameState;\r\n\tlet showContact: boolean = false;\r\n\r\n\tsettings.set(\r\n\t\t\t(JSON.parse(localStorage.getItem(\"settings\")) as Settings) || createDefaultSettings()\r\n\t);\r\n\tsettings.subscribe((s) => localStorage.setItem(\"settings\", JSON.stringify(s)));\r\n\r\n\tconst hash = window.location.hash.slice(1).split(\"/\");\r\n\tif (window.location.hash.substring(1) === 'contact') {\r\n\t\tshowContact = true;\r\n\r\n\t}\r\n\tconst modeVal: GameMode = !isNaN(GameMode[hash[0]])\r\n\t\t\t? GameMode[hash[0]]\r\n\t\t\t: parseInt(localStorage.getItem(\"mode\")) || modeData.default;\r\n\tmode.set(modeVal);\r\n\t// If this is a link to a specific word make sure that that is the word\r\n\tif (!isNaN(parseInt(hash[1])) && parseInt(hash[1]) < getWordNumber(modeVal)) {\r\n\t\tmodeData.modes[modeVal].seed =\r\n\t\t\t\t(parseInt(hash[1]) - 1) * modeData.modes[modeVal].unit + modeData.modes[modeVal].start;\r\n\t\tmodeData.modes[modeVal].historical = true;\r\n\t}\r\n\tmode.subscribe((m) => {\r\n\t\tlocalStorage.setItem(\"mode\", `${m}`);\r\n\t\twindow.location.hash = GameMode[m];\r\n\t\tstats = (JSON.parse(localStorage.getItem(`stats-${m}`)) as Stats) || createDefaultStats(m);\r\n\t\tword = words.words[seededRandomInt(0, words.words.length, modeData.modes[m].seed)];\r\n\t\tlet temp: GameState;\r\n\t\tif (modeData.modes[m].historical === true) {\r\n\t\t\ttemp = JSON.parse(localStorage.getItem(`state-${m}-h`));\r\n\t\t\tif (!temp || temp.wordNumber !== getWordNumber(m)) {\r\n\t\t\t\tstate = createNewGame(m);\r\n\t\t\t} else {\r\n\t\t\t\tstate = temp;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttemp = JSON.parse(localStorage.getItem(`state-${m}`));\r\n\t\t\tif (!temp || modeData.modes[m].seed - temp.time >= modeData.modes[m].unit) {\r\n\t\t\t\tstate = createNewGame(m);\r\n\t\t\t} else {\r\n\t\t\t\t// This is for backwards compatibility, can be removed in a day\r\n\t\t\t\tif (!temp.wordNumber) {\r\n\t\t\t\t\ttemp.wordNumber = getWordNumber(m);\r\n\t\t\t\t}\r\n\t\t\t\tstate = temp;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Set the letter states when data for a new game mode is loaded so the keyboard is correct\r\n\t\tconst letters = createLetterStates();\r\n\t\tfor (let row = 0; row < ROWS; ++row) {\r\n\t\t\tfor (let col = 0; col < state.board.words[row].length; ++col) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tletters[state.board.words[row][col]] === \"🔳\" ||\r\n\t\t\t\t\tstate.board.state[row][col] === \"🟩\"\r\n\t\t\t\t) {\r\n\t\t\t\t\tletters[state.board.words[row][col]] = state.board.state[row][col];\r\n\t\t\t\t}\t\t\t}\r\n\t\t}\r\n\t\tletterStates.set(letters);\r\n\t});\r\n\r\n\t$: saveState(state);\r\n\r\n\tfunction saveState(state: GameState) {\r\n\t\tif (modeData.modes[$mode].historical) {\r\n\t\t\tlocalStorage.setItem(`state-${$mode}-h`, JSON.stringify(state));\r\n\t\t} else {\r\n\t\t\tlocalStorage.setItem(`state-${$mode}`, JSON.stringify(state));\r\n\t\t}\r\n\t}\r\n\r\n\tlet toaster: Toaster;\r\n</script>\r\n<Toaster bind:this={toaster} />\r\n{#if toaster}\r\n\t<Game {stats} {word} {showContact} {toaster} bind:game={state}/>\r\n{/if}\r\n","import App from \"./App.svelte\";\r\n\r\nexport default new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n        version: \"1.80\",\r\n    }\r\n});\r\n"],"names":["assign","self","init","this","define","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","words","wordList","Tile","linear","create_if_block_2","create_if_block_1","create_if_block","cache","Cookies"],"mappings":"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"}